print("Smart Readiness Indicator for Buildings")

# print("ASSESOR INFORMATION")
# name = input("Name: ")
# Organisation = input("Organisation: ")

# print("Contact information")
# email_address = input("e-mail address: ")
# telephone_number = input("telephone number(optional): ")

# print("GENERAL BUILDING INFORMATION")
# building_type = input("Building type: ")
# building_usage = input("Building usage: ")
# location = input("Location: ")
# from location we want to specify climate zone

# net_floor = input("Net floor area of the building: ")
# year_construction = input("Year of construction: ")
# building_state = input("Building state: ")
# brief_description = input("Please provide a brief description of the building: ")
# address = input("Address: ")
# preferred_weightings = input("Preferred weightings: ")

# print("TRIAGE PROCESS")
print("")
print("Are the following technical building systems present in your building?")
# print("If not,are they mandatory for new constructions in your country of residence?")
print("")

while True:
    print("Domain: Heating")
    print("")
    HE = input("Heating system \n(a) yes \n(b) no \n[a/b]?: ")

    if HE in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if HE == "a":
    while True:
        print("")
        ET = input("Emission type \n(a) TABS(Thermally Activated Building System)"
                   "\n(b) Other hydronic system (e.g. radiators) "
                   "\n(c) Non-hydronic system (e.g. all-air) \n[a/b/c]? :")
        if ET in ['a', 'b', 'c']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        PT = input("Production type: \n(a) District heating"
                   "\n(b) Heat Pump"
                   "\n(c) Central heating – combustion \n(d) Central heating – other"
                   "\n(e) Decentral heating (e.g. stoves) \n[a/b/c/d/e]? :")

        if PT in ['a', 'b', 'c', 'd', 'e']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        TE = input("Thermal energy storage: \n(a) Storage present \n(b) No storage present \n[a/b]? :")
        print("")
        if TE in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if ET == "a" and PT == "a" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "b" and TE == "a":
        # print("Heating S1 and S2b and S3 and S4")
        print("")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2b
        print("Heat generator control (for heat pumps)")
        print("")

        while True:
            HE2BLE = input("Choose:\n(a) On/Off-control of heat generator."
                           "\n(b) Multi-stage control of heat generator capacity depending on the load or demand "
                           "(e.g. on/off of several compressors)."
                           "\n(c) Variable control of heat generator capacity depending on the load or demand "
                           "(e.g. hot gas bypass, inverter frequency control)."
                           "\n[a/b/c]? : ")
            if HE2BLE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE2BLE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 0
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 0
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 1
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 1
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 2
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 2
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # Heating 2B
        HE2B_impact_weighting_energy_saving = HE2BLE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2B_impact_weighting_flexibility_for_the_grid_and_storage = HE2BLE_Flexibility * (HE_WE_flexibility / 100)
        HE2B_impact_weighting_comfort = HE2BLE_Comfort * (HE_WE_comfort / 100)
        HE2B_impact_weighting_convenience = HE2BLE_Convenience * (HE_WE_convenience / 100)
        HE2B_impact_weighting_wellbeing_and_health = HE2BLE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2B_impact_weighting_maintenance_and_fault_prediction = HE2BLE_Maintenance * (HE_WE_maintenance / 100)
        HE2B_impact_weighting_information_to_occupants = HE2BLE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2B_impact_scores_energy_saving = HE2B_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2B_impact_scores_flexibility_for_the_grid_and_storage = HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                  * IM_energy_savings_on_site

        HE2B_impact_scores_comfort = HE2B_impact_weighting_comfort * IM_energy_savings_on_site

        HE2B_impact_scores_convenience = HE2B_impact_weighting_convenience * IM_energy_savings_on_site

        HE2B_impact_scores_wellbeing_and_health = HE2B_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2B_impact_scores_maintenance_and_fault_prediction = HE2B_impact_weighting_maintenance_and_fault_prediction \
                                                              * IM_energy_savings_on_site

        HE2B_impact_scores_information_to_occupants = HE2B_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2BLE_Max_EnergySavings = 2
        HE2BLE_Max_Flexibility = 0
        HE2BLE_Max_Comfort = 2
        HE2BLE_Max_Convenience = 0
        HE2BLE_Max_WellbeingAndHealth = 0
        HE2BLE_Max_Maintenance = 0
        HE2BLE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2B_Max_SRI_IM_Scores_EnergySavings = HE2BLE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2B_Max_SRI_IM_Scores_Flexibility = HE2BLE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2B_Max_SRI_IM_Scores_Comfort = HE2BLE_Max_Comfort * (HE_WE_comfort / 100)

        HE2B_Max_SRI_IM_Scores_Convenience = HE2BLE_Max_Convenience * (HE_WE_convenience / 100)

        HE2B_Max_SRI_IM_Scores_WellbeingAndHealth = HE2BLE_Max_WellbeingAndHealth * (
                    HE_WE_wellbeing_and_health / 100)

        HE2B_Max_SRI_IM_Scores_Maintenance = HE2BLE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2B_Max_SRI_IM_Scores_InformationToOccupants = HE2BLE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2B_Max_impact_scores_energy_saving = HE2B_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2B_Max_SRI_IM_Scores_Flexibility * \
                                                                      IM_energy_savings_on_site

        HE2B_Max_impact_scores_comfort = HE2B_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2B_Max_impact_scores_convenience = HE2B_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2B_Max_impact_scores_wellbeing_and_health = HE2B_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2B_Max_impact_scores_maintenance_and_fault_prediction = HE2B_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2B_Max_impact_scores_information_to_occupants = HE2B_Max_SRI_IM_Scores_InformationToOccupants * \
                                                          IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2BLE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2BLE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2BLE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2BLE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2BLE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2BLE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2B_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2B_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2B_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2B_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2B_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2B_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2B_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2B_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2B_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2B_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2B_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2B_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2B_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2BLE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2BLE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2BLE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2BLE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2BLE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2BLE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2BLE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2B_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2B_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2B_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2B_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2B_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2B_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2B_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2B_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2B_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2B_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2B_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2B_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2B_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "c" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "d" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "e" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "a" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "b" and TE == "a":
        # print("Heating S1 and S2b and S3 and S4")
        print("")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2b
        print("Heat generator control (for heat pumps)")
        print("")

        while True:
            HE2BLE = input("Choose:\n(a) On/Off-control of heat generator."
                           "\n(b) Multi-stage control of heat generator capacity depending on the load or demand "
                           "(e.g. on/off of several compressors)."
                           "\n(c) Variable control of heat generator capacity depending on the load or demand "
                           "(e.g. hot gas bypass, inverter frequency control)."
                           "\n[a/b/c]? : ")
            if HE2BLE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE2BLE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 0
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 0
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 1
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 1
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 2
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 2
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2B
        HE2B_impact_weighting_energy_saving = HE2BLE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2B_impact_weighting_flexibility_for_the_grid_and_storage = HE2BLE_Flexibility * (HE_WE_flexibility / 100)
        HE2B_impact_weighting_comfort = HE2BLE_Comfort * (HE_WE_comfort / 100)
        HE2B_impact_weighting_convenience = HE2BLE_Convenience * (HE_WE_convenience / 100)
        HE2B_impact_weighting_wellbeing_and_health = HE2BLE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2B_impact_weighting_maintenance_and_fault_prediction = HE2BLE_Maintenance * (HE_WE_maintenance / 100)
        HE2B_impact_weighting_information_to_occupants = HE2BLE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2B_impact_scores_energy_saving = HE2B_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2B_impact_scores_flexibility_for_the_grid_and_storage = HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                  * IM_energy_savings_on_site

        HE2B_impact_scores_comfort = HE2B_impact_weighting_comfort * IM_energy_savings_on_site

        HE2B_impact_scores_convenience = HE2B_impact_weighting_convenience * IM_energy_savings_on_site

        HE2B_impact_scores_wellbeing_and_health = HE2B_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2B_impact_scores_maintenance_and_fault_prediction = HE2B_impact_weighting_maintenance_and_fault_prediction \
                                                              * IM_energy_savings_on_site

        HE2B_impact_scores_information_to_occupants = HE2B_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2BLE_Max_EnergySavings = 2
        HE2BLE_Max_Flexibility = 0
        HE2BLE_Max_Comfort = 2
        HE2BLE_Max_Convenience = 0
        HE2BLE_Max_WellbeingAndHealth = 0
        HE2BLE_Max_Maintenance = 0
        HE2BLE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2B_Max_SRI_IM_Scores_EnergySavings = HE2BLE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2B_Max_SRI_IM_Scores_Flexibility = HE2BLE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2B_Max_SRI_IM_Scores_Comfort = HE2BLE_Max_Comfort * (HE_WE_comfort / 100)

        HE2B_Max_SRI_IM_Scores_Convenience = HE2BLE_Max_Convenience * (HE_WE_convenience / 100)

        HE2B_Max_SRI_IM_Scores_WellbeingAndHealth = HE2BLE_Max_WellbeingAndHealth * (
                HE_WE_wellbeing_and_health / 100)

        HE2B_Max_SRI_IM_Scores_Maintenance = HE2BLE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2B_Max_SRI_IM_Scores_InformationToOccupants = HE2BLE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2B_Max_impact_scores_energy_saving = HE2B_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2B_Max_SRI_IM_Scores_Flexibility * \
                                                                      IM_energy_savings_on_site

        HE2B_Max_impact_scores_comfort = HE2B_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2B_Max_impact_scores_convenience = HE2B_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2B_Max_impact_scores_wellbeing_and_health = HE2B_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2B_Max_impact_scores_maintenance_and_fault_prediction = HE2B_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2B_Max_impact_scores_information_to_occupants = HE2B_Max_SRI_IM_Scores_InformationToOccupants * \
                                                          IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2BLE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2BLE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2BLE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2BLE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2BLE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2BLE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2B_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2B_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2B_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2B_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2B_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2B_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2B_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2B_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2B_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2B_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2B_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2B_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2B_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2BLE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2BLE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2BLE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2BLE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2BLE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2BLE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2BLE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2B_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2B_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2B_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2B_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2B_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2B_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2B_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2B_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2B_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2B_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2B_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2B_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2B_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "c" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "d" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "e" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "a" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "b" and TE == "a":
        # print("Heating S1 and S2b and S3 and S4")
        print("")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2b
        print("Heat generator control (for heat pumps)")
        print("")

        while True:
            HE2BLE = input("Choose:\n(a) On/Off-control of heat generator."
                           "\n(b) Multi-stage control of heat generator capacity depending on the load or demand "
                           "(e.g. on/off of several compressors)."
                           "\n(c) Variable control of heat generator capacity depending on the load or demand "
                           "(e.g. hot gas bypass, inverter frequency control)."
                           "\n[a/b/c]? : ")
            if HE2BLE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE2BLE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 0
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 0
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 1
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 1
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 2
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 2
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2B
        HE2B_impact_weighting_energy_saving = HE2BLE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2B_impact_weighting_flexibility_for_the_grid_and_storage = HE2BLE_Flexibility * (HE_WE_flexibility / 100)
        HE2B_impact_weighting_comfort = HE2BLE_Comfort * (HE_WE_comfort / 100)
        HE2B_impact_weighting_convenience = HE2BLE_Convenience * (HE_WE_convenience / 100)
        HE2B_impact_weighting_wellbeing_and_health = HE2BLE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2B_impact_weighting_maintenance_and_fault_prediction = HE2BLE_Maintenance * (HE_WE_maintenance / 100)
        HE2B_impact_weighting_information_to_occupants = HE2BLE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2B_impact_scores_energy_saving = HE2B_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2B_impact_scores_flexibility_for_the_grid_and_storage = HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                  * IM_energy_savings_on_site

        HE2B_impact_scores_comfort = HE2B_impact_weighting_comfort * IM_energy_savings_on_site

        HE2B_impact_scores_convenience = HE2B_impact_weighting_convenience * IM_energy_savings_on_site

        HE2B_impact_scores_wellbeing_and_health = HE2B_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2B_impact_scores_maintenance_and_fault_prediction = HE2B_impact_weighting_maintenance_and_fault_prediction \
                                                              * IM_energy_savings_on_site

        HE2B_impact_scores_information_to_occupants = HE2B_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2BLE_Max_EnergySavings = 2
        HE2BLE_Max_Flexibility = 0
        HE2BLE_Max_Comfort = 2
        HE2BLE_Max_Convenience = 0
        HE2BLE_Max_WellbeingAndHealth = 0
        HE2BLE_Max_Maintenance = 0
        HE2BLE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2B_Max_SRI_IM_Scores_EnergySavings = HE2BLE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2B_Max_SRI_IM_Scores_Flexibility = HE2BLE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2B_Max_SRI_IM_Scores_Comfort = HE2BLE_Max_Comfort * (HE_WE_comfort / 100)

        HE2B_Max_SRI_IM_Scores_Convenience = HE2BLE_Max_Convenience * (HE_WE_convenience / 100)

        HE2B_Max_SRI_IM_Scores_WellbeingAndHealth = HE2BLE_Max_WellbeingAndHealth * (
                HE_WE_wellbeing_and_health / 100)

        HE2B_Max_SRI_IM_Scores_Maintenance = HE2BLE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2B_Max_SRI_IM_Scores_InformationToOccupants = HE2BLE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2B_Max_impact_scores_energy_saving = HE2B_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2B_Max_SRI_IM_Scores_Flexibility * \
                                                                      IM_energy_savings_on_site

        HE2B_Max_impact_scores_comfort = HE2B_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2B_Max_impact_scores_convenience = HE2B_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2B_Max_impact_scores_wellbeing_and_health = HE2B_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2B_Max_impact_scores_maintenance_and_fault_prediction = HE2B_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2B_Max_impact_scores_information_to_occupants = HE2B_Max_SRI_IM_Scores_InformationToOccupants * \
                                                          IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2BLE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2BLE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2BLE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2BLE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2BLE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2BLE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2B_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2B_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2B_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2B_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2B_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2B_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2B_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2B_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2B_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2B_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2B_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2B_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2B_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2BLE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2BLE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2BLE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2BLE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2BLE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2BLE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2BLE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2B_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2B_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2B_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2B_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2B_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2B_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2B_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2B_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2B_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2B_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2B_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2B_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2B_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "c" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "d" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "e" and TE == "a":
        # print("Heating S1 and S2a and S3 and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S3
        print("Storage and shifting of thermal energy")
        print("")
        while True:
            HE3LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Hw storage vessels controlled based on external signals (from Bacs or grid)."
                          "\n[a/b/c?] : ")
            if HE3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 0
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 1
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        elif HE3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE3LE_EnergySavings = 0
            HE3LE_Flexibility = 2
            HE3LE_Comfort = 0
            HE3LE_Convenience = 0
            HE3LE_WellbeingAndHealth = 0
            HE3LE_Maintenance = 0
            HE3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE3LE_Flexibility))
            print("Comfort: " + str(HE3LE_Comfort))
            print("Convenience: " + str(HE3LE_Convenience))
            print("Health & wellbeing: " + str(HE3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE3LE_Maintenance))
            print("Information to occupants: " + str(HE3LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 3
        HE3_impact_weighting_energy_saving = HE3LE_EnergySavings * (HE_WE_energy_savings / 100)

        HE3_impact_weighting_flexibility_for_the_grid_and_storage = HE3LE_Flexibility * (HE_WE_flexibility / 100)

        HE3_impact_weighting_comfort = HE3LE_Comfort * (HE_WE_comfort / 100)

        HE3_impact_weighting_convenience = HE3LE_Convenience * (HE_WE_convenience / 100)

        HE3_impact_weighting_wellbeing_and_health = HE3LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE3_impact_weighting_maintenance_and_fault_prediction = HE3LE_Maintenance * (HE_WE_maintenance / 100)

        HE3_impact_weighting_information_to_occupants = HE3LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE3_impact_scores_energy_saving = HE3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE3_impact_scores_flexibility_for_the_grid_and_storage = HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE3_impact_scores_comfort = HE3_impact_weighting_comfort * IM_energy_savings_on_site

        HE3_impact_scores_convenience = HE3_impact_weighting_convenience * IM_energy_savings_on_site

        HE3_impact_scores_wellbeing_and_health = HE3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE3_impact_scores_maintenance_and_fault_prediction = HE3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE3_impact_scores_information_to_occupants = HE3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE3LE_Max_EnergySavings = 0
        HE3LE_Max_Flexibility = 2
        HE3LE_Max_Comfort = 0
        HE3LE_Max_Convenience = 0
        HE3LE_Max_WellbeingAndHealth = 0
        HE3LE_Max_Maintenance = 0
        HE3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE3_Max_SRI_IM_Scores_EnergySavings = HE3LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE3_Max_SRI_IM_Scores_Flexibility = HE3LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE3_Max_SRI_IM_Scores_Comfort = HE3LE_Max_Comfort * (HE_WE_comfort / 100)
        HE3_Max_SRI_IM_Scores_Convenience = HE3LE_Max_Convenience * (HE_WE_convenience / 100)
        HE3_Max_SRI_IM_Scores_WellbeingAndHealth = HE3LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE3_Max_SRI_IM_Scores_Maintenance = HE3LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE3_Max_SRI_IM_Scores_InformationToOccupants = HE3LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE3_Max_impact_scores_energy_saving = HE3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE3_Max_impact_scores_flexibility_for_the_grid_and_storage = HE3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE3_Max_impact_scores_comfort = HE3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE3_Max_impact_scores_convenience = HE3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE3_Max_impact_scores_wellbeing_and_health = HE3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE3_Max_impact_scores_maintenance_and_fault_prediction = HE3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE3_Max_impact_scores_information_to_occupants = HE3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################
        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE3LE_EnergySavings \
                                     + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE3LE_Flexibility \
                                   + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE3LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE3LE_Convenience + \
                                   HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE3LE_WellbeingAndHealth + HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE3LE_Maintenance + \
                                   HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants \
                                              + HE3LE_InformationToOccupants + HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving \
                                      + HE3_impact_weighting_energy_saving + HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE3_impact_weighting_comfort + HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE3_impact_weighting_convenience + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE3_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE3_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE3_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE3_impact_scores_energy_saving + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE3_impact_scores_comfort \
                               + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE3_impact_scores_convenience + HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE3_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE3_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE3_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + \
                                         HE3LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE3LE_Max_Flexibility \
                                       + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE3LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + \
                                       HE3LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE3LE_Max_WellbeingAndHealth + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE3LE_Max_Maintenance \
                                       + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE3LE_Max_InformationToOccupants + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings + \
                                          HE3_Max_SRI_IM_Scores_EnergySavings + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE3_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE3_Max_SRI_IM_Scores_Comfort + HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE3_Max_SRI_IM_Scores_Convenience + HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE3_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving + \
                                          HE3_Max_impact_scores_energy_saving + \
                                          HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE3_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE3_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE3_Max_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE3_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "a" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "b" and TE == "b":
        # print("Heating S1 and S2b and S4")
        print("")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2b
        print("Heat generator control (for heat pumps)")
        print("")

        while True:
            HE2BLE = input("Choose:\n(a) On/Off-control of heat generator."
                           "\n(b) Multi-stage control of heat generator capacity depending on the load or demand "
                           "(e.g. on/off of several compressors)."
                           "\n(c) Variable control of heat generator capacity depending on the load or demand "
                           "(e.g. hot gas bypass, inverter frequency control)."
                           "\n[a/b/c]? : ")
            if HE2BLE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE2BLE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 0
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 0
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 1
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 1
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 2
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 2
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2B
        HE2B_impact_weighting_energy_saving = HE2BLE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2B_impact_weighting_flexibility_for_the_grid_and_storage = HE2BLE_Flexibility * (HE_WE_flexibility / 100)
        HE2B_impact_weighting_comfort = HE2BLE_Comfort * (HE_WE_comfort / 100)
        HE2B_impact_weighting_convenience = HE2BLE_Convenience * (HE_WE_convenience / 100)
        HE2B_impact_weighting_wellbeing_and_health = HE2BLE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2B_impact_weighting_maintenance_and_fault_prediction = HE2BLE_Maintenance * (HE_WE_maintenance / 100)
        HE2B_impact_weighting_information_to_occupants = HE2BLE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2B_impact_scores_energy_saving = HE2B_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2B_impact_scores_flexibility_for_the_grid_and_storage = HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                  * IM_energy_savings_on_site

        HE2B_impact_scores_comfort = HE2B_impact_weighting_comfort * IM_energy_savings_on_site

        HE2B_impact_scores_convenience = HE2B_impact_weighting_convenience * IM_energy_savings_on_site

        HE2B_impact_scores_wellbeing_and_health = HE2B_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2B_impact_scores_maintenance_and_fault_prediction = HE2B_impact_weighting_maintenance_and_fault_prediction \
                                                              * IM_energy_savings_on_site

        HE2B_impact_scores_information_to_occupants = HE2B_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2BLE_Max_EnergySavings = 2
        HE2BLE_Max_Flexibility = 0
        HE2BLE_Max_Comfort = 2
        HE2BLE_Max_Convenience = 0
        HE2BLE_Max_WellbeingAndHealth = 0
        HE2BLE_Max_Maintenance = 0
        HE2BLE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2B_Max_SRI_IM_Scores_EnergySavings = HE2BLE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2B_Max_SRI_IM_Scores_Flexibility = HE2BLE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2B_Max_SRI_IM_Scores_Comfort = HE2BLE_Max_Comfort * (HE_WE_comfort / 100)

        HE2B_Max_SRI_IM_Scores_Convenience = HE2BLE_Max_Convenience * (HE_WE_convenience / 100)

        HE2B_Max_SRI_IM_Scores_WellbeingAndHealth = HE2BLE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2B_Max_SRI_IM_Scores_Maintenance = HE2BLE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2B_Max_SRI_IM_Scores_InformationToOccupants = HE2BLE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2B_Max_impact_scores_energy_saving = HE2B_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2B_Max_SRI_IM_Scores_Flexibility * \
                                                                      IM_energy_savings_on_site

        HE2B_Max_impact_scores_comfort = HE2B_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2B_Max_impact_scores_convenience = HE2B_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2B_Max_impact_scores_wellbeing_and_health = HE2B_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2B_Max_impact_scores_maintenance_and_fault_prediction = HE2B_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2B_Max_impact_scores_information_to_occupants = HE2B_Max_SRI_IM_Scores_InformationToOccupants * \
                                                          IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2BLE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2BLE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2BLE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2BLE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2BLE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2B_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2B_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2B_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2B_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2B_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2B_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2B_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2B_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2B_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2B_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2B_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2B_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2B_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2BLE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2BLE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2BLE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2BLE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2BLE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2BLE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2BLE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2B_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2B_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2B_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2B_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2B_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2B_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2B_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2B_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2B_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2B_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2B_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2B_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2B_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "c" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)." \
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * \
                                                       (HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance \

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "d" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)." \
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "a" and PT == "e" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)." \
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance \

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "a" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. " \
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop \
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site \

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction \

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience \

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage \

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "b" and TE == "b":
        # print("Heating S1 and S2b and S4")
        print("")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2b
        print("Heat generator control (for heat pumps)")
        print("")

        while True:
            HE2BLE = input("Choose:\n(a) On/Off-control of heat generator."
                           "\n(b) Multi-stage control of heat generator capacity depending on the load or demand "
                           "(e.g. on/off of several compressors)."
                           "\n(c) Variable control of heat generator capacity depending on the load or demand "
                           "(e.g. hot gas bypass, inverter frequency control)."
                           "\n[a/b/c]? : ")
            if HE2BLE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE2BLE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 0
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 0
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 1
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 1
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 2
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 2
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14 \

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM \
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2B
        HE2B_impact_weighting_energy_saving = HE2BLE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2B_impact_weighting_flexibility_for_the_grid_and_storage = HE2BLE_Flexibility * (HE_WE_flexibility / 100)
        HE2B_impact_weighting_comfort = HE2BLE_Comfort * (HE_WE_comfort / 100)
        HE2B_impact_weighting_convenience = HE2BLE_Convenience * (HE_WE_convenience / 100)
        HE2B_impact_weighting_wellbeing_and_health = HE2BLE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2B_impact_weighting_maintenance_and_fault_prediction = HE2BLE_Maintenance * (HE_WE_maintenance / 100)
        HE2B_impact_weighting_information_to_occupants = HE2BLE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2B_impact_scores_energy_saving = HE2B_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2B_impact_scores_flexibility_for_the_grid_and_storage = HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                  * IM_energy_savings_on_site

        HE2B_impact_scores_comfort = HE2B_impact_weighting_comfort * IM_energy_savings_on_site

        HE2B_impact_scores_convenience = HE2B_impact_weighting_convenience * IM_energy_savings_on_site

        HE2B_impact_scores_wellbeing_and_health = HE2B_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2B_impact_scores_maintenance_and_fault_prediction = HE2B_impact_weighting_maintenance_and_fault_prediction \
                                                              * IM_energy_savings_on_site

        HE2B_impact_scores_information_to_occupants = HE2B_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2BLE_Max_EnergySavings = 2
        HE2BLE_Max_Flexibility = 0
        HE2BLE_Max_Comfort = 2
        HE2BLE_Max_Convenience = 0
        HE2BLE_Max_WellbeingAndHealth = 0
        HE2BLE_Max_Maintenance = 0
        HE2BLE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2B_Max_SRI_IM_Scores_EnergySavings = HE2BLE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2B_Max_SRI_IM_Scores_Flexibility = HE2BLE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2B_Max_SRI_IM_Scores_Comfort = HE2BLE_Max_Comfort * (HE_WE_comfort / 100)

        HE2B_Max_SRI_IM_Scores_Convenience = HE2BLE_Max_Convenience * (HE_WE_convenience / 100)

        HE2B_Max_SRI_IM_Scores_WellbeingAndHealth = HE2BLE_Max_WellbeingAndHealth * (
                HE_WE_wellbeing_and_health / 100)

        HE2B_Max_SRI_IM_Scores_Maintenance = HE2BLE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2B_Max_SRI_IM_Scores_InformationToOccupants = HE2BLE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2B_Max_impact_scores_energy_saving = HE2B_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2B_Max_SRI_IM_Scores_Flexibility * \
                                                                      IM_energy_savings_on_site

        HE2B_Max_impact_scores_comfort = HE2B_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2B_Max_impact_scores_convenience = HE2B_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2B_Max_impact_scores_wellbeing_and_health = HE2B_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2B_Max_impact_scores_maintenance_and_fault_prediction = HE2B_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2B_Max_impact_scores_information_to_occupants = HE2B_Max_SRI_IM_Scores_InformationToOccupants * \
                                                          IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2BLE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2BLE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2BLE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2BLE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2BLE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2B_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2B_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2B_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2B_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2B_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2B_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2B_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2B_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2B_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2B_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2B_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2B_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2B_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2BLE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2BLE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2BLE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2BLE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2BLE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2BLE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2BLE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2B_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2B_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2B_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2B_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2B_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2B_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2B_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2B_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2B_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2B_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2B_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2B_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2B_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + \
                                 sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + sum_HE_MAX_IM_SC_comfort + \
                                 sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + \
                                 sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "c" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "d" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)." \
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "b" and PT == "e" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)." \
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health \

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "a" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. " \
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop \
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site \

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "b" and TE == "b":
        # print("Heating S1 and S2b and S4")
        print("")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2b
        print("Heat generator control (for heat pumps)")
        print("")

        while True:
            HE2BLE = input("Choose:\n(a) On/Off-control of heat generator."
                           "\n(b) Multi-stage control of heat generator capacity depending on the load or demand "
                           "(e.g. on/off of several compressors)."
                           "\n(c) Variable control of heat generator capacity depending on the load or demand "
                           "(e.g. hot gas bypass, inverter frequency control)."
                           "\n[a/b/c]? : ")
            if HE2BLE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HE2BLE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 0
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 0
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 1
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 1
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        elif HE2BLE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2BLE_EnergySavings = 2
            HE2BLE_Flexibility = 0
            HE2BLE_Comfort = 2
            HE2BLE_Convenience = 0
            HE2BLE_WellbeingAndHealth = 0
            HE2BLE_Maintenance = 0
            HE2BLE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2BLE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2BLE_Flexibility))
            print("Comfort: " + str(HE2BLE_Comfort))
            print("Convenience: " + str(HE2BLE_Convenience))
            print("Health & wellbeing: " + str(HE2BLE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2BLE_Maintenance))
            print("Information to occupants: " + str(HE2BLE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data." 
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2B
        HE2B_impact_weighting_energy_saving = HE2BLE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2B_impact_weighting_flexibility_for_the_grid_and_storage = HE2BLE_Flexibility * (HE_WE_flexibility / 100)
        HE2B_impact_weighting_comfort = HE2BLE_Comfort * (HE_WE_comfort / 100)
        HE2B_impact_weighting_convenience = HE2BLE_Convenience * (HE_WE_convenience / 100)
        HE2B_impact_weighting_wellbeing_and_health = HE2BLE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2B_impact_weighting_maintenance_and_fault_prediction = HE2BLE_Maintenance * (HE_WE_maintenance / 100)
        HE2B_impact_weighting_information_to_occupants = HE2BLE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2B_impact_scores_energy_saving = HE2B_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2B_impact_scores_flexibility_for_the_grid_and_storage = HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                  * IM_energy_savings_on_site

        HE2B_impact_scores_comfort = HE2B_impact_weighting_comfort * IM_energy_savings_on_site

        HE2B_impact_scores_convenience = HE2B_impact_weighting_convenience * IM_energy_savings_on_site

        HE2B_impact_scores_wellbeing_and_health = HE2B_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2B_impact_scores_maintenance_and_fault_prediction = HE2B_impact_weighting_maintenance_and_fault_prediction \
                                                              * IM_energy_savings_on_site

        HE2B_impact_scores_information_to_occupants = HE2B_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES \
        HE2BLE_Max_EnergySavings = 2
        HE2BLE_Max_Flexibility = 0
        HE2BLE_Max_Comfort = 2
        HE2BLE_Max_Convenience = 0
        HE2BLE_Max_WellbeingAndHealth = 0
        HE2BLE_Max_Maintenance = 0
        HE2BLE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2B_Max_SRI_IM_Scores_EnergySavings = HE2BLE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2B_Max_SRI_IM_Scores_Flexibility = HE2BLE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2B_Max_SRI_IM_Scores_Comfort = HE2BLE_Max_Comfort * (HE_WE_comfort / 100)

        HE2B_Max_SRI_IM_Scores_Convenience = HE2BLE_Max_Convenience * (HE_WE_convenience / 100)

        HE2B_Max_SRI_IM_Scores_WellbeingAndHealth = HE2BLE_Max_WellbeingAndHealth * (
                HE_WE_wellbeing_and_health / 100)

        HE2B_Max_SRI_IM_Scores_Maintenance = HE2BLE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2B_Max_SRI_IM_Scores_InformationToOccupants = HE2BLE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2B_Max_impact_scores_energy_saving = HE2B_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2B_Max_SRI_IM_Scores_Flexibility * \
                                                                      IM_energy_savings_on_site

        HE2B_Max_impact_scores_comfort = HE2B_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2B_Max_impact_scores_convenience = HE2B_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2B_Max_impact_scores_wellbeing_and_health = HE2B_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2B_Max_impact_scores_maintenance_and_fault_prediction = HE2B_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2B_Max_impact_scores_information_to_occupants = HE2B_Max_SRI_IM_Scores_InformationToOccupants * \
                                                          IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2BLE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2BLE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2BLE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2BLE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2BLE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2B_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2B_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2B_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2B_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2B_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2B_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2B_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2B_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2B_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2B_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2B_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2B_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2B_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2B_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants \
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2BLE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2BLE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2BLE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2BLE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2BLE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2BLE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2BLE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2B_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2B_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2B_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2B_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2B_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2B_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2B_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2B_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2B_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2B_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2B_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2B_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2B_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2B_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "c" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###########################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "d" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load " \
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health \

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

    if ET == "c" and PT == "e" and TE == "b":
        # print("Heating S1 and S2a and S4")
        # Heating-S1
        print("")
        print("Heat emission control")
        print("")

        while True:
            HE1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control (e.g. central thermostat)."
                          "\n(c) Individual room control (e.g. thermostatic valves, or electronic controller)."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if HE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 0
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 0
            HE1LE_Convenience = 0
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 1
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 1
            HE1LE_Convenience = 1
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 2
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 0
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 2
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        elif HE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE1LE_EnergySavings = 3
            HE1LE_Flexibility = 0
            HE1LE_Comfort = 2
            HE1LE_Convenience = 3
            HE1LE_WellbeingAndHealth = 0
            HE1LE_Maintenance = 1
            HE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE1LE_Flexibility))
            print("Comfort: " + str(HE1LE_Comfort))
            print("Convenience: " + str(HE1LE_Convenience))
            print("Health & wellbeing: " + str(HE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE1LE_Maintenance))
            print("Information to occupants: " + str(HE1LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S2a
        print("Heat generator control (all except heat pumps)")
        print("")
        while True:
            HE2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load "
                          "(e.g. depending on supply water temperature set point)."
                          "\n[a/b/c?] : ")
            if HE2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if HE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 0
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 0
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 1
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 1
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        elif HE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE2LE_EnergySavings = 2
            HE2LE_Flexibility = 0
            HE2LE_Comfort = 2
            HE2LE_Convenience = 0
            HE2LE_WellbeingAndHealth = 0
            HE2LE_Maintenance = 0
            HE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE2LE_Flexibility))
            print("Comfort: " + str(HE2LE_Comfort))
            print("Convenience: " + str(HE2LE_Convenience))
            print("Health & wellbeing: " + str(HE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE2LE_Maintenance))
            print("Information to occupants: " + str(HE2LE_InformationToOccupants))
            print("")
            print("")

        # Heating-S4
        print("Report information regarding HEATING system performance")
        print("")

        while True:
            HE4LE = input("Choose:\n(a) None."
                          "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                          "submetering energy usage)."
                          "\n(c) Central or remote reporting of current performance KPIs and historical data."
                          "\n(d) Central or remote reporting of performance evaluation including forecasting "
                          "and/or benchmarking."
                          "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                          "benchmarking; also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if HE4LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HE4LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 0
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 0
            HE4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 0
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 1
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        elif HE4LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HE4LE_EnergySavings = 1
            HE4LE_Flexibility = 0
            HE4LE_Comfort = 0
            HE4LE_Convenience = 1
            HE4LE_WellbeingAndHealth = 0
            HE4LE_Maintenance = 2
            HE4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HE4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HE4LE_Flexibility))
            print("Comfort: " + str(HE4LE_Comfort))
            print("Convenience: " + str(HE4LE_Convenience))
            print("Health & wellbeing: " + str(HE4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HE4LE_Maintenance))
            print("Information to occupants: " + str(HE4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        HE_WE_energy_savings = 11
        HE_WE_flexibility = 13
        HE_WE_comfort = 17
        HE_WE_convenience = 11
        HE_WE_wellbeing_and_health = 0
        HE_WE_maintenance = 14
        HE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT SCORES BY DOMAIN (CALCULATIONS)
        # HEATING SYSTEM
        # Heating 1
        HE1_impact_weighting_energy_saving = HE1LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_impact_weighting_flexibility_for_the_grid_and_storage = HE1LE_Flexibility * (HE_WE_flexibility / 100)
        HE1_impact_weighting_comfort = HE1LE_Comfort * (HE_WE_comfort / 100)
        HE1_impact_weighting_convenience = HE1LE_Convenience * (HE_WE_convenience / 100)
        HE1_impact_weighting_wellbeing_and_health = HE1LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_impact_weighting_maintenance_and_fault_prediction = HE1LE_Maintenance * (HE_WE_maintenance / 100)
        HE1_impact_weighting_information_to_occupants = HE1LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE1_impact_scores_energy_saving = HE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE1_impact_scores_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE1_impact_scores_comfort = HE1_impact_weighting_comfort * IM_energy_savings_on_site

        HE1_impact_scores_convenience = HE1_impact_weighting_convenience * IM_energy_savings_on_site

        HE1_impact_scores_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE1_impact_scores_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE1_impact_scores_information_to_occupants = HE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE1LE_Max_EnergySavings = 3
        HE1LE_Max_Flexibility = 0
        HE1LE_Max_Comfort = 2
        HE1LE_Max_Convenience = 3
        HE1LE_Max_WellbeingAndHealth = 0
        HE1LE_Max_Maintenance = 1
        HE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE1_Max_SRI_IM_Scores_EnergySavings = HE1LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE1_Max_SRI_IM_Scores_Flexibility = HE1LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE1_Max_SRI_IM_Scores_Comfort = HE1LE_Max_Comfort * (HE_WE_comfort / 100)
        HE1_Max_SRI_IM_Scores_Convenience = HE1LE_Max_Convenience * (HE_WE_convenience / 100)
        HE1_Max_SRI_IM_Scores_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE1_Max_SRI_IM_Scores_Maintenance = HE1LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE1_Max_SRI_IM_Scores_InformationToOccupants = HE1LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE1_Max_impact_scores_energy_saving = HE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE1_Max_impact_scores_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE1_Max_impact_scores_comfort = HE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE1_Max_impact_scores_convenience = HE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE1_Max_impact_scores_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE1_Max_impact_scores_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE1_Max_impact_scores_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ##############################################################################################################
        # Heating 2
        HE2_impact_weighting_energy_saving = HE2LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE2_impact_weighting_flexibility_for_the_grid_and_storage = HE2LE_Flexibility * (HE_WE_flexibility / 100)
        HE2_impact_weighting_comfort = HE2LE_Comfort * (HE_WE_comfort / 100)
        HE2_impact_weighting_convenience = HE2LE_Convenience * (HE_WE_convenience / 100)
        HE2_impact_weighting_wellbeing_and_health = HE2LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE2_impact_weighting_maintenance_and_fault_prediction = HE2LE_Maintenance * (HE_WE_maintenance / 100)
        HE2_impact_weighting_information_to_occupants = HE2LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE2_impact_scores_energy_saving = HE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE2_impact_scores_flexibility_for_the_grid_and_storage = HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE2_impact_scores_comfort = HE2_impact_weighting_comfort * IM_energy_savings_on_site

        HE2_impact_scores_convenience = HE2_impact_weighting_convenience * IM_energy_savings_on_site

        HE2_impact_scores_wellbeing_and_health = HE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE2_impact_scores_maintenance_and_fault_prediction = HE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE2_impact_scores_information_to_occupants = HE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE2LE_Max_EnergySavings = 2
        HE2LE_Max_Flexibility = 0
        HE2LE_Max_Comfort = 2
        HE2LE_Max_Convenience = 0
        HE2LE_Max_WellbeingAndHealth = 0
        HE2LE_Max_Maintenance = 0
        HE2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HE2_Max_SRI_IM_Scores_EnergySavings = HE2LE_Max_EnergySavings * (HE_WE_energy_savings / 100)

        HE2_Max_SRI_IM_Scores_Flexibility = HE2LE_Max_Flexibility * (HE_WE_flexibility / 100)

        HE2_Max_SRI_IM_Scores_Comfort = HE2LE_Max_Comfort * (HE_WE_comfort / 100)

        HE2_Max_SRI_IM_Scores_Convenience = HE2LE_Max_Convenience * (HE_WE_convenience / 100)

        HE2_Max_SRI_IM_Scores_WellbeingAndHealth = HE2LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)

        HE2_Max_SRI_IM_Scores_Maintenance = HE2LE_Max_Maintenance * (HE_WE_maintenance / 100)

        HE2_Max_SRI_IM_Scores_InformationToOccupants = HE2LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE2_Max_impact_scores_energy_saving = HE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE2_Max_impact_scores_flexibility_for_the_grid_and_storage = HE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE2_Max_impact_scores_comfort = HE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE2_Max_impact_scores_convenience = HE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE2_Max_impact_scores_wellbeing_and_health = HE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE2_Max_impact_scores_maintenance_and_fault_prediction = HE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE2_Max_impact_scores_information_to_occupants = HE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ###############################################################################################################

        # Heating 4
        HE4_impact_weighting_energy_saving = HE4LE_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_impact_weighting_flexibility_for_the_grid_and_storage = HE4LE_Flexibility * (HE_WE_flexibility / 100)
        HE4_impact_weighting_comfort = HE4LE_Comfort * (HE_WE_comfort / 100)
        HE4_impact_weighting_convenience = HE4LE_Convenience * (HE_WE_convenience / 100)
        HE4_impact_weighting_wellbeing_and_health = HE4LE_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_impact_weighting_maintenance_and_fault_prediction = HE4LE_Maintenance * (HE_WE_maintenance / 100)
        HE4_impact_weighting_information_to_occupants = HE4LE_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HE4_impact_scores_energy_saving = HE4_impact_weighting_energy_saving * IM_energy_savings_on_site

        HE4_impact_scores_flexibility_for_the_grid_and_storage = HE4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HE4_impact_scores_comfort = HE4_impact_weighting_comfort * IM_energy_savings_on_site

        HE4_impact_scores_convenience = HE4_impact_weighting_convenience * IM_energy_savings_on_site

        HE4_impact_scores_wellbeing_and_health = HE4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HE4_impact_scores_maintenance_and_fault_prediction = HE4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HE4_impact_scores_information_to_occupants = HE4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HE4LE_Max_EnergySavings = 1
        HE4LE_Max_Flexibility = 0
        HE4LE_Max_Comfort = 0
        HE4LE_Max_Convenience = 1
        HE4LE_Max_WellbeingAndHealth = 0
        HE4LE_Max_Maintenance = 2
        HE4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HE4_Max_SRI_IM_Scores_EnergySavings = HE4LE_Max_EnergySavings * (HE_WE_energy_savings / 100)
        HE4_Max_SRI_IM_Scores_Flexibility = HE4LE_Max_Flexibility * (HE_WE_flexibility / 100)
        HE4_Max_SRI_IM_Scores_Comfort = HE4LE_Max_Comfort * (HE_WE_comfort / 100)
        HE4_Max_SRI_IM_Scores_Convenience = HE4LE_Max_Convenience * (HE_WE_convenience / 100)
        HE4_Max_SRI_IM_Scores_WellbeingAndHealth = HE4LE_Max_WellbeingAndHealth * (HE_WE_wellbeing_and_health / 100)
        HE4_Max_SRI_IM_Scores_Maintenance = HE4LE_Max_Maintenance * (HE_WE_maintenance / 100)
        HE4_Max_SRI_IM_Scores_InformationToOccupants = HE4LE_Max_InformationToOccupants * (
                HE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HE4_Max_impact_scores_energy_saving = HE4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HE4_Max_impact_scores_flexibility_for_the_grid_and_storage = HE4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HE4_Max_impact_scores_comfort = HE4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HE4_Max_impact_scores_convenience = HE4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HE4_Max_impact_scores_wellbeing_and_health = HE4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HE4_Max_impact_scores_maintenance_and_fault_prediction = HE4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HE4_Max_impact_scores_information_to_occupants = HE4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HE_OR_SC_EnergySavings = HE1LE_EnergySavings + HE2LE_EnergySavings + HE4LE_EnergySavings

        sum_HE_OR_SC_Flexibility = HE1LE_Flexibility + HE2LE_Flexibility + HE4LE_Flexibility

        sum_HE_OR_SC_Comfort = HE1LE_Comfort + HE2LE_Comfort + HE4LE_Comfort
        sum_HE_OR_SC_Convenience = HE1LE_Convenience + HE2LE_Convenience + HE4LE_Convenience

        sum_HE_OR_SC_WellbeingAndHealth = HE1LE_WellbeingAndHealth + HE2LE_WellbeingAndHealth + \
                                          HE4LE_WellbeingAndHealth

        sum_HE_OR_SC_Maintenance = HE1LE_Maintenance + HE2LE_Maintenance + HE4LE_Maintenance

        sum_HE_OR_SC_InformationToOccupants = HE1LE_InformationToOccupants + HE2LE_InformationToOccupants + \
                                              HE4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HE_IM_WE_energy_savings = HE1_impact_weighting_energy_saving + HE2_impact_weighting_energy_saving + \
                                      HE4_impact_weighting_energy_saving

        sum_HE_IM_WE_flexibility_for_the_grid_and_storage = HE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                            + HE4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HE_IM_WE_comfort = HE1_impact_weighting_comfort + HE2_impact_weighting_comfort + \
                               HE4_impact_weighting_comfort

        sum_HE_IM_WE_convenience = HE1_impact_weighting_convenience + HE2_impact_weighting_convenience \
                                   + HE4_impact_weighting_convenience

        sum_HE_IM_WE_wellbeing_and_health = HE1_impact_weighting_wellbeing_and_health + \
                                            HE2_impact_weighting_wellbeing_and_health + \
                                            HE4_impact_weighting_wellbeing_and_health

        sum_HE_IM_WE_maintenance_and_fault_prediction = HE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HE4_impact_weighting_maintenance_and_fault_prediction

        sum_HE_IM_WE_information_to_occupants = HE1_impact_weighting_information_to_occupants + \
                                                HE2_impact_weighting_information_to_occupants + \
                                                HE4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HE_IM_SC_energy_savings = HE1_impact_scores_energy_saving + HE2_impact_scores_energy_saving \
                                      + HE4_impact_scores_energy_saving

        sum_HE_IM_flexibility_for_the_grid_and_storage = HE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HE4_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_IM_SC_comfort = HE1_impact_scores_comfort + HE2_impact_scores_comfort + HE4_impact_scores_comfort

        sum_HE_IM_SC_convenience = HE1_impact_scores_convenience + HE2_impact_scores_convenience + \
                                   HE4_impact_scores_convenience

        sum_HE_IM_SC_wellbeing_and_health = HE1_impact_scores_wellbeing_and_health + \
                                            HE2_impact_scores_wellbeing_and_health + \
                                            HE4_impact_scores_wellbeing_and_health

        sum_HE_IM_SC_maintenance_and_fault_prediction = HE1_impact_scores_maintenance_and_fault_prediction + \
                                                        HE2_impact_scores_maintenance_and_fault_prediction + \
                                                        HE4_impact_scores_maintenance_and_fault_prediction

        sum_HE_IM_SC_information_to_occupants = HE1_impact_scores_information_to_occupants + \
                                                HE2_impact_scores_information_to_occupants + \
                                                HE4_impact_scores_information_to_occupants
        # TOTAL
        total_HE_sum_IM_SC = sum_HE_IM_SC_energy_savings + sum_HE_IM_flexibility_for_the_grid_and_storage + \
                             sum_HE_IM_SC_comfort + sum_HE_IM_SC_convenience + sum_HE_IM_SC_wellbeing_and_health + \
                             sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HE_MAX_OR_SC_EnergySavings = HE1LE_Max_EnergySavings + HE2LE_Max_EnergySavings + HE4LE_Max_EnergySavings

        sum_HE_MAX_OR_SC_Flexibility = HE1LE_Max_Flexibility + HE2LE_Max_Flexibility + HE4LE_Max_Flexibility

        sum_HE_MAX_OR_SC_Comfort = HE1LE_Max_Comfort + HE2LE_Max_Comfort + HE4LE_Max_Comfort

        sum_HE_MAX_OR_SC_Convenience = HE1LE_Max_Convenience + HE2LE_Max_Convenience + HE4LE_Max_Convenience

        sum_HE_MAX_OR_SC_WellbeingAndHealth = HE1LE_Max_WellbeingAndHealth + HE2LE_Max_WellbeingAndHealth \
                                              + HE4LE_Max_WellbeingAndHealth

        sum_HE_MAX_OR_SC_Maintenance = HE1LE_Max_Maintenance + HE2LE_Max_Maintenance + HE4LE_Max_Maintenance

        sum_HE_MAX_OR_SC_InformationToOccupants = HE1LE_Max_InformationToOccupants + HE2LE_Max_InformationToOccupants \
                                                  + HE4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HE_MAX_IM_WE_energy_savings = HE1_Max_SRI_IM_Scores_EnergySavings + HE2_Max_SRI_IM_Scores_EnergySavings \
                                          + HE4_Max_SRI_IM_Scores_EnergySavings

        sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = HE1_Max_SRI_IM_Scores_Flexibility + \
                                                                HE2_Max_SRI_IM_Scores_Flexibility + \
                                                                HE4_Max_SRI_IM_Scores_Flexibility

        sum_HE_MAX_IM_WE_comfort = HE1_Max_SRI_IM_Scores_Comfort + HE2_Max_SRI_IM_Scores_Comfort + \
                                   HE4_Max_SRI_IM_Scores_Comfort

        sum_HE_MAX_IM_WE_convenience = HE1_Max_SRI_IM_Scores_Convenience + HE2_Max_SRI_IM_Scores_Convenience + \
                                       HE4_Max_SRI_IM_Scores_Convenience

        sum_HE_MAX_IM_WE_wellbeing_and_health = HE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HE4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = HE1_Max_SRI_IM_Scores_Maintenance + \
                                                            HE2_Max_SRI_IM_Scores_Maintenance + \
                                                            HE4_Max_SRI_IM_Scores_Maintenance

        sum_HE_MAX_IM_WE_information_to_occupants = HE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HE4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HE_MAX_IM_SC_energy_savings = HE1_Max_impact_scores_energy_saving + HE2_Max_impact_scores_energy_saving \
                                          + HE4_Max_impact_scores_energy_saving

        sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = HE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HE4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HE_MAX_IM_SC_comfort = HE1_Max_impact_scores_comfort + HE2_Max_impact_scores_comfort + \
                                   HE4_Max_impact_scores_comfort

        sum_HE_MAX_IM_SC_convenience = HE1_Max_impact_scores_convenience + HE2_Max_impact_scores_convenience + \
                                       HE4_Max_impact_scores_convenience

        sum_HE_MAX_IM_SC_wellbeing_and_health = HE1_Max_impact_scores_wellbeing_and_health + \
                                                HE2_impact_scores_wellbeing_and_health + \
                                                HE4_Max_impact_scores_wellbeing_and_health

        sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = HE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HE4_Max_impact_scores_maintenance_and_fault_prediction

        sum_HE_MAX_IM_SC_information_to_occupants = HE1_Max_impact_scores_information_to_occupants + \
                                                    HE2_Max_impact_scores_information_to_occupants + \
                                                    HE4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HE_MAX_sum_IM_SC = sum_HE_MAX_IM_SC_energy_savings + sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HE_MAX_IM_SC_comfort + sum_HE_MAX_IM_SC_convenience + sum_HE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + sum_HE_MAX_IM_SC_information_to_occupants

if HE == "b":
    # SUM ORDINAL SCORES
    sum_HE_OR_SC_EnergySavings = 0
    sum_HE_OR_SC_Flexibility = 0
    sum_HE_OR_SC_Comfort = 0
    sum_HE_OR_SC_Convenience = 0
    sum_HE_OR_SC_WellbeingAndHealth = 0
    sum_HE_OR_SC_Maintenance = 0
    sum_HE_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_HE_IM_WE_energy_savings = 0
    sum_HE_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_HE_IM_WE_comfort = 0
    sum_HE_IM_WE_convenience = 0
    sum_HE_IM_WE_wellbeing_and_health = 0
    sum_HE_IM_WE_maintenance_and_fault_prediction = 0
    sum_HE_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_HE_IM_SC_energy_savings = 0
    sum_HE_IM_flexibility_for_the_grid_and_storage = 0
    sum_HE_IM_SC_comfort = 0
    sum_HE_IM_SC_convenience = 0
    sum_HE_IM_SC_wellbeing_and_health = 0
    sum_HE_IM_SC_maintenance_and_fault_prediction = 0
    sum_HE_IM_SC_information_to_occupants = 0

    # TOTAL
    total_HE_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_HE_MAX_OR_SC_EnergySavings = 0
    sum_HE_MAX_OR_SC_Flexibility = 0
    sum_HE_MAX_OR_SC_Comfort = 0
    sum_HE_MAX_OR_SC_Convenience = 0
    sum_HE_MAX_OR_SC_WellbeingAndHealth = 0
    sum_HE_MAX_OR_SC_Maintenance = 0
    sum_HE_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_HE_MAX_IM_WE_energy_savings = 0
    sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_HE_MAX_IM_WE_comfort = 0
    sum_HE_MAX_IM_WE_convenience = 0
    sum_HE_MAX_IM_WE_wellbeing_and_health = 0
    sum_HE_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_HE_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_HE_MAX_IM_SC_energy_savings = 0
    sum_HE_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_HE_MAX_IM_SC_comfort = 0
    sum_HE_MAX_IM_SC_convenience = 0
    sum_HE_MAX_IM_SC_wellbeing_and_health = 0
    sum_HE_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_HE_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_HE_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Domestic Hot Water")
    print("")
    HW = input("Domestic Hot Water \n(a) yes \n(b) no \n[a/b]?: ")
    if HE in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if HW == "a":
    while True:
        print("")
        PT = input("Production type \n(a) Non-electric"
                   "\n(b) Electric \n[a/b]? :")
        if PT in ['a', 'b']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        SP = input("Storage present \n(a) Storage present"
                   "\n(b) No storage present"
                   "\n[a/b]? :")

        if SP in ['a', 'b']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        SC = input("Solar collector \n(a) Solar collector present \n(b) No Solar collector present \n[a/b]? :")

        if SC in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if PT == "a" and SP == "a" and SC == "a":
        # print("DHW-S1, DHW-S2, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S2
        print("DHW 2 Control of DHW storage charging")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Automatic charging control based on local availability of renewables or "
                          "information from electricity grid (DR, DSM)."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 0
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 1
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 2
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * \
                                                        (HW_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 2
        HW2_impact_weighting_energy_saving = HW2LE_EnergySavings * (HW_WE_energy_savings / 100)

        HW2_impact_weighting_flexibility_for_the_grid_and_storage = HW2LE_Flexibility * (HW_WE_flexibility / 100)

        HW2_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)

        HW2_impact_weighting_convenience = HW2LE_WellbeingAndHealth * (HW_WE_convenience / 100)

        HW2_impact_weighting_wellbeing_and_health = HW2LE_Convenience * (HW_WE_wellbeing_and_health / 100)

        HW2_impact_weighting_maintenance_and_fault_prediction = HW2LE_Maintenance * (HW_WE_maintenance / 100)

        HW2_impact_weighting_information_to_occupants = HW2LE_InformationToOccupants * \
                                                        (HW_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HW2_impact_scores_energy_saving = HW2_impact_weighting_energy_saving * IM_energy_savings_on_site

        HW2_impact_scores_flexibility_for_the_grid_and_storage = HW2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site


        HW2_impact_scores_comfort = HW2_impact_weighting_comfort * IM_energy_savings_on_site

        HW2_impact_scores_convenience = HW2_impact_weighting_convenience * IM_energy_savings_on_site

        HW2_impact_scores_wellbeing_and_health = HW2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HW2_impact_scores_maintenance_and_fault_prediction = HW2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HW2_impact_scores_information_to_occupants = HW2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW2LE_Max_EnergySavings = 0
        HW2LE_Max_Flexibility = 2
        HW2LE_Max_Comfort = 0
        HW2LE_Max_Convenience = 0
        HW2LE_Max_WellbeingAndHealth = 0
        HW2LE_Max_Maintenance = 0
        HW2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW2_Max_SRI_IM_Scores_EnergySavings = HW2LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW2_Max_SRI_IM_Scores_Flexibility = HW2LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW2_Max_SRI_IM_Scores_Comfort = HW2LE_Max_Comfort * (HW_WE_comfort / 100)
        HW2_Max_SRI_IM_Scores_Convenience = HW2LE_Max_Convenience * (HW_WE_convenience / 100)
        HW2_Max_SRI_IM_Scores_WellbeingAndHealth = HW2LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW2_Max_SRI_IM_Scores_Maintenance = HW2LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW2_Max_SRI_IM_Scores_InformationToOccupants = HW2LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW2_Max_impact_scores_energy_saving = HW2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW2_Max_impact_scores_flexibility_for_the_grid_and_storage = HW2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW2_Max_impact_scores_comfort = HW2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW2_Max_impact_scores_convenience = HW2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW2_Max_impact_scores_wellbeing_and_health = HW2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW2_Max_impact_scores_maintenance_and_fault_prediction = HW2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW2_Max_impact_scores_information_to_occupants = HW2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * \
                                                        (HW_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW2LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW2LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW2LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW2LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW2LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW2LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW2LE_InformationToOccupants + \
                                              HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW2_impact_weighting_energy_saving + \
                                      HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW2_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW2_impact_weighting_convenience \
                                   + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW2_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW2_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW2_impact_scores_energy_saving + \
                                      HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW2_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW2_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW2_impact_scores_wellbeing_and_health + \
                                            HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW2_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW2_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW2LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW2LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW2LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW2LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW2LE_Max_WellbeingAndHealth + \
                                              HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW2LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW2LE_Max_InformationToOccupants + \
                                                  HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW2_Max_SRI_IM_Scores_EnergySavings \
                                          + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW2_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW2_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW2_Max_SRI_IM_Scores_Convenience \
                                       + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW2_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW2_Max_impact_scores_energy_saving \
                                          + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW2_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW2_Max_impact_scores_convenience \
                                       + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW2_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW2_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "a" and SP == "b" and SC == "a":
        # print("DHW-S1, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "a" and SP == "b" and SC == "b":
        # print("DHW-S1, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "b" and SP == "a" and SC == "a":
        # print("DHW-S1, DHW-S2, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S2
        print("DHW 2 Control of DHW storage charging")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Automatic charging control based on local availability of renewables or "
                          "information from electricity grid (DR, DSM)."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 0
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 1
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 2
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 2
        HW2_impact_weighting_energy_saving = HW2LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW2_impact_weighting_energy_saving)

        HW2_impact_weighting_flexibility_for_the_grid_and_storage = HW2LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW2_impact_weighting_flexibility_for_the_grid_and_storage)

        HW2_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW2_impact_weighting_comfort)

        HW2_impact_weighting_convenience = HW2LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW2_impact_weighting_convenience)

        HW2_impact_weighting_wellbeing_and_health = HW2LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW2_impact_weighting_wellbeing_and_health)

        HW2_impact_weighting_maintenance_and_fault_prediction = HW2LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW2_impact_weighting_maintenance_and_fault_prediction)

        HW2_impact_weighting_information_to_occupants = HW2LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW2_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW2_impact_scores_energy_saving = HW2_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW2_impact_scores_energy_saving)

        HW2_impact_scores_flexibility_for_the_grid_and_storage = HW2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW2_impact_scores_flexibility_for_the_grid_and_storage)

        HW2_impact_scores_comfort = HW2_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW2_impact_scores_comfort)

        HW2_impact_scores_convenience = HW2_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW2_impact_scores_convenience)

        HW2_impact_scores_wellbeing_and_health = HW2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW2_impact_scores_wellbeing_and_health)

        HW2_impact_scores_maintenance_and_fault_prediction = HW2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW2_impact_scores_maintenance_and_fault_prediction)

        HW2_impact_scores_information_to_occupants = HW2_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW2_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW2LE_Max_EnergySavings = 0
        HW2LE_Max_Flexibility = 2
        HW2LE_Max_Comfort = 0
        HW2LE_Max_Convenience = 0
        HW2LE_Max_WellbeingAndHealth = 0
        HW2LE_Max_Maintenance = 0
        HW2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW2_Max_SRI_IM_Scores_EnergySavings = HW2LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW2_Max_SRI_IM_Scores_Flexibility = HW2LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW2_Max_SRI_IM_Scores_Comfort = HW2LE_Max_Comfort * (HW_WE_comfort / 100)
        HW2_Max_SRI_IM_Scores_Convenience = HW2LE_Max_Convenience * (HW_WE_convenience / 100)
        HW2_Max_SRI_IM_Scores_WellbeingAndHealth = HW2LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW2_Max_SRI_IM_Scores_Maintenance = HW2LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW2_Max_SRI_IM_Scores_InformationToOccupants = HW2LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW2_Max_impact_scores_energy_saving = HW2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW2_Max_impact_scores_flexibility_for_the_grid_and_storage = HW2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW2_Max_impact_scores_comfort = HW2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW2_Max_impact_scores_convenience = HW2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW2_Max_impact_scores_wellbeing_and_health = HW2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW2_Max_impact_scores_maintenance_and_fault_prediction = HW2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW2_Max_impact_scores_information_to_occupants = HW2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW2LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW2LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW2LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW2LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW2LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW2LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW2LE_InformationToOccupants + \
                                              HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW2_impact_weighting_energy_saving + \
                                      HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW2_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW2_impact_weighting_convenience \
                                   + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW2_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW2_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW2_impact_scores_energy_saving + \
                                      HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW2_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW2_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW2_impact_scores_wellbeing_and_health + \
                                            HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW2_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW2_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW2LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW2LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW2LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW2LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW2LE_Max_WellbeingAndHealth + \
                                              HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW2LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW2LE_Max_InformationToOccupants + \
                                                  HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW2_Max_SRI_IM_Scores_EnergySavings \
                                          + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW2_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW2_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW2_Max_SRI_IM_Scores_Convenience \
                                       + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW2_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW2_Max_impact_scores_energy_saving \
                                          + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW2_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW2_Max_impact_scores_convenience \
                                       + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW2_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW2_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "b" and SP == "b" and SC == "a":
        # print("DHW-S1, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "b" and SP == "a" and SC == "b":
        # print("DHW-S1, DHW-S2, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S2
        print("DHW 2 Control of DHW storage charging")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Automatic charging control based on local availability of renewables or "
                          "information from electricity grid (DR, DSM)."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 0
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 1
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 2
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 2
        HW2_impact_weighting_energy_saving = HW2LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW2_impact_weighting_energy_saving)

        HW2_impact_weighting_flexibility_for_the_grid_and_storage = HW2LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW2_impact_weighting_flexibility_for_the_grid_and_storage)

        HW2_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW2_impact_weighting_comfort)

        HW2_impact_weighting_convenience = HW2LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW2_impact_weighting_convenience)

        HW2_impact_weighting_wellbeing_and_health = HW2LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW2_impact_weighting_wellbeing_and_health)

        HW2_impact_weighting_maintenance_and_fault_prediction = HW2LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW2_impact_weighting_maintenance_and_fault_prediction)

        HW2_impact_weighting_information_to_occupants = HW2LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW2_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW2_impact_scores_energy_saving = HW2_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW2_impact_scores_energy_saving)

        HW2_impact_scores_flexibility_for_the_grid_and_storage = HW2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW2_impact_scores_flexibility_for_the_grid_and_storage)

        HW2_impact_scores_comfort = HW2_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW2_impact_scores_comfort)

        HW2_impact_scores_convenience = HW2_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW2_impact_scores_convenience)

        HW2_impact_scores_wellbeing_and_health = HW2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW2_impact_scores_wellbeing_and_health)

        HW2_impact_scores_maintenance_and_fault_prediction = HW2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW2_impact_scores_maintenance_and_fault_prediction)

        HW2_impact_scores_information_to_occupants = HW2_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW2_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW2LE_Max_EnergySavings = 0
        HW2LE_Max_Flexibility = 2
        HW2LE_Max_Comfort = 0
        HW2LE_Max_Convenience = 0
        HW2LE_Max_WellbeingAndHealth = 0
        HW2LE_Max_Maintenance = 0
        HW2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW2_Max_SRI_IM_Scores_EnergySavings = HW2LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW2_Max_SRI_IM_Scores_Flexibility = HW2LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW2_Max_SRI_IM_Scores_Comfort = HW2LE_Max_Comfort * (HW_WE_comfort / 100)
        HW2_Max_SRI_IM_Scores_Convenience = HW2LE_Max_Convenience * (HW_WE_convenience / 100)
        HW2_Max_SRI_IM_Scores_WellbeingAndHealth = HW2LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW2_Max_SRI_IM_Scores_Maintenance = HW2LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW2_Max_SRI_IM_Scores_InformationToOccupants = HW2LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW2_Max_impact_scores_energy_saving = HW2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW2_Max_impact_scores_flexibility_for_the_grid_and_storage = HW2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW2_Max_impact_scores_comfort = HW2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW2_Max_impact_scores_convenience = HW2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW2_Max_impact_scores_wellbeing_and_health = HW2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW2_Max_impact_scores_maintenance_and_fault_prediction = HW2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW2_Max_impact_scores_information_to_occupants = HW2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW2LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW2LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW2LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW2LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW2LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW2LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW2LE_InformationToOccupants + \
                                              HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW2_impact_weighting_energy_saving + \
                                      HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW2_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW2_impact_weighting_convenience \
                                   + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW2_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW2_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW2_impact_scores_energy_saving + \
                                      HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW2_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW2_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW2_impact_scores_wellbeing_and_health + \
                                            HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW2_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW2_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW2LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW2LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW2LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW2LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW2LE_Max_WellbeingAndHealth + \
                                              HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW2LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW2LE_Max_InformationToOccupants + \
                                                  HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW2_Max_SRI_IM_Scores_EnergySavings \
                                          + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW2_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW2_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW2_Max_SRI_IM_Scores_Convenience \
                                       + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW2_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW2_Max_impact_scores_energy_saving \
                                          + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW2_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW2_Max_impact_scores_convenience \
                                       + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW2_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW2_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "b" and SP == "b" and SC == "b":
        # print("DHW-S1, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

    if PT == "b" and SP == "a" and SC == "b":
        # print("DHW-S1, DHW-S2, DHW-S3")
        print("")
        # DHW-S1
        print("DHW 1 Control of DHW storage charging (with direct electric heating or integrated electric heat pump)")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) Automatic control on / off."
                          "\n(b) Automatic control on / off and scheduled charging enable."
                          "\n(c) Automatic control on / off and scheduled charging enable and multi-sensor "
                          "storage management."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 0
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 0
            HW1LE_Convenience = 0
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW1LE_EnergySavings = 1
            HW1LE_Flexibility = 0
            HW1LE_Comfort = 1
            HW1LE_Convenience = 1
            HW1LE_WellbeingAndHealth = 0
            HW1LE_Maintenance = 0
            HW1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW1LE_Flexibility))
            print("Comfort: " + str(HW1LE_Comfort))
            print("Convenience: " + str(HW1LE_Convenience))
            print("Health & wellbeing: " + str(HW1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW1LE_Maintenance))
            print("Information to occupants: " + str(HW1LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S2
        print("DHW 2 Control of DHW storage charging")
        print("")

        while True:
            HW1LE = input("Choose:\n(a) None."
                          "\n(b) HW storage vessels available."
                          "\n(c) Automatic charging control based on local availability of renewables or "
                          "information from electricity grid (DR, DSM)."
                          "\n[a/b/c]? : ")
            if HW1LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if HW1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 0
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 1
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        elif HW1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW2LE_EnergySavings = 0
            HW2LE_Flexibility = 2
            HW2LE_Comfort = 0
            HW2LE_Convenience = 0
            HW2LE_WellbeingAndHealth = 0
            HW2LE_Maintenance = 0
            HW2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW2LE_Flexibility))
            print("Comfort: " + str(HW2LE_Comfort))
            print("Convenience: " + str(HW2LE_Convenience))
            print("Health & wellbeing: " + str(HW2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW2LE_Maintenance))
            print("Information to occupants: " + str(HW2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # DHW-S3
        print("DHW 3 Report information regarding domestic hot water performance")
        print("")

        while True:
            HW3LE = input("Choose:\n(a) None."
                          "\n(b) Indication of actual values (e.g. temperatures, submetering energy usage)."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; also including "
                          "predictive management and fault detection."
                          "\n[a/b/c/d/e]? : ")
            if HW3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if HW3LE == "a":
            print("Level 0")

            HW3LE_EnergySavings = 0
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 0
            HW3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 0
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 1
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        elif HW3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            HW3LE_EnergySavings = 1
            HW3LE_Flexibility = 0
            HW3LE_Comfort = 0
            HW3LE_Convenience = 1
            HW3LE_WellbeingAndHealth = 0
            HW3LE_Maintenance = 2
            HW3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(HW3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(HW3LE_Flexibility))
            print("Comfort: " + str(HW3LE_Comfort))
            print("Convenience: " + str(HW3LE_Convenience))
            print("Health & wellbeing: " + str(HW3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(HW3LE_Maintenance))
            print("Information to occupants: " + str(HW3LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Domestic Hot Water
        HW_WE_energy_savings = 11
        HW_WE_flexibility = 13
        HW_WE_comfort = 17
        HW_WE_convenience = 11
        HW_WE_wellbeing_and_health = 0
        HW_WE_maintenance = 14
        HW_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Domestic Hot Water
        # DHW 1
        HW1_impact_weighting_energy_saving = HW1LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW1_impact_weighting_energy_saving)

        HW1_impact_weighting_flexibility_for_the_grid_and_storage = HW1LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW1_impact_weighting_flexibility_for_the_grid_and_storage)

        HW1_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW1_impact_weighting_comfort)

        HW1_impact_weighting_convenience = HW1LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW1_impact_weighting_convenience)

        HW1_impact_weighting_wellbeing_and_health = HW1LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW1_impact_weighting_wellbeing_and_health)

        HW1_impact_weighting_maintenance_and_fault_prediction = HW1LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW1_impact_weighting_maintenance_and_fault_prediction)

        HW1_impact_weighting_information_to_occupants = HW1LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW1_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW1_impact_scores_energy_saving = HW1_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW1_impact_scores_energy_saving)

        HW1_impact_scores_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW1_impact_scores_flexibility_for_the_grid_and_storage)

        HW1_impact_scores_comfort = HW1_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW1_impact_scores_comfort)

        HW1_impact_scores_convenience = HW1_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW1_impact_scores_convenience)

        HW1_impact_scores_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW1_impact_scores_wellbeing_and_health)

        HW1_impact_scores_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW1_impact_scores_maintenance_and_fault_prediction)

        HW1_impact_scores_information_to_occupants = HW1_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW1_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW1LE_Max_EnergySavings = 1
        HW1LE_Max_Flexibility = 0
        HW1LE_Max_Comfort = 1
        HW1LE_Max_Convenience = 1
        HW1LE_Max_WellbeingAndHealth = 0
        HW1LE_Max_Maintenance = 0
        HW1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW1_Max_SRI_IM_Scores_EnergySavings = HW1LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW1_Max_SRI_IM_Scores_Flexibility = HW1LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW1_Max_SRI_IM_Scores_Comfort = HW1LE_Max_Comfort * (HW_WE_comfort / 100)
        HW1_Max_SRI_IM_Scores_Convenience = HW1LE_Max_Convenience * (HW_WE_convenience / 100)
        HW1_Max_SRI_IM_Scores_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW1_Max_SRI_IM_Scores_Maintenance = HW1LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW1_Max_SRI_IM_Scores_InformationToOccupants = HW1LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW1_Max_impact_scores_energy_saving = HW1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW1_Max_impact_scores_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW1_Max_impact_scores_comfort = HW1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW1_Max_impact_scores_convenience = HW1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW1_Max_impact_scores_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW1_Max_impact_scores_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW1_Max_impact_scores_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DHW 2
        HW2_impact_weighting_energy_saving = HW2LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW2_impact_weighting_energy_saving)

        HW2_impact_weighting_flexibility_for_the_grid_and_storage = HW2LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW2_impact_weighting_flexibility_for_the_grid_and_storage)

        HW2_impact_weighting_comfort = HW1LE_Comfort * (HW_WE_comfort / 100)
        print(HW2_impact_weighting_comfort)

        HW2_impact_weighting_convenience = HW2LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW2_impact_weighting_convenience)

        HW2_impact_weighting_wellbeing_and_health = HW2LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW2_impact_weighting_wellbeing_and_health)

        HW2_impact_weighting_maintenance_and_fault_prediction = HW2LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW2_impact_weighting_maintenance_and_fault_prediction)

        HW2_impact_weighting_information_to_occupants = HW2LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW2_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW2_impact_scores_energy_saving = HW2_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW2_impact_scores_energy_saving)

        HW2_impact_scores_flexibility_for_the_grid_and_storage = HW2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW2_impact_scores_flexibility_for_the_grid_and_storage)

        HW2_impact_scores_comfort = HW2_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW2_impact_scores_comfort)

        HW2_impact_scores_convenience = HW2_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW2_impact_scores_convenience)

        HW2_impact_scores_wellbeing_and_health = HW2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW2_impact_scores_wellbeing_and_health)

        HW2_impact_scores_maintenance_and_fault_prediction = HW2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW2_impact_scores_maintenance_and_fault_prediction)

        HW2_impact_scores_information_to_occupants = HW2_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW2_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW2LE_Max_EnergySavings = 0
        HW2LE_Max_Flexibility = 2
        HW2LE_Max_Comfort = 0
        HW2LE_Max_Convenience = 0
        HW2LE_Max_WellbeingAndHealth = 0
        HW2LE_Max_Maintenance = 0
        HW2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        HW2_Max_SRI_IM_Scores_EnergySavings = HW2LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW2_Max_SRI_IM_Scores_Flexibility = HW2LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW2_Max_SRI_IM_Scores_Comfort = HW2LE_Max_Comfort * (HW_WE_comfort / 100)
        HW2_Max_SRI_IM_Scores_Convenience = HW2LE_Max_Convenience * (HW_WE_convenience / 100)
        HW2_Max_SRI_IM_Scores_WellbeingAndHealth = HW2LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW2_Max_SRI_IM_Scores_Maintenance = HW2LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW2_Max_SRI_IM_Scores_InformationToOccupants = HW2LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW2_Max_impact_scores_energy_saving = HW2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW2_Max_impact_scores_flexibility_for_the_grid_and_storage = HW2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW2_Max_impact_scores_comfort = HW2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW2_Max_impact_scores_convenience = HW2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW2_Max_impact_scores_wellbeing_and_health = HW2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW2_Max_impact_scores_maintenance_and_fault_prediction = HW2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW2_Max_impact_scores_information_to_occupants = HW2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #######################################################################################################################
        # DHW 3
        HW3_impact_weighting_energy_saving = HW3LE_EnergySavings * (HW_WE_energy_savings / 100)
        print(HW3_impact_weighting_energy_saving)

        HW3_impact_weighting_flexibility_for_the_grid_and_storage = HW3LE_Flexibility * (HW_WE_flexibility / 100)
        print(HW3_impact_weighting_flexibility_for_the_grid_and_storage)

        HW3_impact_weighting_comfort = HW3LE_Comfort * (HW_WE_comfort / 100)
        print(HW3_impact_weighting_comfort)

        HW3_impact_weighting_convenience = HW3LE_WellbeingAndHealth * (HW_WE_convenience / 100)
        print(HW3_impact_weighting_convenience)

        HW3_impact_weighting_wellbeing_and_health = HW3LE_Convenience * (HW_WE_wellbeing_and_health / 100)
        print(HW3_impact_weighting_wellbeing_and_health)

        HW3_impact_weighting_maintenance_and_fault_prediction = HW3LE_Maintenance * (HW_WE_maintenance / 100)
        print(HW3_impact_weighting_maintenance_and_fault_prediction)

        HW3_impact_weighting_information_to_occupants = HW3LE_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)
        print(HW3_impact_weighting_information_to_occupants)

        # SRI impact scores by domain after impact weightings also applied
        HW3_impact_scores_energy_saving = HW3_impact_weighting_energy_saving * IM_energy_savings_on_site
        print(HW3_impact_scores_energy_saving)

        HW3_impact_scores_flexibility_for_the_grid_and_storage = HW3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site
        print(HW3_impact_scores_flexibility_for_the_grid_and_storage)

        HW3_impact_scores_comfort = HW3_impact_weighting_comfort * IM_energy_savings_on_site
        print(HW3_impact_scores_comfort)

        HW3_impact_scores_convenience = HW3_impact_weighting_convenience * IM_energy_savings_on_site
        print(HW3_impact_scores_convenience)

        HW3_impact_scores_wellbeing_and_health = HW3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site
        print(HW3_impact_scores_wellbeing_and_health)

        HW3_impact_scores_maintenance_and_fault_prediction = HW3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        print(HW3_impact_scores_maintenance_and_fault_prediction)

        HW3_impact_scores_information_to_occupants = HW3_impact_weighting_information_to_occupants * IM_energy_savings_on_site
        print(HW3_impact_scores_information_to_occupants)

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        HW3LE_Max_EnergySavings = 1
        HW3LE_Max_Flexibility = 0
        HW3LE_Max_Comfort = 0
        HW3LE_Max_Convenience = 1
        HW3LE_Max_WellbeingAndHealth = 0
        HW3LE_Max_Maintenance = 2
        HW3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        HW3_Max_SRI_IM_Scores_EnergySavings = HW3LE_Max_EnergySavings * (HW_WE_energy_savings / 100)
        HW3_Max_SRI_IM_Scores_Flexibility = HW3LE_Max_Flexibility * (HW_WE_flexibility / 100)
        HW3_Max_SRI_IM_Scores_Comfort = HW3LE_Max_Comfort * (HW_WE_comfort / 100)
        HW3_Max_SRI_IM_Scores_Convenience = HW3LE_Max_Convenience * (HW_WE_convenience / 100)
        HW3_Max_SRI_IM_Scores_WellbeingAndHealth = HW3LE_Max_WellbeingAndHealth * (HW_WE_wellbeing_and_health / 100)
        HW3_Max_SRI_IM_Scores_Maintenance = HW3LE_Max_Maintenance * (HW_WE_maintenance / 100)
        HW3_Max_SRI_IM_Scores_InformationToOccupants = HW3LE_Max_InformationToOccupants * (
                    HW_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        HW3_Max_impact_scores_energy_saving = HW3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        HW3_Max_impact_scores_flexibility_for_the_grid_and_storage = HW3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        HW3_Max_impact_scores_comfort = HW3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        HW3_Max_impact_scores_convenience = HW3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        HW3_Max_impact_scores_wellbeing_and_health = HW3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        HW3_Max_impact_scores_maintenance_and_fault_prediction = HW3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        HW3_Max_impact_scores_information_to_occupants = HW3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_HW_OR_SC_EnergySavings = HW1LE_EnergySavings + HW2LE_EnergySavings + HW3LE_EnergySavings

        sum_HW_OR_SC_Flexibility = HW1LE_Flexibility + HW2LE_Flexibility + HW3LE_Flexibility

        sum_HW_OR_SC_Comfort = HW1LE_Comfort + HW2LE_Comfort + HW3LE_Comfort

        sum_HW_OR_SC_Convenience = HW1LE_Convenience + HW2LE_Convenience + HW3LE_Convenience

        sum_HW_OR_SC_WellbeingAndHealth = HW1LE_WellbeingAndHealth + HW2LE_WellbeingAndHealth + HW3LE_WellbeingAndHealth

        sum_HW_OR_SC_Maintenance = HW1LE_Maintenance + HW2LE_Maintenance + HW3LE_Maintenance

        sum_HW_OR_SC_InformationToOccupants = HW1LE_InformationToOccupants + HW2LE_InformationToOccupants + \
                                              HW3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_HW_IM_WE_energy_savings = HW1_impact_weighting_energy_saving + HW2_impact_weighting_energy_saving + \
                                      HW3_impact_weighting_energy_saving

        sum_HW_IM_WE_flexibility_for_the_grid_and_storage = HW1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            HW3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_HW_IM_WE_comfort = HW1_impact_weighting_comfort + HW2_impact_weighting_comfort + HW3_impact_weighting_comfort

        sum_HW_IM_WE_convenience = HW1_impact_weighting_convenience + HW2_impact_weighting_convenience \
                                   + HW3_impact_weighting_convenience

        sum_HW_IM_WE_wellbeing_and_health = HW1_impact_weighting_wellbeing_and_health + \
                                            HW2_impact_weighting_wellbeing_and_health + \
                                            HW3_impact_weighting_wellbeing_and_health

        sum_HW_IM_WE_maintenance_and_fault_prediction = HW1_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW2_impact_weighting_maintenance_and_fault_prediction + \
                                                        HW3_impact_weighting_maintenance_and_fault_prediction

        sum_HW_IM_WE_information_to_occupants = HW1_impact_weighting_information_to_occupants + \
                                                HW2_impact_weighting_information_to_occupants + \
                                                HW3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_HW_IM_SC_energy_savings = HW1_impact_scores_energy_saving + HW2_impact_scores_energy_saving + \
                                      HW3_impact_scores_energy_saving

        sum_HW_IM_flexibility_for_the_grid_and_storage = HW1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         HW3_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_IM_SC_comfort = HW1_impact_scores_comfort + HW2_impact_scores_comfort + HW3_impact_scores_comfort

        sum_HW_IM_SC_convenience = HW1_impact_scores_convenience + HW2_impact_scores_convenience + HW3_impact_scores_convenience

        sum_HW_IM_SC_wellbeing_and_health = HW1_impact_scores_wellbeing_and_health + HW2_impact_scores_wellbeing_and_health + \
                                            HW3_impact_scores_wellbeing_and_health

        sum_HW_IM_SC_maintenance_and_fault_prediction = HW1_impact_scores_maintenance_and_fault_prediction + \
                                                        HW2_impact_scores_maintenance_and_fault_prediction + \
                                                        HW3_impact_scores_maintenance_and_fault_prediction

        sum_HW_IM_SC_information_to_occupants = HW1_impact_scores_information_to_occupants + \
                                                HW2_impact_scores_information_to_occupants + \
                                                HW3_impact_scores_information_to_occupants

        # TOTAL
        total_HW_sum_IM_SC = sum_HW_IM_SC_energy_savings + sum_HW_IM_flexibility_for_the_grid_and_storage + \
                             sum_HW_IM_SC_comfort + sum_HW_IM_SC_convenience + sum_HW_IM_SC_wellbeing_and_health + \
                             sum_HW_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_HW_MAX_OR_SC_EnergySavings = HW1LE_Max_EnergySavings + HW2LE_Max_EnergySavings + HW3LE_Max_EnergySavings

        sum_HW_MAX_OR_SC_Flexibility = HW1LE_Max_Flexibility + HW2LE_Max_Flexibility + HW3LE_Max_Flexibility

        sum_HW_MAX_OR_SC_Comfort = HW1LE_Max_Comfort + HW2LE_Max_Comfort + HW3LE_Max_Comfort

        sum_HW_MAX_OR_SC_Convenience = HW1LE_Max_Convenience + HW2LE_Max_Convenience + HW3LE_Max_Convenience

        sum_HW_MAX_OR_SC_WellbeingAndHealth = HW1LE_Max_WellbeingAndHealth + HW2LE_Max_WellbeingAndHealth + \
                                              HW3LE_Max_WellbeingAndHealth

        sum_HW_MAX_OR_SC_Maintenance = HW1LE_Max_Maintenance + HW2LE_Max_Maintenance + HW3LE_Max_Maintenance

        sum_HW_MAX_OR_SC_InformationToOccupants = HW1LE_Max_InformationToOccupants + HW2LE_Max_InformationToOccupants + \
                                                  HW3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_HW_MAX_IM_WE_energy_savings = HW1_Max_SRI_IM_Scores_EnergySavings + HW2_Max_SRI_IM_Scores_EnergySavings \
                                          + HW3_Max_SRI_IM_Scores_EnergySavings

        sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = HW1_Max_SRI_IM_Scores_Flexibility + \
                                                                HW2_Max_SRI_IM_Scores_Flexibility + \
                                                                HW3_Max_SRI_IM_Scores_Flexibility

        sum_HW_MAX_IM_WE_comfort = HW1_Max_SRI_IM_Scores_Comfort + HW2_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_HW_MAX_IM_WE_convenience = HW1_Max_SRI_IM_Scores_Convenience + HW2_Max_SRI_IM_Scores_Convenience \
                                       + HW3_Max_SRI_IM_Scores_Convenience

        sum_HW_MAX_IM_WE_wellbeing_and_health = HW1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                HW3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = HW1_Max_SRI_IM_Scores_Maintenance + \
                                                            HW2_Max_SRI_IM_Scores_Maintenance + \
                                                            HW3_Max_SRI_IM_Scores_Maintenance

        sum_HW_MAX_IM_WE_information_to_occupants = HW1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    HW3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_HW_MAX_IM_SC_energy_savings = HW1_Max_impact_scores_energy_saving + HW2_Max_impact_scores_energy_saving \
                                          + HW3_Max_impact_scores_energy_saving

        sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = HW1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             HW3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_HW_MAX_IM_SC_comfort = HW1_Max_impact_scores_comfort + HW2_Max_impact_scores_comfort + HW3_Max_impact_scores_comfort

        sum_HW_MAX_IM_SC_convenience = HW1_Max_impact_scores_convenience + HW2_Max_impact_scores_convenience \
                                       + HW3_Max_impact_scores_convenience

        sum_HW_MAX_IM_SC_wellbeing_and_health = HW1_Max_impact_scores_wellbeing_and_health + \
                                                HW2_impact_scores_wellbeing_and_health + \
                                                HW3_Max_impact_scores_wellbeing_and_health

        sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = HW1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            HW3_Max_impact_scores_maintenance_and_fault_prediction

        sum_HW_MAX_IM_SC_information_to_occupants = HW1_Max_impact_scores_information_to_occupants + \
                                                    HW2_Max_impact_scores_information_to_occupants + \
                                                    HW3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_HW_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_HW_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                 sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + sum_HW_MAX_IM_SC_information_to_occupants

if HW == "b":
    # SUM ORDINAL SCORES
    sum_HW_OR_SC_EnergySavings = 0
    sum_HW_OR_SC_Flexibility = 0
    sum_HW_OR_SC_Comfort = 0
    sum_HW_OR_SC_Convenience = 0
    sum_HW_OR_SC_WellbeingAndHealth = 0
    sum_HW_OR_SC_Maintenance = 0
    sum_HW_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_HW_IM_WE_energy_savings = 0
    sum_HW_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_HW_IM_WE_comfort = 0
    sum_HW_IM_WE_convenience = 0
    sum_HW_IM_WE_wellbeing_and_health = 0
    sum_HW_IM_WE_maintenance_and_fault_prediction = 0
    sum_HW_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_HW_IM_SC_energy_savings = 0
    sum_HW_IM_flexibility_for_the_grid_and_storage = 0
    sum_HW_IM_SC_comfort = 0
    sum_HW_IM_SC_convenience = 0
    sum_HW_IM_SC_wellbeing_and_health = 0
    sum_HW_IM_SC_maintenance_and_fault_prediction = 0
    sum_HW_IM_SC_information_to_occupants = 0

    # TOTAL
    total_HW_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_HW_MAX_OR_SC_EnergySavings = 0
    sum_HW_MAX_OR_SC_Flexibility = 0
    sum_HW_MAX_OR_SC_Comfort = 0
    sum_HW_MAX_OR_SC_Convenience = 0
    sum_HW_MAX_OR_SC_WellbeingAndHealth = 0
    sum_HW_MAX_OR_SC_Maintenance = 0
    sum_HW_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_HW_MAX_IM_WE_energy_savings = 0
    sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_HW_MAX_IM_WE_comfort = 0
    sum_HW_MAX_IM_WE_convenience = 0
    sum_HW_MAX_IM_WE_wellbeing_and_health = 0
    sum_HW_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_HW_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_HW_MAX_IM_SC_energy_savings = 0
    sum_HW_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_HW_MAX_IM_SC_comfort = 0
    sum_HW_MAX_IM_SC_convenience = 0
    sum_HW_MAX_IM_SC_wellbeing_and_health = 0
    sum_HW_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_HW_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_HW_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Cooling")
    print("")
    CO = input("Cooling \n(a) yes \n(b) no \n[a/b]?: ")
    if CO in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if CO == "a":
    while True:
        print("")
        ET = input("Emission type \n(a) TABS (Thermally Activated Building System)"
                   "\n(b) Other hydronic system (e.g. radiators) \n(c) Non-hydronic system (e.g. all-air) "
                   "\n[a/b/c]? :")
        if ET in ['a', 'b', 'c']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        TE = input("Thermal energy storage \n(a) Storage present"
                   "\n(b) No storage present"
                   "\n[a/b]? :")

        if TE in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if ET == "a" and TE == "a":
        # print("Cooling-S1, Cooling-S2, Cooling-S3, Cooling-S4")
        print("")
        # Cooling-S1
        print("Cooling 1 Cooling emission control")
        print("")

        while True:
            CO1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control."
                          "\n(c) Individual room control."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if CO1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 0
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 0
            CO1LE_Convenience = 0
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 1
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 1
            CO1LE_Convenience = 1
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 2
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 3
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S2
        print("Cooling 2 Generator control for cooling")
        print("")

        while True:
            CO2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load."
                          "\n[a/b/c]? : ")
            if CO2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if CO2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 0
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 0
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 1
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 1
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 2
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 2
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S3
        print("")
        print("Cooling 3 Storage and shifting of thermal energy")
        print("")

        while True:
            CO31LE = input("Choose:\n(a) None."
                           "\n(b) CW storage vessels available."
                           "\n(c) CW storage vessels controlled based on external signals (from BACS or grid)."
                           "\n(d) Load shifting up to 4 hours based on external signals (from BACS or grid)."
                           "\n(e) Load shifting >4 hours based on external signals (from BACS or grid)."
                           "\n[a/b/c/d/e]? : ")
            if CO31LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO31LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 0
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 1
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 2
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 2
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 3
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # Cooling-S4
        print("Cooling 4 Report information regarding cooling system performance")
        print("")

        while True:
            CO41LE = input("Choose:\n(a) None."
                           "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                           "submetering energy usage)."
                           "\n(c) Central or remote reporting of current performance KPIs and historical data."
                           "\n(d) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking."
                           "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking; also including predictive management and fault detection."
                           "\n[a/b/c/d/e]? : ")
            if CO41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO41LE == "a":
            print("Level 0")
            print("IMPACTS")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Cooling system
        CO_WE_energy_savings = 11
        CO_WE_flexibility = 13
        CO_WE_comfort = 17
        CO_WE_convenience = 11
        CO_WE_wellbeing_and_health = 0
        CO_WE_maintenance = 14
        CO_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Cooling system
        # Cooling 1
        CO1_impact_weighting_energy_saving = CO1LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_impact_weighting_flexibility_for_the_grid_and_storage = CO1LE_Flexibility * (CO_WE_flexibility / 100)
        CO1_impact_weighting_comfort = CO1LE_Comfort * (CO_WE_comfort / 100)
        CO1_impact_weighting_convenience = CO1LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO1_impact_weighting_wellbeing_and_health = CO1LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO1_impact_weighting_maintenance_and_fault_prediction = CO1LE_Maintenance * (CO_WE_maintenance / 100)
        CO1_impact_weighting_information_to_occupants = CO1LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)
        
        # SRI impact scores by domain after impact weightings also applied
        CO1_impact_scores_energy_saving = CO1_impact_weighting_energy_saving * IM_energy_savings_on_site
        
        CO1_impact_scores_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO1_impact_scores_comfort = CO1_impact_weighting_comfort * IM_energy_savings_on_site

        CO1_impact_scores_convenience = CO1_impact_weighting_convenience * IM_energy_savings_on_site

        CO1_impact_scores_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO1_impact_scores_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site
        
        CO1_impact_scores_information_to_occupants = CO1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO1LE_Max_EnergySavings = 3
        CO1LE_Max_Flexibility = 0
        CO1LE_Max_Comfort = 2
        CO1LE_Max_Convenience = 3
        CO1LE_Max_WellbeingAndHealth = 0
        CO1LE_Max_Maintenance = 1
        CO1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO1_Max_SRI_IM_Scores_EnergySavings = CO1LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_Max_SRI_IM_Scores_Flexibility = CO1LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO1_Max_SRI_IM_Scores_Comfort = CO1LE_Max_Comfort * (CO_WE_comfort / 100)
        CO1_Max_SRI_IM_Scores_Convenience = CO1LE_Max_Convenience * (CO_WE_convenience / 100)
        CO1_Max_SRI_IM_Scores_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO1_Max_SRI_IM_Scores_Maintenance = CO1LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO1_Max_SRI_IM_Scores_InformationToOccupants = CO1LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO1_Max_impact_scores_energy_saving = CO1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO1_Max_impact_scores_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO1_Max_impact_scores_comfort = CO1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO1_Max_impact_scores_convenience = CO1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO1_Max_impact_scores_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO1_Max_impact_scores_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO1_Max_impact_scores_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 2
        CO2_impact_weighting_energy_saving = CO2LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_impact_weighting_flexibility_for_the_grid_and_storage = CO2LE_Flexibility * (CO_WE_flexibility / 100)
        CO2_impact_weighting_comfort = CO2LE_Comfort * (CO_WE_comfort / 100)
        CO2_impact_weighting_convenience = CO2LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO2_impact_weighting_wellbeing_and_health = CO2LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO2_impact_weighting_maintenance_and_fault_prediction = CO2LE_Maintenance * (CO_WE_maintenance / 100)
        CO2_impact_weighting_information_to_occupants = CO2LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO2_impact_scores_energy_saving = CO2_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO2_impact_scores_flexibility_for_the_grid_and_storage = CO2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO2_impact_scores_comfort = CO2_impact_weighting_comfort * IM_energy_savings_on_site

        CO2_impact_scores_convenience = CO2_impact_weighting_convenience * IM_energy_savings_on_site

        CO2_impact_scores_wellbeing_and_health = CO2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO2_impact_scores_maintenance_and_fault_prediction = CO2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO2_impact_scores_information_to_occupants = CO2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO2LE_Max_EnergySavings = 2
        CO2LE_Max_Flexibility = 0
        CO2LE_Max_Comfort = 2
        CO2LE_Max_Convenience = 0
        CO2LE_Max_WellbeingAndHealth = 0
        CO2LE_Max_Maintenance = 0
        CO2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO2_Max_SRI_IM_Scores_EnergySavings = CO2LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_Max_SRI_IM_Scores_Flexibility = CO2LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO2_Max_SRI_IM_Scores_Comfort = CO2LE_Max_Comfort * (CO_WE_comfort / 100)
        CO2_Max_SRI_IM_Scores_Convenience = CO2LE_Max_Convenience * (CO_WE_convenience / 100)
        CO2_Max_SRI_IM_Scores_WellbeingAndHealth = CO2LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO2_Max_SRI_IM_Scores_Maintenance = CO2LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO2_Max_SRI_IM_Scores_InformationToOccupants = CO2LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO2_Max_impact_scores_energy_saving = CO2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO2_Max_impact_scores_flexibility_for_the_grid_and_storage = CO2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO2_Max_impact_scores_comfort = CO2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO2_Max_impact_scores_convenience = CO2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO2_Max_impact_scores_wellbeing_and_health = CO2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO2_Max_impact_scores_maintenance_and_fault_prediction = CO2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO2_Max_impact_scores_information_to_occupants = CO2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 3
        CO3_impact_weighting_energy_saving = CO3LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO3_impact_weighting_flexibility_for_the_grid_and_storage = CO3LE_Flexibility * (CO_WE_flexibility / 100)
        CO3_impact_weighting_comfort = CO3LE_Comfort * (CO_WE_comfort / 100)
        CO3_impact_weighting_convenience = CO3LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO3_impact_weighting_wellbeing_and_health = CO3LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO3_impact_weighting_maintenance_and_fault_prediction = CO3LE_Maintenance * (CO_WE_maintenance / 100)
        CO3_impact_weighting_information_to_occupants = CO3LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO3_impact_scores_energy_saving = CO3_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO3_impact_scores_flexibility_for_the_grid_and_storage = CO3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO3_impact_scores_comfort = CO3_impact_weighting_comfort * IM_energy_savings_on_site

        CO3_impact_scores_convenience = CO3_impact_weighting_convenience * IM_energy_savings_on_site

        CO3_impact_scores_wellbeing_and_health = CO3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO3_impact_scores_maintenance_and_fault_prediction = CO3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO3_impact_scores_information_to_occupants = CO3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO3LE_Max_EnergySavings = 0
        CO3LE_Max_Flexibility = 3
        CO3LE_Max_Comfort = 0
        CO3LE_Max_Convenience = 0
        CO3LE_Max_WellbeingAndHealth = 0
        CO3LE_Max_Maintenance = 0
        CO3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO3_Max_SRI_IM_Scores_EnergySavings = CO3LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO3_Max_SRI_IM_Scores_Flexibility = CO3LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO3_Max_SRI_IM_Scores_Comfort = CO3LE_Max_Comfort * (CO_WE_comfort / 100)
        CO3_Max_SRI_IM_Scores_Convenience = CO3LE_Max_Convenience * (CO_WE_convenience / 100)
        CO3_Max_SRI_IM_Scores_WellbeingAndHealth = CO3LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO3_Max_SRI_IM_Scores_Maintenance = CO3LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO3_Max_SRI_IM_Scores_InformationToOccupants = CO3LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO3_Max_impact_scores_energy_saving = CO3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO3_Max_impact_scores_flexibility_for_the_grid_and_storage = CO3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO3_Max_impact_scores_comfort = CO3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO3_Max_impact_scores_convenience = CO3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO3_Max_impact_scores_wellbeing_and_health = CO3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO3_Max_impact_scores_maintenance_and_fault_prediction = CO3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO3_Max_impact_scores_information_to_occupants = CO3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #####################################################################################################################
        # Cooling 4
        CO4_impact_weighting_energy_saving = CO4LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_impact_weighting_flexibility_for_the_grid_and_storage = CO4LE_Flexibility * (CO_WE_flexibility / 100)
        CO4_impact_weighting_comfort = CO4LE_Comfort * (CO_WE_comfort / 100)
        CO4_impact_weighting_convenience = CO4LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO4_impact_weighting_wellbeing_and_health = CO4LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO4_impact_weighting_maintenance_and_fault_prediction = CO4LE_Maintenance * (CO_WE_maintenance / 100)
        CO4_impact_weighting_information_to_occupants = CO4LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO4_impact_scores_energy_saving = CO4_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO4_impact_scores_flexibility_for_the_grid_and_storage = CO4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO4_impact_scores_comfort = CO4_impact_weighting_comfort * IM_energy_savings_on_site

        CO4_impact_scores_convenience = CO4_impact_weighting_convenience * IM_energy_savings_on_site

        CO4_impact_scores_wellbeing_and_health = CO4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO4_impact_scores_maintenance_and_fault_prediction = CO4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO4_impact_scores_information_to_occupants = CO4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO4LE_Max_EnergySavings = 1
        CO4LE_Max_Flexibility = 0
        CO4LE_Max_Comfort = 0
        CO4LE_Max_Convenience = 1
        CO4LE_Max_WellbeingAndHealth = 0
        CO4LE_Max_Maintenance = 2
        CO4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        CO4_Max_SRI_IM_Scores_EnergySavings = CO4LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_Max_SRI_IM_Scores_Flexibility = CO4LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO4_Max_SRI_IM_Scores_Comfort = CO4LE_Max_Comfort * (CO_WE_comfort / 100)
        CO4_Max_SRI_IM_Scores_Convenience = CO4LE_Max_Convenience * (CO_WE_convenience / 100)
        CO4_Max_SRI_IM_Scores_WellbeingAndHealth = CO4LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO4_Max_SRI_IM_Scores_Maintenance = CO4LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO4_Max_SRI_IM_Scores_InformationToOccupants = CO4LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO4_Max_impact_scores_energy_saving = CO4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO4_Max_impact_scores_flexibility_for_the_grid_and_storage = CO4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO4_Max_impact_scores_comfort = CO4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO4_Max_impact_scores_convenience = CO4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO4_Max_impact_scores_wellbeing_and_health = CO4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO4_Max_impact_scores_maintenance_and_fault_prediction = CO4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO4_Max_impact_scores_information_to_occupants = CO4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_CO_OR_SC_EnergySavings = CO1LE_EnergySavings + CO2LE_EnergySavings + CO3LE_EnergySavings + CO4LE_EnergySavings

        sum_CO_OR_SC_Flexibility = CO1LE_Flexibility + CO2LE_Flexibility + CO3LE_Flexibility + CO4LE_Flexibility

        sum_CO_OR_SC_Comfort = CO1LE_Comfort + CO2LE_Comfort + CO3LE_Comfort + CO4LE_Comfort

        sum_CO_OR_SC_Convenience = CO1LE_Convenience + CO2LE_Convenience + CO3LE_Convenience + CO4LE_Convenience

        sum_CO_OR_SC_WellbeingAndHealth = CO1LE_WellbeingAndHealth + CO2LE_WellbeingAndHealth + CO3LE_WellbeingAndHealth + \
                                          CO4LE_WellbeingAndHealth

        sum_CO_OR_SC_Maintenance = CO1LE_Maintenance + CO2LE_Maintenance + CO3LE_Maintenance + CO4LE_Maintenance

        sum_CO_OR_SC_InformationToOccupants = CO1LE_InformationToOccupants + CO2LE_InformationToOccupants + \
                                              CO3LE_InformationToOccupants + CO4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_CO_IM_WE_energy_savings = CO1_impact_weighting_energy_saving + CO2_impact_weighting_energy_saving + \
                                      CO3_impact_weighting_energy_saving + CO4_impact_weighting_energy_saving

        sum_CO_IM_WE_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO3_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_CO_IM_WE_comfort = CO1_impact_weighting_comfort + CO2_impact_weighting_comfort + CO3_impact_weighting_comfort + \
                               CO4_impact_weighting_comfort

        sum_CO_IM_WE_convenience = CO1_impact_weighting_convenience + CO2_impact_weighting_convenience \
                                   + CO3_impact_weighting_convenience + CO4_impact_weighting_convenience

        sum_CO_IM_WE_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health + \
                                            CO2_impact_weighting_wellbeing_and_health + \
                                            CO3_impact_weighting_wellbeing_and_health + \
                                            CO4_impact_weighting_wellbeing_and_health

        sum_CO_IM_WE_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO2_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO3_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO4_impact_weighting_maintenance_and_fault_prediction

        sum_CO_IM_WE_information_to_occupants = CO1_impact_weighting_information_to_occupants + \
                                                CO2_impact_weighting_information_to_occupants + \
                                                CO3_impact_weighting_information_to_occupants + \
                                                CO4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_CO_IM_SC_energy_savings = CO1_impact_scores_energy_saving + CO2_impact_scores_energy_saving + \
                                      CO3_impact_scores_energy_saving + CO4_impact_scores_energy_saving

        sum_CO_IM_flexibility_for_the_grid_and_storage = CO1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO4_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_IM_SC_comfort = CO1_impact_scores_comfort + CO2_impact_scores_comfort + CO3_impact_scores_comfort + \
                               CO4_impact_scores_comfort

        sum_CO_IM_SC_convenience = CO1_impact_scores_convenience + CO2_impact_scores_convenience + CO3_impact_scores_convenience \
                                   + CO4_impact_scores_convenience

        sum_CO_IM_SC_wellbeing_and_health = CO1_impact_scores_wellbeing_and_health + CO2_impact_scores_wellbeing_and_health + \
                                            CO3_impact_scores_wellbeing_and_health + CO4_impact_scores_wellbeing_and_health

        sum_CO_IM_SC_maintenance_and_fault_prediction = CO1_impact_scores_maintenance_and_fault_prediction + \
                                                        CO2_impact_scores_maintenance_and_fault_prediction + \
                                                        CO3_impact_scores_maintenance_and_fault_prediction + \
                                                        CO4_impact_scores_maintenance_and_fault_prediction

        sum_CO_IM_SC_information_to_occupants = CO1_impact_scores_information_to_occupants + \
                                                CO2_impact_scores_information_to_occupants + \
                                                CO3_impact_scores_information_to_occupants + \
                                                CO4_impact_scores_information_to_occupants

        # TOTAL
        total_CO_sum_IM_SC = sum_CO_IM_SC_energy_savings + sum_CO_IM_flexibility_for_the_grid_and_storage + \
                             sum_CO_IM_SC_comfort + sum_CO_IM_SC_convenience + sum_CO_IM_SC_wellbeing_and_health + \
                             sum_CO_IM_SC_maintenance_and_fault_prediction + sum_CO_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_CO_MAX_OR_SC_EnergySavings = CO1LE_Max_EnergySavings + CO2LE_Max_EnergySavings + CO3LE_Max_EnergySavings + \
                                         CO4LE_Max_EnergySavings

        sum_CO_MAX_OR_SC_Flexibility = CO1LE_Max_Flexibility + CO2LE_Max_Flexibility + CO3LE_Max_Flexibility + \
                                       CO4LE_Max_Flexibility

        sum_CO_MAX_OR_SC_Comfort = CO1LE_Max_Comfort + CO2LE_Max_Comfort + CO3LE_Max_Comfort + CO4LE_Max_Comfort

        sum_CO_MAX_OR_SC_Convenience = CO1LE_Max_Convenience + CO2LE_Max_Convenience + CO3LE_Max_Convenience + \
                                       CO4LE_Max_Convenience

        sum_CO_MAX_OR_SC_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth + CO2LE_Max_WellbeingAndHealth + \
                                              CO3LE_Max_WellbeingAndHealth + CO4LE_Max_WellbeingAndHealth

        sum_CO_MAX_OR_SC_Maintenance = CO1LE_Max_Maintenance + CO2LE_Max_Maintenance + CO3LE_Max_Maintenance + \
                                       CO4LE_Max_Maintenance

        sum_CO_MAX_OR_SC_InformationToOccupants = CO1LE_Max_InformationToOccupants + CO2LE_Max_InformationToOccupants + \
                                                  CO3LE_Max_InformationToOccupants + CO4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_CO_MAX_IM_WE_energy_savings = CO1_Max_SRI_IM_Scores_EnergySavings + CO2_Max_SRI_IM_Scores_EnergySavings \
                                          + CO3_Max_SRI_IM_Scores_EnergySavings + CO4_Max_SRI_IM_Scores_EnergySavings

        sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility + \
                                                                CO2_Max_SRI_IM_Scores_Flexibility + \
                                                                CO3_Max_SRI_IM_Scores_Flexibility + \
                                                                CO4_Max_SRI_IM_Scores_Flexibility

        sum_CO_MAX_IM_WE_comfort = CO1_Max_SRI_IM_Scores_Comfort + CO2_Max_SRI_IM_Scores_Comfort + CO3_Max_SRI_IM_Scores_Comfort \
                                   + CO3_Max_SRI_IM_Scores_Comfort

        sum_CO_MAX_IM_WE_convenience = CO1_Max_SRI_IM_Scores_Convenience + CO2_Max_SRI_IM_Scores_Convenience \
                                       + CO3_Max_SRI_IM_Scores_Convenience + CO4_Max_SRI_IM_Scores_Convenience

        sum_CO_MAX_IM_WE_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance + \
                                                            CO2_Max_SRI_IM_Scores_Maintenance + \
                                                            CO3_Max_SRI_IM_Scores_Maintenance + \
                                                            CO4_Max_SRI_IM_Scores_Maintenance

        sum_CO_MAX_IM_WE_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_CO_MAX_IM_SC_energy_savings = CO1_Max_impact_scores_energy_saving + CO2_Max_impact_scores_energy_saving \
                                          + CO3_Max_impact_scores_energy_saving + CO4_Max_impact_scores_energy_saving

        sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = CO1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_MAX_IM_SC_comfort = CO1_Max_impact_scores_comfort + CO2_Max_impact_scores_comfort + \
                                   CO3_Max_impact_scores_comfort + CO4_Max_impact_scores_comfort

        sum_CO_MAX_IM_SC_convenience = CO1_Max_impact_scores_convenience + CO2_Max_impact_scores_convenience \
                                       + CO3_Max_impact_scores_convenience + CO4_Max_impact_scores_convenience

        sum_CO_MAX_IM_SC_wellbeing_and_health = CO1_Max_impact_scores_wellbeing_and_health + \
                                                CO2_impact_scores_wellbeing_and_health + \
                                                CO3_Max_impact_scores_wellbeing_and_health + \
                                                CO4_Max_impact_scores_wellbeing_and_health

        sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = CO1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO4_Max_impact_scores_maintenance_and_fault_prediction

        sum_CO_MAX_IM_SC_information_to_occupants = CO1_Max_impact_scores_information_to_occupants + \
                                                    CO2_Max_impact_scores_information_to_occupants + \
                                                    CO3_Max_impact_scores_information_to_occupants + \
                                                    CO4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_CO_MAX_sum_IM_SC = sum_CO_MAX_IM_SC_energy_savings + sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_CO_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_convenience + sum_CO_MAX_IM_SC_wellbeing_and_health + \
                                 sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + sum_CO_MAX_IM_SC_information_to_occupants

    if ET == "b" and TE == "a":
        # print("Cooling-S1, Cooling-S2, Cooling-S3, Cooling-S4")
        print("")
        # Cooling-S1
        print("Cooling 1 Cooling emission control")
        print("")

        while True:
            CO1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control."
                          "\n(c) Individual room control."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if CO1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 0
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 0
            CO1LE_Convenience = 0
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 1
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 1
            CO1LE_Convenience = 1
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 2
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 3
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S2
        print("Cooling 2 Generator control for cooling")
        print("")

        while True:
            CO2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load."
                          "\n[a/b/c]? : ")
            if CO2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if CO2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 0
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 0
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 1
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 1
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 2
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 2
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S3
        print("")
        print("Cooling 3 Storage and shifting of thermal energy")
        print("")

        while True:
            CO31LE = input("Choose:\n(a) None."
                           "\n(b) CW storage vessels available."
                           "\n(c) CW storage vessels controlled based on external signals (from BACS or grid)."
                           "\n(d) Load shifting up to 4 hours based on external signals (from BACS or grid)."
                           "\n(e) Load shifting >4 hours based on external signals (from BACS or grid)."
                           "\n[a/b/c/d/e]? : ")
            if CO31LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO31LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 0
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 1
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 2
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 2
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 3
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # Cooling-S4
        print("Cooling 4 Report information regarding cooling system performance")
        print("")

        while True:
            CO41LE = input("Choose:\n(a) None."
                           "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                           "submetering energy usage)."
                           "\n(c) Central or remote reporting of current performance KPIs and historical data."
                           "\n(d) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking."
                           "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking; also including predictive management and fault detection."
                           "\n[a/b/c/d/e]? : ")
            if CO41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO41LE == "a":
            print("Level 0")
            print("IMPACTS")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Cooling system
        CO_WE_energy_savings = 11
        CO_WE_flexibility = 13
        CO_WE_comfort = 17
        CO_WE_convenience = 11
        CO_WE_wellbeing_and_health = 0
        CO_WE_maintenance = 14
        CO_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Cooling system
        # Cooling 1
        CO1_impact_weighting_energy_saving = CO1LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_impact_weighting_flexibility_for_the_grid_and_storage = CO1LE_Flexibility * (CO_WE_flexibility / 100)
        CO1_impact_weighting_comfort = CO1LE_Comfort * (CO_WE_comfort / 100)
        CO1_impact_weighting_convenience = CO1LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO1_impact_weighting_wellbeing_and_health = CO1LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO1_impact_weighting_maintenance_and_fault_prediction = CO1LE_Maintenance * (CO_WE_maintenance / 100)
        CO1_impact_weighting_information_to_occupants = CO1LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO1_impact_scores_energy_saving = CO1_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO1_impact_scores_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO1_impact_scores_comfort = CO1_impact_weighting_comfort * IM_energy_savings_on_site

        CO1_impact_scores_convenience = CO1_impact_weighting_convenience * IM_energy_savings_on_site

        CO1_impact_scores_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO1_impact_scores_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO1_impact_scores_information_to_occupants = CO1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO1LE_Max_EnergySavings = 3
        CO1LE_Max_Flexibility = 0
        CO1LE_Max_Comfort = 2
        CO1LE_Max_Convenience = 3
        CO1LE_Max_WellbeingAndHealth = 0
        CO1LE_Max_Maintenance = 1
        CO1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO1_Max_SRI_IM_Scores_EnergySavings = CO1LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_Max_SRI_IM_Scores_Flexibility = CO1LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO1_Max_SRI_IM_Scores_Comfort = CO1LE_Max_Comfort * (CO_WE_comfort / 100)
        CO1_Max_SRI_IM_Scores_Convenience = CO1LE_Max_Convenience * (CO_WE_convenience / 100)
        CO1_Max_SRI_IM_Scores_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO1_Max_SRI_IM_Scores_Maintenance = CO1LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO1_Max_SRI_IM_Scores_InformationToOccupants = CO1LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO1_Max_impact_scores_energy_saving = CO1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO1_Max_impact_scores_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO1_Max_impact_scores_comfort = CO1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO1_Max_impact_scores_convenience = CO1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO1_Max_impact_scores_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO1_Max_impact_scores_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO1_Max_impact_scores_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 2
        CO2_impact_weighting_energy_saving = CO2LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_impact_weighting_flexibility_for_the_grid_and_storage = CO2LE_Flexibility * (CO_WE_flexibility / 100)
        CO2_impact_weighting_comfort = CO2LE_Comfort * (CO_WE_comfort / 100)
        CO2_impact_weighting_convenience = CO2LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO2_impact_weighting_wellbeing_and_health = CO2LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO2_impact_weighting_maintenance_and_fault_prediction = CO2LE_Maintenance * (CO_WE_maintenance / 100)
        CO2_impact_weighting_information_to_occupants = CO2LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO2_impact_scores_energy_saving = CO2_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO2_impact_scores_flexibility_for_the_grid_and_storage = CO2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO2_impact_scores_comfort = CO2_impact_weighting_comfort * IM_energy_savings_on_site

        CO2_impact_scores_convenience = CO2_impact_weighting_convenience * IM_energy_savings_on_site

        CO2_impact_scores_wellbeing_and_health = CO2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO2_impact_scores_maintenance_and_fault_prediction = CO2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO2_impact_scores_information_to_occupants = CO2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO2LE_Max_EnergySavings = 2
        CO2LE_Max_Flexibility = 0
        CO2LE_Max_Comfort = 2
        CO2LE_Max_Convenience = 0
        CO2LE_Max_WellbeingAndHealth = 0
        CO2LE_Max_Maintenance = 0
        CO2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO2_Max_SRI_IM_Scores_EnergySavings = CO2LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_Max_SRI_IM_Scores_Flexibility = CO2LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO2_Max_SRI_IM_Scores_Comfort = CO2LE_Max_Comfort * (CO_WE_comfort / 100)
        CO2_Max_SRI_IM_Scores_Convenience = CO2LE_Max_Convenience * (CO_WE_convenience / 100)
        CO2_Max_SRI_IM_Scores_WellbeingAndHealth = CO2LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO2_Max_SRI_IM_Scores_Maintenance = CO2LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO2_Max_SRI_IM_Scores_InformationToOccupants = CO2LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO2_Max_impact_scores_energy_saving = CO2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO2_Max_impact_scores_flexibility_for_the_grid_and_storage = CO2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO2_Max_impact_scores_comfort = CO2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO2_Max_impact_scores_convenience = CO2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO2_Max_impact_scores_wellbeing_and_health = CO2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO2_Max_impact_scores_maintenance_and_fault_prediction = CO2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO2_Max_impact_scores_information_to_occupants = CO2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 3
        CO3_impact_weighting_energy_saving = CO3LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO3_impact_weighting_flexibility_for_the_grid_and_storage = CO3LE_Flexibility * (CO_WE_flexibility / 100)
        CO3_impact_weighting_comfort = CO3LE_Comfort * (CO_WE_comfort / 100)
        CO3_impact_weighting_convenience = CO3LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO3_impact_weighting_wellbeing_and_health = CO3LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO3_impact_weighting_maintenance_and_fault_prediction = CO3LE_Maintenance * (CO_WE_maintenance / 100)
        CO3_impact_weighting_information_to_occupants = CO3LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO3_impact_scores_energy_saving = CO3_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO3_impact_scores_flexibility_for_the_grid_and_storage = CO3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO3_impact_scores_comfort = CO3_impact_weighting_comfort * IM_energy_savings_on_site

        CO3_impact_scores_convenience = CO3_impact_weighting_convenience * IM_energy_savings_on_site

        CO3_impact_scores_wellbeing_and_health = CO3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO3_impact_scores_maintenance_and_fault_prediction = CO3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO3_impact_scores_information_to_occupants = CO3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO3LE_Max_EnergySavings = 0
        CO3LE_Max_Flexibility = 3
        CO3LE_Max_Comfort = 0
        CO3LE_Max_Convenience = 0
        CO3LE_Max_WellbeingAndHealth = 0
        CO3LE_Max_Maintenance = 0
        CO3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO3_Max_SRI_IM_Scores_EnergySavings = CO3LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO3_Max_SRI_IM_Scores_Flexibility = CO3LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO3_Max_SRI_IM_Scores_Comfort = CO3LE_Max_Comfort * (CO_WE_comfort / 100)
        CO3_Max_SRI_IM_Scores_Convenience = CO3LE_Max_Convenience * (CO_WE_convenience / 100)
        CO3_Max_SRI_IM_Scores_WellbeingAndHealth = CO3LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO3_Max_SRI_IM_Scores_Maintenance = CO3LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO3_Max_SRI_IM_Scores_InformationToOccupants = CO3LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO3_Max_impact_scores_energy_saving = CO3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO3_Max_impact_scores_flexibility_for_the_grid_and_storage = CO3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO3_Max_impact_scores_comfort = CO3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO3_Max_impact_scores_convenience = CO3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO3_Max_impact_scores_wellbeing_and_health = CO3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO3_Max_impact_scores_maintenance_and_fault_prediction = CO3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO3_Max_impact_scores_information_to_occupants = CO3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #####################################################################################################################
        # Cooling 4
        CO4_impact_weighting_energy_saving = CO4LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_impact_weighting_flexibility_for_the_grid_and_storage = CO4LE_Flexibility * (CO_WE_flexibility / 100)
        CO4_impact_weighting_comfort = CO4LE_Comfort * (CO_WE_comfort / 100)
        CO4_impact_weighting_convenience = CO4LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO4_impact_weighting_wellbeing_and_health = CO4LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO4_impact_weighting_maintenance_and_fault_prediction = CO4LE_Maintenance * (CO_WE_maintenance / 100)
        CO4_impact_weighting_information_to_occupants = CO4LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO4_impact_scores_energy_saving = CO4_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO4_impact_scores_flexibility_for_the_grid_and_storage = CO4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO4_impact_scores_comfort = CO4_impact_weighting_comfort * IM_energy_savings_on_site

        CO4_impact_scores_convenience = CO4_impact_weighting_convenience * IM_energy_savings_on_site

        CO4_impact_scores_wellbeing_and_health = CO4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO4_impact_scores_maintenance_and_fault_prediction = CO4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO4_impact_scores_information_to_occupants = CO4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO4LE_Max_EnergySavings = 1
        CO4LE_Max_Flexibility = 0
        CO4LE_Max_Comfort = 0
        CO4LE_Max_Convenience = 1
        CO4LE_Max_WellbeingAndHealth = 0
        CO4LE_Max_Maintenance = 2
        CO4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        CO4_Max_SRI_IM_Scores_EnergySavings = CO4LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_Max_SRI_IM_Scores_Flexibility = CO4LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO4_Max_SRI_IM_Scores_Comfort = CO4LE_Max_Comfort * (CO_WE_comfort / 100)
        CO4_Max_SRI_IM_Scores_Convenience = CO4LE_Max_Convenience * (CO_WE_convenience / 100)
        CO4_Max_SRI_IM_Scores_WellbeingAndHealth = CO4LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO4_Max_SRI_IM_Scores_Maintenance = CO4LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO4_Max_SRI_IM_Scores_InformationToOccupants = CO4LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO4_Max_impact_scores_energy_saving = CO4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO4_Max_impact_scores_flexibility_for_the_grid_and_storage = CO4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO4_Max_impact_scores_comfort = CO4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO4_Max_impact_scores_convenience = CO4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO4_Max_impact_scores_wellbeing_and_health = CO4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO4_Max_impact_scores_maintenance_and_fault_prediction = CO4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO4_Max_impact_scores_information_to_occupants = CO4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_CO_OR_SC_EnergySavings = CO1LE_EnergySavings + CO2LE_EnergySavings + CO3LE_EnergySavings + CO4LE_EnergySavings

        sum_CO_OR_SC_Flexibility = CO1LE_Flexibility + CO2LE_Flexibility + CO3LE_Flexibility + CO4LE_Flexibility

        sum_CO_OR_SC_Comfort = CO1LE_Comfort + CO2LE_Comfort + CO3LE_Comfort + CO4LE_Comfort

        sum_CO_OR_SC_Convenience = CO1LE_Convenience + CO2LE_Convenience + CO3LE_Convenience + CO4LE_Convenience

        sum_CO_OR_SC_WellbeingAndHealth = CO1LE_WellbeingAndHealth + CO2LE_WellbeingAndHealth + CO3LE_WellbeingAndHealth + \
                                          CO4LE_WellbeingAndHealth

        sum_CO_OR_SC_Maintenance = CO1LE_Maintenance + CO2LE_Maintenance + CO3LE_Maintenance + CO4LE_Maintenance

        sum_CO_OR_SC_InformationToOccupants = CO1LE_InformationToOccupants + CO2LE_InformationToOccupants + \
                                              CO3LE_InformationToOccupants + CO4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_CO_IM_WE_energy_savings = CO1_impact_weighting_energy_saving + CO2_impact_weighting_energy_saving + \
                                      CO3_impact_weighting_energy_saving + CO4_impact_weighting_energy_saving

        sum_CO_IM_WE_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO3_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_CO_IM_WE_comfort = CO1_impact_weighting_comfort + CO2_impact_weighting_comfort + CO3_impact_weighting_comfort + \
                               CO4_impact_weighting_comfort

        sum_CO_IM_WE_convenience = CO1_impact_weighting_convenience + CO2_impact_weighting_convenience \
                                   + CO3_impact_weighting_convenience + CO4_impact_weighting_convenience

        sum_CO_IM_WE_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health + \
                                            CO2_impact_weighting_wellbeing_and_health + \
                                            CO3_impact_weighting_wellbeing_and_health + \
                                            CO4_impact_weighting_wellbeing_and_health

        sum_CO_IM_WE_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO2_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO3_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO4_impact_weighting_maintenance_and_fault_prediction

        sum_CO_IM_WE_information_to_occupants = CO1_impact_weighting_information_to_occupants + \
                                                CO2_impact_weighting_information_to_occupants + \
                                                CO3_impact_weighting_information_to_occupants + \
                                                CO4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_CO_IM_SC_energy_savings = CO1_impact_scores_energy_saving + CO2_impact_scores_energy_saving + \
                                      CO3_impact_scores_energy_saving + CO4_impact_scores_energy_saving

        sum_CO_IM_flexibility_for_the_grid_and_storage = CO1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO4_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_IM_SC_comfort = CO1_impact_scores_comfort + CO2_impact_scores_comfort + CO3_impact_scores_comfort + \
                               CO4_impact_scores_comfort

        sum_CO_IM_SC_convenience = CO1_impact_scores_convenience + CO2_impact_scores_convenience + CO3_impact_scores_convenience \
                                   + CO4_impact_scores_convenience

        sum_CO_IM_SC_wellbeing_and_health = CO1_impact_scores_wellbeing_and_health + CO2_impact_scores_wellbeing_and_health + \
                                            CO3_impact_scores_wellbeing_and_health + CO4_impact_scores_wellbeing_and_health

        sum_CO_IM_SC_maintenance_and_fault_prediction = CO1_impact_scores_maintenance_and_fault_prediction + \
                                                        CO2_impact_scores_maintenance_and_fault_prediction + \
                                                        CO3_impact_scores_maintenance_and_fault_prediction + \
                                                        CO4_impact_scores_maintenance_and_fault_prediction

        sum_CO_IM_SC_information_to_occupants = CO1_impact_scores_information_to_occupants + \
                                                CO2_impact_scores_information_to_occupants + \
                                                CO3_impact_scores_information_to_occupants + \
                                                CO4_impact_scores_information_to_occupants

        # TOTAL
        total_CO_sum_IM_SC = sum_CO_IM_SC_energy_savings + sum_CO_IM_flexibility_for_the_grid_and_storage + \
                             sum_CO_IM_SC_comfort + sum_CO_IM_SC_convenience + sum_CO_IM_SC_wellbeing_and_health + \
                             sum_CO_IM_SC_maintenance_and_fault_prediction + sum_CO_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_CO_MAX_OR_SC_EnergySavings = CO1LE_Max_EnergySavings + CO2LE_Max_EnergySavings + CO3LE_Max_EnergySavings + \
                                         CO4LE_Max_EnergySavings

        sum_CO_MAX_OR_SC_Flexibility = CO1LE_Max_Flexibility + CO2LE_Max_Flexibility + CO3LE_Max_Flexibility + \
                                       CO4LE_Max_Flexibility

        sum_CO_MAX_OR_SC_Comfort = CO1LE_Max_Comfort + CO2LE_Max_Comfort + CO3LE_Max_Comfort + CO4LE_Max_Comfort

        sum_CO_MAX_OR_SC_Convenience = CO1LE_Max_Convenience + CO2LE_Max_Convenience + CO3LE_Max_Convenience + \
                                       CO4LE_Max_Convenience

        sum_CO_MAX_OR_SC_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth + CO2LE_Max_WellbeingAndHealth + \
                                              CO3LE_Max_WellbeingAndHealth + CO4LE_Max_WellbeingAndHealth

        sum_CO_MAX_OR_SC_Maintenance = CO1LE_Max_Maintenance + CO2LE_Max_Maintenance + CO3LE_Max_Maintenance + \
                                       CO4LE_Max_Maintenance

        sum_CO_MAX_OR_SC_InformationToOccupants = CO1LE_Max_InformationToOccupants + CO2LE_Max_InformationToOccupants + \
                                                  CO3LE_Max_InformationToOccupants + CO4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_CO_MAX_IM_WE_energy_savings = CO1_Max_SRI_IM_Scores_EnergySavings + CO2_Max_SRI_IM_Scores_EnergySavings \
                                          + CO3_Max_SRI_IM_Scores_EnergySavings + CO4_Max_SRI_IM_Scores_EnergySavings

        sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility + \
                                                                CO2_Max_SRI_IM_Scores_Flexibility + \
                                                                CO3_Max_SRI_IM_Scores_Flexibility + \
                                                                CO4_Max_SRI_IM_Scores_Flexibility

        sum_CO_MAX_IM_WE_comfort = CO1_Max_SRI_IM_Scores_Comfort + CO2_Max_SRI_IM_Scores_Comfort + CO3_Max_SRI_IM_Scores_Comfort \
                                   + CO3_Max_SRI_IM_Scores_Comfort

        sum_CO_MAX_IM_WE_convenience = CO1_Max_SRI_IM_Scores_Convenience + CO2_Max_SRI_IM_Scores_Convenience \
                                       + CO3_Max_SRI_IM_Scores_Convenience + CO4_Max_SRI_IM_Scores_Convenience

        sum_CO_MAX_IM_WE_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance + \
                                                            CO2_Max_SRI_IM_Scores_Maintenance + \
                                                            CO3_Max_SRI_IM_Scores_Maintenance + \
                                                            CO4_Max_SRI_IM_Scores_Maintenance

        sum_CO_MAX_IM_WE_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_CO_MAX_IM_SC_energy_savings = CO1_Max_impact_scores_energy_saving + CO2_Max_impact_scores_energy_saving \
                                          + CO3_Max_impact_scores_energy_saving + CO4_Max_impact_scores_energy_saving

        sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = CO1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_MAX_IM_SC_comfort = CO1_Max_impact_scores_comfort + CO2_Max_impact_scores_comfort + \
                                   CO3_Max_impact_scores_comfort + CO4_Max_impact_scores_comfort

        sum_CO_MAX_IM_SC_convenience = CO1_Max_impact_scores_convenience + CO2_Max_impact_scores_convenience \
                                       + CO3_Max_impact_scores_convenience + CO4_Max_impact_scores_convenience

        sum_CO_MAX_IM_SC_wellbeing_and_health = CO1_Max_impact_scores_wellbeing_and_health + \
                                                CO2_impact_scores_wellbeing_and_health + \
                                                CO3_Max_impact_scores_wellbeing_and_health + \
                                                CO4_Max_impact_scores_wellbeing_and_health

        sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = CO1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO4_Max_impact_scores_maintenance_and_fault_prediction

        sum_CO_MAX_IM_SC_information_to_occupants = CO1_Max_impact_scores_information_to_occupants + \
                                                    CO2_Max_impact_scores_information_to_occupants + \
                                                    CO3_Max_impact_scores_information_to_occupants + \
                                                    CO4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_CO_MAX_sum_IM_SC = sum_CO_MAX_IM_SC_energy_savings + sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_CO_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_convenience + sum_CO_MAX_IM_SC_wellbeing_and_health + \
                                 sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + sum_CO_MAX_IM_SC_information_to_occupants

    if ET == "c" and TE == "a":
        # print("Cooling-S1, Cooling-S2, Cooling-S3, Cooling-S4")
        print("")
        # Cooling-S1
        print("Cooling 1 Cooling emission control")
        print("")

        while True:
            CO1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control."
                          "\n(c) Individual room control."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if CO1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 0
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 0
            CO1LE_Convenience = 0
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 1
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 1
            CO1LE_Convenience = 1
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 2
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 3
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S2
        print("Cooling 2 Generator control for cooling")
        print("")

        while True:
            CO2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load."
                          "\n[a/b/c]? : ")
            if CO2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if CO2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 0
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 0
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 1
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 1
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 2
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 2
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S3
        print("")
        print("Cooling 3 Storage and shifting of thermal energy")
        print("")

        while True:
            CO31LE = input("Choose:\n(a) None."
                           "\n(b) CW storage vessels available."
                           "\n(c) CW storage vessels controlled based on external signals (from BACS or grid)."
                           "\n(d) Load shifting up to 4 hours based on external signals (from BACS or grid)."
                           "\n(e) Load shifting >4 hours based on external signals (from BACS or grid)."
                           "\n[a/b/c/d/e]? : ")
            if CO31LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO31LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 0
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 1
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 2
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 2
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        elif CO31LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO3LE_EnergySavings = 0
            CO3LE_Flexibility = 3
            CO3LE_Comfort = 0
            CO3LE_Convenience = 0
            CO3LE_WellbeingAndHealth = 0
            CO3LE_Maintenance = 0
            CO3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO3LE_Flexibility))
            print("Comfort: " + str(CO3LE_Comfort))
            print("Convenience: " + str(CO3LE_Convenience))
            print("Health & wellbeing: " + str(CO3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO3LE_Maintenance))
            print("Information to occupants: " + str(CO3LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # Cooling-S4
        print("Cooling 4 Report information regarding cooling system performance")
        print("")

        while True:
            CO41LE = input("Choose:\n(a) None."
                           "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                           "submetering energy usage)."
                           "\n(c) Central or remote reporting of current performance KPIs and historical data."
                           "\n(d) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking."
                           "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking; also including predictive management and fault detection."
                           "\n[a/b/c/d/e]? : ")
            if CO41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO41LE == "a":
            print("Level 0")
            print("IMPACTS")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Cooling system
        CO_WE_energy_savings = 11
        CO_WE_flexibility = 13
        CO_WE_comfort = 17
        CO_WE_convenience = 11
        CO_WE_wellbeing_and_health = 0
        CO_WE_maintenance = 14
        CO_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Cooling system
        # Cooling 1
        CO1_impact_weighting_energy_saving = CO1LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_impact_weighting_flexibility_for_the_grid_and_storage = CO1LE_Flexibility * (CO_WE_flexibility / 100)
        CO1_impact_weighting_comfort = CO1LE_Comfort * (CO_WE_comfort / 100)
        CO1_impact_weighting_convenience = CO1LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO1_impact_weighting_wellbeing_and_health = CO1LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO1_impact_weighting_maintenance_and_fault_prediction = CO1LE_Maintenance * (CO_WE_maintenance / 100)
        CO1_impact_weighting_information_to_occupants = CO1LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO1_impact_scores_energy_saving = CO1_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO1_impact_scores_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO1_impact_scores_comfort = CO1_impact_weighting_comfort * IM_energy_savings_on_site

        CO1_impact_scores_convenience = CO1_impact_weighting_convenience * IM_energy_savings_on_site

        CO1_impact_scores_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO1_impact_scores_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO1_impact_scores_information_to_occupants = CO1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO1LE_Max_EnergySavings = 3
        CO1LE_Max_Flexibility = 0
        CO1LE_Max_Comfort = 2
        CO1LE_Max_Convenience = 3
        CO1LE_Max_WellbeingAndHealth = 0
        CO1LE_Max_Maintenance = 1
        CO1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO1_Max_SRI_IM_Scores_EnergySavings = CO1LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_Max_SRI_IM_Scores_Flexibility = CO1LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO1_Max_SRI_IM_Scores_Comfort = CO1LE_Max_Comfort * (CO_WE_comfort / 100)
        CO1_Max_SRI_IM_Scores_Convenience = CO1LE_Max_Convenience * (CO_WE_convenience / 100)
        CO1_Max_SRI_IM_Scores_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO1_Max_SRI_IM_Scores_Maintenance = CO1LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO1_Max_SRI_IM_Scores_InformationToOccupants = CO1LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO1_Max_impact_scores_energy_saving = CO1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO1_Max_impact_scores_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO1_Max_impact_scores_comfort = CO1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO1_Max_impact_scores_convenience = CO1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO1_Max_impact_scores_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO1_Max_impact_scores_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO1_Max_impact_scores_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 2
        CO2_impact_weighting_energy_saving = CO2LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_impact_weighting_flexibility_for_the_grid_and_storage = CO2LE_Flexibility * (CO_WE_flexibility / 100)
        CO2_impact_weighting_comfort = CO2LE_Comfort * (CO_WE_comfort / 100)
        CO2_impact_weighting_convenience = CO2LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO2_impact_weighting_wellbeing_and_health = CO2LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO2_impact_weighting_maintenance_and_fault_prediction = CO2LE_Maintenance * (CO_WE_maintenance / 100)
        CO2_impact_weighting_information_to_occupants = CO2LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO2_impact_scores_energy_saving = CO2_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO2_impact_scores_flexibility_for_the_grid_and_storage = CO2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO2_impact_scores_comfort = CO2_impact_weighting_comfort * IM_energy_savings_on_site

        CO2_impact_scores_convenience = CO2_impact_weighting_convenience * IM_energy_savings_on_site

        CO2_impact_scores_wellbeing_and_health = CO2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO2_impact_scores_maintenance_and_fault_prediction = CO2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO2_impact_scores_information_to_occupants = CO2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO2LE_Max_EnergySavings = 2
        CO2LE_Max_Flexibility = 0
        CO2LE_Max_Comfort = 2
        CO2LE_Max_Convenience = 0
        CO2LE_Max_WellbeingAndHealth = 0
        CO2LE_Max_Maintenance = 0
        CO2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO2_Max_SRI_IM_Scores_EnergySavings = CO2LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_Max_SRI_IM_Scores_Flexibility = CO2LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO2_Max_SRI_IM_Scores_Comfort = CO2LE_Max_Comfort * (CO_WE_comfort / 100)
        CO2_Max_SRI_IM_Scores_Convenience = CO2LE_Max_Convenience * (CO_WE_convenience / 100)
        CO2_Max_SRI_IM_Scores_WellbeingAndHealth = CO2LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO2_Max_SRI_IM_Scores_Maintenance = CO2LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO2_Max_SRI_IM_Scores_InformationToOccupants = CO2LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO2_Max_impact_scores_energy_saving = CO2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO2_Max_impact_scores_flexibility_for_the_grid_and_storage = CO2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO2_Max_impact_scores_comfort = CO2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO2_Max_impact_scores_convenience = CO2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO2_Max_impact_scores_wellbeing_and_health = CO2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO2_Max_impact_scores_maintenance_and_fault_prediction = CO2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO2_Max_impact_scores_information_to_occupants = CO2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 3
        CO3_impact_weighting_energy_saving = CO3LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO3_impact_weighting_flexibility_for_the_grid_and_storage = CO3LE_Flexibility * (CO_WE_flexibility / 100)
        CO3_impact_weighting_comfort = CO3LE_Comfort * (CO_WE_comfort / 100)
        CO3_impact_weighting_convenience = CO3LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO3_impact_weighting_wellbeing_and_health = CO3LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO3_impact_weighting_maintenance_and_fault_prediction = CO3LE_Maintenance * (CO_WE_maintenance / 100)
        CO3_impact_weighting_information_to_occupants = CO3LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO3_impact_scores_energy_saving = CO3_impact_weighting_energy_saving * IM_energy_savings_on_site
        CO3_impact_scores_flexibility_for_the_grid_and_storage = CO3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO3_impact_scores_comfort = CO3_impact_weighting_comfort * IM_energy_savings_on_site

        CO3_impact_scores_convenience = CO3_impact_weighting_convenience * IM_energy_savings_on_site

        CO3_impact_scores_wellbeing_and_health = CO3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO3_impact_scores_maintenance_and_fault_prediction = CO3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO3_impact_scores_information_to_occupants = CO3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO3LE_Max_EnergySavings = 0
        CO3LE_Max_Flexibility = 3
        CO3LE_Max_Comfort = 0
        CO3LE_Max_Convenience = 0
        CO3LE_Max_WellbeingAndHealth = 0
        CO3LE_Max_Maintenance = 0
        CO3LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO3_Max_SRI_IM_Scores_EnergySavings = CO3LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO3_Max_SRI_IM_Scores_Flexibility = CO3LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO3_Max_SRI_IM_Scores_Comfort = CO3LE_Max_Comfort * (CO_WE_comfort / 100)
        CO3_Max_SRI_IM_Scores_Convenience = CO3LE_Max_Convenience * (CO_WE_convenience / 100)
        CO3_Max_SRI_IM_Scores_WellbeingAndHealth = CO3LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO3_Max_SRI_IM_Scores_Maintenance = CO3LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO3_Max_SRI_IM_Scores_InformationToOccupants = CO3LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO3_Max_impact_scores_energy_saving = CO3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO3_Max_impact_scores_flexibility_for_the_grid_and_storage = CO3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO3_Max_impact_scores_comfort = CO3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO3_Max_impact_scores_convenience = CO3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO3_Max_impact_scores_wellbeing_and_health = CO3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO3_Max_impact_scores_maintenance_and_fault_prediction = CO3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO3_Max_impact_scores_information_to_occupants = CO3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        #####################################################################################################################
        # Cooling 4
        CO4_impact_weighting_energy_saving = CO4LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_impact_weighting_flexibility_for_the_grid_and_storage = CO4LE_Flexibility * (CO_WE_flexibility / 100)
        CO4_impact_weighting_comfort = CO4LE_Comfort * (CO_WE_comfort / 100)
        CO4_impact_weighting_convenience = CO4LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO4_impact_weighting_wellbeing_and_health = CO4LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO4_impact_weighting_maintenance_and_fault_prediction = CO4LE_Maintenance * (CO_WE_maintenance / 100)
        CO4_impact_weighting_information_to_occupants = CO4LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO4_impact_scores_energy_saving = CO4_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO4_impact_scores_flexibility_for_the_grid_and_storage = CO4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO4_impact_scores_comfort = CO4_impact_weighting_comfort * IM_energy_savings_on_site

        CO4_impact_scores_convenience = CO4_impact_weighting_convenience * IM_energy_savings_on_site

        CO4_impact_scores_wellbeing_and_health = CO4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO4_impact_scores_maintenance_and_fault_prediction = CO4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO4_impact_scores_information_to_occupants = CO4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO4LE_Max_EnergySavings = 1
        CO4LE_Max_Flexibility = 0
        CO4LE_Max_Comfort = 0
        CO4LE_Max_Convenience = 1
        CO4LE_Max_WellbeingAndHealth = 0
        CO4LE_Max_Maintenance = 2
        CO4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        CO4_Max_SRI_IM_Scores_EnergySavings = CO4LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_Max_SRI_IM_Scores_Flexibility = CO4LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO4_Max_SRI_IM_Scores_Comfort = CO4LE_Max_Comfort * (CO_WE_comfort / 100)
        CO4_Max_SRI_IM_Scores_Convenience = CO4LE_Max_Convenience * (CO_WE_convenience / 100)
        CO4_Max_SRI_IM_Scores_WellbeingAndHealth = CO4LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO4_Max_SRI_IM_Scores_Maintenance = CO4LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO4_Max_SRI_IM_Scores_InformationToOccupants = CO4LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO4_Max_impact_scores_energy_saving = CO4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO4_Max_impact_scores_flexibility_for_the_grid_and_storage = CO4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO4_Max_impact_scores_comfort = CO4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO4_Max_impact_scores_convenience = CO4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO4_Max_impact_scores_wellbeing_and_health = CO4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO4_Max_impact_scores_maintenance_and_fault_prediction = CO4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO4_Max_impact_scores_information_to_occupants = CO4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_CO_OR_SC_EnergySavings = CO1LE_EnergySavings + CO2LE_EnergySavings + CO3LE_EnergySavings + CO4LE_EnergySavings

        sum_CO_OR_SC_Flexibility = CO1LE_Flexibility + CO2LE_Flexibility + CO3LE_Flexibility + CO4LE_Flexibility

        sum_CO_OR_SC_Comfort = CO1LE_Comfort + CO2LE_Comfort + CO3LE_Comfort + CO4LE_Comfort

        sum_CO_OR_SC_Convenience = CO1LE_Convenience + CO2LE_Convenience + CO3LE_Convenience + CO4LE_Convenience

        sum_CO_OR_SC_WellbeingAndHealth = CO1LE_WellbeingAndHealth + CO2LE_WellbeingAndHealth + CO3LE_WellbeingAndHealth + \
                                          CO4LE_WellbeingAndHealth

        sum_CO_OR_SC_Maintenance = CO1LE_Maintenance + CO2LE_Maintenance + CO3LE_Maintenance + CO4LE_Maintenance

        sum_CO_OR_SC_InformationToOccupants = CO1LE_InformationToOccupants + CO2LE_InformationToOccupants + \
                                              CO3LE_InformationToOccupants + CO4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_CO_IM_WE_energy_savings = CO1_impact_weighting_energy_saving + CO2_impact_weighting_energy_saving + \
                                      CO3_impact_weighting_energy_saving + CO4_impact_weighting_energy_saving

        sum_CO_IM_WE_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO3_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_CO_IM_WE_comfort = CO1_impact_weighting_comfort + CO2_impact_weighting_comfort + CO3_impact_weighting_comfort + \
                               CO4_impact_weighting_comfort

        sum_CO_IM_WE_convenience = CO1_impact_weighting_convenience + CO2_impact_weighting_convenience \
                                   + CO3_impact_weighting_convenience + CO4_impact_weighting_convenience

        sum_CO_IM_WE_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health + \
                                            CO2_impact_weighting_wellbeing_and_health + \
                                            CO3_impact_weighting_wellbeing_and_health + \
                                            CO4_impact_weighting_wellbeing_and_health

        sum_CO_IM_WE_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO2_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO3_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO4_impact_weighting_maintenance_and_fault_prediction

        sum_CO_IM_WE_information_to_occupants = CO1_impact_weighting_information_to_occupants + \
                                                CO2_impact_weighting_information_to_occupants + \
                                                CO3_impact_weighting_information_to_occupants + \
                                                CO4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_CO_IM_SC_energy_savings = CO1_impact_scores_energy_saving + CO2_impact_scores_energy_saving + \
                                      CO3_impact_scores_energy_saving + CO4_impact_scores_energy_saving

        sum_CO_IM_flexibility_for_the_grid_and_storage = CO1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO4_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_IM_SC_comfort = CO1_impact_scores_comfort + CO2_impact_scores_comfort + CO3_impact_scores_comfort + \
                               CO4_impact_scores_comfort

        sum_CO_IM_SC_convenience = CO1_impact_scores_convenience + CO2_impact_scores_convenience + CO3_impact_scores_convenience \
                                   + CO4_impact_scores_convenience

        sum_CO_IM_SC_wellbeing_and_health = CO1_impact_scores_wellbeing_and_health + CO2_impact_scores_wellbeing_and_health + \
                                            CO3_impact_scores_wellbeing_and_health + CO4_impact_scores_wellbeing_and_health

        sum_CO_IM_SC_maintenance_and_fault_prediction = CO1_impact_scores_maintenance_and_fault_prediction + \
                                                        CO2_impact_scores_maintenance_and_fault_prediction + \
                                                        CO3_impact_scores_maintenance_and_fault_prediction + \
                                                        CO4_impact_scores_maintenance_and_fault_prediction

        sum_CO_IM_SC_information_to_occupants = CO1_impact_scores_information_to_occupants + \
                                                CO2_impact_scores_information_to_occupants + \
                                                CO3_impact_scores_information_to_occupants + \
                                                CO4_impact_scores_information_to_occupants

        # TOTAL
        total_CO_sum_IM_SC = sum_CO_IM_SC_energy_savings + sum_CO_IM_flexibility_for_the_grid_and_storage + \
                             sum_CO_IM_SC_comfort + sum_CO_IM_SC_convenience + sum_CO_IM_SC_wellbeing_and_health + \
                             sum_CO_IM_SC_maintenance_and_fault_prediction + sum_CO_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_CO_MAX_OR_SC_EnergySavings = CO1LE_Max_EnergySavings + CO2LE_Max_EnergySavings + CO3LE_Max_EnergySavings + \
                                         CO4LE_Max_EnergySavings

        sum_CO_MAX_OR_SC_Flexibility = CO1LE_Max_Flexibility + CO2LE_Max_Flexibility + CO3LE_Max_Flexibility + \
                                       CO4LE_Max_Flexibility

        sum_CO_MAX_OR_SC_Comfort = CO1LE_Max_Comfort + CO2LE_Max_Comfort + CO3LE_Max_Comfort + CO4LE_Max_Comfort

        sum_CO_MAX_OR_SC_Convenience = CO1LE_Max_Convenience + CO2LE_Max_Convenience + CO3LE_Max_Convenience + \
                                       CO4LE_Max_Convenience

        sum_CO_MAX_OR_SC_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth + CO2LE_Max_WellbeingAndHealth + \
                                              CO3LE_Max_WellbeingAndHealth + CO4LE_Max_WellbeingAndHealth

        sum_CO_MAX_OR_SC_Maintenance = CO1LE_Max_Maintenance + CO2LE_Max_Maintenance + CO3LE_Max_Maintenance + \
                                       CO4LE_Max_Maintenance

        sum_CO_MAX_OR_SC_InformationToOccupants = CO1LE_Max_InformationToOccupants + CO2LE_Max_InformationToOccupants + \
                                                  CO3LE_Max_InformationToOccupants + CO4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_CO_MAX_IM_WE_energy_savings = CO1_Max_SRI_IM_Scores_EnergySavings + CO2_Max_SRI_IM_Scores_EnergySavings \
                                          + CO3_Max_SRI_IM_Scores_EnergySavings + CO4_Max_SRI_IM_Scores_EnergySavings

        sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility + \
                                                                CO2_Max_SRI_IM_Scores_Flexibility + \
                                                                CO3_Max_SRI_IM_Scores_Flexibility + \
                                                                CO4_Max_SRI_IM_Scores_Flexibility

        sum_CO_MAX_IM_WE_comfort = CO1_Max_SRI_IM_Scores_Comfort + CO2_Max_SRI_IM_Scores_Comfort + CO3_Max_SRI_IM_Scores_Comfort \
                                   + CO3_Max_SRI_IM_Scores_Comfort

        sum_CO_MAX_IM_WE_convenience = CO1_Max_SRI_IM_Scores_Convenience + CO2_Max_SRI_IM_Scores_Convenience \
                                       + CO3_Max_SRI_IM_Scores_Convenience + CO4_Max_SRI_IM_Scores_Convenience

        sum_CO_MAX_IM_WE_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance + \
                                                            CO2_Max_SRI_IM_Scores_Maintenance + \
                                                            CO3_Max_SRI_IM_Scores_Maintenance + \
                                                            CO4_Max_SRI_IM_Scores_Maintenance

        sum_CO_MAX_IM_WE_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_CO_MAX_IM_SC_energy_savings = CO1_Max_impact_scores_energy_saving + CO2_Max_impact_scores_energy_saving \
                                          + CO3_Max_impact_scores_energy_saving + CO4_Max_impact_scores_energy_saving

        sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = CO1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_MAX_IM_SC_comfort = CO1_Max_impact_scores_comfort + CO2_Max_impact_scores_comfort + \
                                   CO3_Max_impact_scores_comfort + CO4_Max_impact_scores_comfort

        sum_CO_MAX_IM_SC_convenience = CO1_Max_impact_scores_convenience + CO2_Max_impact_scores_convenience \
                                       + CO3_Max_impact_scores_convenience + CO4_Max_impact_scores_convenience

        sum_CO_MAX_IM_SC_wellbeing_and_health = CO1_Max_impact_scores_wellbeing_and_health + \
                                                CO2_impact_scores_wellbeing_and_health + \
                                                CO3_Max_impact_scores_wellbeing_and_health + \
                                                CO4_Max_impact_scores_wellbeing_and_health

        sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = CO1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO4_Max_impact_scores_maintenance_and_fault_prediction

        sum_CO_MAX_IM_SC_information_to_occupants = CO1_Max_impact_scores_information_to_occupants + \
                                                    CO2_Max_impact_scores_information_to_occupants + \
                                                    CO3_Max_impact_scores_information_to_occupants + \
                                                    CO4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_CO_MAX_sum_IM_SC = sum_CO_MAX_IM_SC_energy_savings + sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_CO_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_convenience + sum_CO_MAX_IM_SC_wellbeing_and_health + \
                                 sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + sum_CO_MAX_IM_SC_information_to_occupants

    if ET == "a" and TE == "b":
        # print("Cooling-S1, Cooling-S2, Cooling-S4")
        print("")
        # Cooling-S1
        print("Cooling 1 Cooling emission control")
        print("")

        while True:
            CO1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control."
                          "\n(c) Individual room control."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if CO1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 0
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 0
            CO1LE_Convenience = 0
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 1
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 1
            CO1LE_Convenience = 1
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 2
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 3
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S2
        print("Cooling 2 Generator control for cooling")
        print("")

        while True:
            CO2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load."
                          "\n[a/b/c]? : ")
            if CO2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if CO2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 0
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 0
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 1
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 1
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 2
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 2
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # Cooling-S4
        print("Cooling 4 Report information regarding cooling system performance")
        print("")

        while True:
            CO41LE = input("Choose:\n(a) None."
                           "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                           "submetering energy usage)."
                           "\n(c) Central or remote reporting of current performance KPIs and historical data."
                           "\n(d) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking."
                           "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking; also including predictive management and fault detection."
                           "\n[a/b/c/d/e]? : ")
            if CO41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO41LE == "a":
            print("Level 0")
            print("IMPACTS")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Cooling system
        CO_WE_energy_savings = 11
        CO_WE_flexibility = 13
        CO_WE_comfort = 17
        CO_WE_convenience = 11
        CO_WE_wellbeing_and_health = 0
        CO_WE_maintenance = 14
        CO_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Cooling system
        # Cooling 1
        CO1_impact_weighting_energy_saving = CO1LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_impact_weighting_flexibility_for_the_grid_and_storage = CO1LE_Flexibility * (CO_WE_flexibility / 100)
        CO1_impact_weighting_comfort = CO1LE_Comfort * (CO_WE_comfort / 100)
        CO1_impact_weighting_convenience = CO1LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO1_impact_weighting_wellbeing_and_health = CO1LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO1_impact_weighting_maintenance_and_fault_prediction = CO1LE_Maintenance * (CO_WE_maintenance / 100)
        CO1_impact_weighting_information_to_occupants = CO1LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO1_impact_scores_energy_saving = CO1_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO1_impact_scores_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO1_impact_scores_comfort = CO1_impact_weighting_comfort * IM_energy_savings_on_site

        CO1_impact_scores_convenience = CO1_impact_weighting_convenience * IM_energy_savings_on_site

        CO1_impact_scores_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO1_impact_scores_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO1_impact_scores_information_to_occupants = CO1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO1LE_Max_EnergySavings = 3
        CO1LE_Max_Flexibility = 0
        CO1LE_Max_Comfort = 2
        CO1LE_Max_Convenience = 3
        CO1LE_Max_WellbeingAndHealth = 0
        CO1LE_Max_Maintenance = 1
        CO1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO1_Max_SRI_IM_Scores_EnergySavings = CO1LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_Max_SRI_IM_Scores_Flexibility = CO1LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO1_Max_SRI_IM_Scores_Comfort = CO1LE_Max_Comfort * (CO_WE_comfort / 100)
        CO1_Max_SRI_IM_Scores_Convenience = CO1LE_Max_Convenience * (CO_WE_convenience / 100)
        CO1_Max_SRI_IM_Scores_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO1_Max_SRI_IM_Scores_Maintenance = CO1LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO1_Max_SRI_IM_Scores_InformationToOccupants = CO1LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO1_Max_impact_scores_energy_saving = CO1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO1_Max_impact_scores_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO1_Max_impact_scores_comfort = CO1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO1_Max_impact_scores_convenience = CO1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO1_Max_impact_scores_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO1_Max_impact_scores_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO1_Max_impact_scores_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 2
        CO2_impact_weighting_energy_saving = CO2LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_impact_weighting_flexibility_for_the_grid_and_storage = CO2LE_Flexibility * (CO_WE_flexibility / 100)
        CO2_impact_weighting_comfort = CO2LE_Comfort * (CO_WE_comfort / 100)
        CO2_impact_weighting_convenience = CO2LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO2_impact_weighting_wellbeing_and_health = CO2LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO2_impact_weighting_maintenance_and_fault_prediction = CO2LE_Maintenance * (CO_WE_maintenance / 100)
        CO2_impact_weighting_information_to_occupants = CO2LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO2_impact_scores_energy_saving = CO2_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO2_impact_scores_flexibility_for_the_grid_and_storage = CO2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO2_impact_scores_comfort = CO2_impact_weighting_comfort * IM_energy_savings_on_site

        CO2_impact_scores_convenience = CO2_impact_weighting_convenience * IM_energy_savings_on_site

        CO2_impact_scores_wellbeing_and_health = CO2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO2_impact_scores_maintenance_and_fault_prediction = CO2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO2_impact_scores_information_to_occupants = CO2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO2LE_Max_EnergySavings = 2
        CO2LE_Max_Flexibility = 0
        CO2LE_Max_Comfort = 2
        CO2LE_Max_Convenience = 0
        CO2LE_Max_WellbeingAndHealth = 0
        CO2LE_Max_Maintenance = 0
        CO2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO2_Max_SRI_IM_Scores_EnergySavings = CO2LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_Max_SRI_IM_Scores_Flexibility = CO2LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO2_Max_SRI_IM_Scores_Comfort = CO2LE_Max_Comfort * (CO_WE_comfort / 100)
        CO2_Max_SRI_IM_Scores_Convenience = CO2LE_Max_Convenience * (CO_WE_convenience / 100)
        CO2_Max_SRI_IM_Scores_WellbeingAndHealth = CO2LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO2_Max_SRI_IM_Scores_Maintenance = CO2LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO2_Max_SRI_IM_Scores_InformationToOccupants = CO2LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO2_Max_impact_scores_energy_saving = CO2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO2_Max_impact_scores_flexibility_for_the_grid_and_storage = CO2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO2_Max_impact_scores_comfort = CO2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO2_Max_impact_scores_convenience = CO2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO2_Max_impact_scores_wellbeing_and_health = CO2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO2_Max_impact_scores_maintenance_and_fault_prediction = CO2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO2_Max_impact_scores_information_to_occupants = CO2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################

        # Cooling 4
        CO4_impact_weighting_energy_saving = CO4LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_impact_weighting_flexibility_for_the_grid_and_storage = CO4LE_Flexibility * (CO_WE_flexibility / 100)
        CO4_impact_weighting_comfort = CO4LE_Comfort * (CO_WE_comfort / 100)
        CO4_impact_weighting_convenience = CO4LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO4_impact_weighting_wellbeing_and_health = CO4LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO4_impact_weighting_maintenance_and_fault_prediction = CO4LE_Maintenance * (CO_WE_maintenance / 100)
        CO4_impact_weighting_information_to_occupants = CO4LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO4_impact_scores_energy_saving = CO4_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO4_impact_scores_flexibility_for_the_grid_and_storage = CO4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO4_impact_scores_comfort = CO4_impact_weighting_comfort * IM_energy_savings_on_site

        CO4_impact_scores_convenience = CO4_impact_weighting_convenience * IM_energy_savings_on_site

        CO4_impact_scores_wellbeing_and_health = CO4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO4_impact_scores_maintenance_and_fault_prediction = CO4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO4_impact_scores_information_to_occupants = CO4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO4LE_Max_EnergySavings = 1
        CO4LE_Max_Flexibility = 0
        CO4LE_Max_Comfort = 0
        CO4LE_Max_Convenience = 1
        CO4LE_Max_WellbeingAndHealth = 0
        CO4LE_Max_Maintenance = 2
        CO4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        CO4_Max_SRI_IM_Scores_EnergySavings = CO4LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_Max_SRI_IM_Scores_Flexibility = CO4LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO4_Max_SRI_IM_Scores_Comfort = CO4LE_Max_Comfort * (CO_WE_comfort / 100)
        CO4_Max_SRI_IM_Scores_Convenience = CO4LE_Max_Convenience * (CO_WE_convenience / 100)
        CO4_Max_SRI_IM_Scores_WellbeingAndHealth = CO4LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO4_Max_SRI_IM_Scores_Maintenance = CO4LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO4_Max_SRI_IM_Scores_InformationToOccupants = CO4LE_Max_InformationToOccupants * (
                    CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO4_Max_impact_scores_energy_saving = CO4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO4_Max_impact_scores_flexibility_for_the_grid_and_storage = CO4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO4_Max_impact_scores_comfort = CO4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO4_Max_impact_scores_convenience = CO4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO4_Max_impact_scores_wellbeing_and_health = CO4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO4_Max_impact_scores_maintenance_and_fault_prediction = CO4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO4_Max_impact_scores_information_to_occupants = CO4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_CO_OR_SC_EnergySavings = CO1LE_EnergySavings + CO2LE_EnergySavings + CO4LE_EnergySavings

        sum_CO_OR_SC_Flexibility = CO1LE_Flexibility + CO2LE_Flexibility + CO4LE_Flexibility

        sum_CO_OR_SC_Comfort = CO1LE_Comfort + CO2LE_Comfort + CO4LE_Comfort

        sum_CO_OR_SC_Convenience = CO1LE_Convenience + CO2LE_Convenience + CO4LE_Convenience

        sum_CO_OR_SC_WellbeingAndHealth = CO1LE_WellbeingAndHealth + CO2LE_WellbeingAndHealth + CO4LE_WellbeingAndHealth

        sum_CO_OR_SC_Maintenance = CO1LE_Maintenance + CO2LE_Maintenance + CO4LE_Maintenance

        sum_CO_OR_SC_InformationToOccupants = CO1LE_InformationToOccupants + CO2LE_InformationToOccupants + CO4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_CO_IM_WE_energy_savings = CO1_impact_weighting_energy_saving + CO2_impact_weighting_energy_saving + CO4_impact_weighting_energy_saving

        sum_CO_IM_WE_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_CO_IM_WE_comfort = CO1_impact_weighting_comfort + CO2_impact_weighting_comfort + CO4_impact_weighting_comfort

        sum_CO_IM_WE_convenience = CO1_impact_weighting_convenience + CO2_impact_weighting_convenience + CO4_impact_weighting_convenience

        sum_CO_IM_WE_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health + \
                                            CO2_impact_weighting_wellbeing_and_health + \
                                            CO4_impact_weighting_wellbeing_and_health

        sum_CO_IM_WE_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO2_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO4_impact_weighting_maintenance_and_fault_prediction

        sum_CO_IM_WE_information_to_occupants = CO1_impact_weighting_information_to_occupants + \
                                                CO2_impact_weighting_information_to_occupants + \
                                                CO4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_CO_IM_SC_energy_savings = CO1_impact_scores_energy_saving + CO2_impact_scores_energy_saving + \
                                      CO4_impact_scores_energy_saving

        sum_CO_IM_flexibility_for_the_grid_and_storage = CO1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO4_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_IM_SC_comfort = CO1_impact_scores_comfort + CO2_impact_scores_comfort + CO4_impact_scores_comfort

        sum_CO_IM_SC_convenience = CO1_impact_scores_convenience + CO2_impact_scores_convenience + \
                                   CO4_impact_scores_convenience

        sum_CO_IM_SC_wellbeing_and_health = CO1_impact_scores_wellbeing_and_health + \
                                            CO2_impact_scores_wellbeing_and_health + CO4_impact_scores_wellbeing_and_health

        sum_CO_IM_SC_maintenance_and_fault_prediction = CO1_impact_scores_maintenance_and_fault_prediction + \
                                                        CO2_impact_scores_maintenance_and_fault_prediction + \
                                                        CO4_impact_scores_maintenance_and_fault_prediction

        sum_CO_IM_SC_information_to_occupants = CO1_impact_scores_information_to_occupants + \
                                                CO2_impact_scores_information_to_occupants + \
                                                CO4_impact_scores_information_to_occupants

        # TOTAL
        total_CO_sum_IM_SC = sum_CO_IM_SC_energy_savings + sum_CO_IM_flexibility_for_the_grid_and_storage + \
                             sum_CO_IM_SC_comfort + sum_CO_IM_SC_convenience + sum_CO_IM_SC_wellbeing_and_health + \
                             sum_CO_IM_SC_maintenance_and_fault_prediction + sum_CO_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_CO_MAX_OR_SC_EnergySavings = CO1LE_Max_EnergySavings + CO2LE_Max_EnergySavings + CO4LE_Max_EnergySavings

        sum_CO_MAX_OR_SC_Flexibility = CO1LE_Max_Flexibility + CO2LE_Max_Flexibility + CO4LE_Max_Flexibility

        sum_CO_MAX_OR_SC_Comfort = CO1LE_Max_Comfort + CO2LE_Max_Comfort + CO4LE_Max_Comfort

        sum_CO_MAX_OR_SC_Convenience = CO1LE_Max_Convenience + CO2LE_Max_Convenience + CO4LE_Max_Convenience

        sum_CO_MAX_OR_SC_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth + CO2LE_Max_WellbeingAndHealth + \
                                              CO4LE_Max_WellbeingAndHealth

        sum_CO_MAX_OR_SC_Maintenance = CO1LE_Max_Maintenance + CO2LE_Max_Maintenance + CO4LE_Max_Maintenance

        sum_CO_MAX_OR_SC_InformationToOccupants = CO1LE_Max_InformationToOccupants + CO2LE_Max_InformationToOccupants\
                                                  + CO4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_CO_MAX_IM_WE_energy_savings = CO1_Max_SRI_IM_Scores_EnergySavings + CO2_Max_SRI_IM_Scores_EnergySavings \
                                          + CO4_Max_SRI_IM_Scores_EnergySavings

        sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility + \
                                                                CO2_Max_SRI_IM_Scores_Flexibility + \
                                                                CO4_Max_SRI_IM_Scores_Flexibility

        sum_CO_MAX_IM_WE_comfort = CO1_Max_SRI_IM_Scores_Comfort + CO2_Max_SRI_IM_Scores_Comfort + \
                                   CO3_Max_SRI_IM_Scores_Comfort

        sum_CO_MAX_IM_WE_convenience = CO1_Max_SRI_IM_Scores_Convenience + CO2_Max_SRI_IM_Scores_Convenience + \
                                       CO4_Max_SRI_IM_Scores_Convenience

        sum_CO_MAX_IM_WE_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance + \
                                                            CO2_Max_SRI_IM_Scores_Maintenance + \
                                                            CO4_Max_SRI_IM_Scores_Maintenance

        sum_CO_MAX_IM_WE_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_CO_MAX_IM_SC_energy_savings = CO1_Max_impact_scores_energy_saving + CO2_Max_impact_scores_energy_saving + \
                                          CO4_Max_impact_scores_energy_saving

        sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = CO1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_MAX_IM_SC_comfort = CO1_Max_impact_scores_comfort + CO2_Max_impact_scores_comfort + \
                                   CO4_Max_impact_scores_comfort

        sum_CO_MAX_IM_SC_convenience = CO1_Max_impact_scores_convenience + CO2_Max_impact_scores_convenience + \
                                       CO4_Max_impact_scores_convenience

        sum_CO_MAX_IM_SC_wellbeing_and_health = CO1_Max_impact_scores_wellbeing_and_health + \
                                                CO2_impact_scores_wellbeing_and_health + \
                                                CO4_Max_impact_scores_wellbeing_and_health

        sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = CO1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO4_Max_impact_scores_maintenance_and_fault_prediction

        sum_CO_MAX_IM_SC_information_to_occupants = CO1_Max_impact_scores_information_to_occupants + \
                                                    CO2_Max_impact_scores_information_to_occupants + \
                                                    CO4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_CO_MAX_sum_IM_SC = sum_CO_MAX_IM_SC_energy_savings + sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_CO_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_convenience + sum_CO_MAX_IM_SC_wellbeing_and_health + \
                                 sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + sum_CO_MAX_IM_SC_information_to_occupants

    if ET == "b" and TE == "b":
        # print("Cooling-S1, Cooling-S2, Cooling-S4")
        print("")
        # Cooling-S1
        print("Cooling 1 Cooling emission control")
        print("")

        while True:
            CO1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control."
                          "\n(c) Individual room control."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if CO1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 0
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 0
            CO1LE_Convenience = 0
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 1
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 1
            CO1LE_Convenience = 1
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 2
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 3
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S2
        print("Cooling 2 Generator control for cooling")
        print("")

        while True:
            CO2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load."
                          "\n[a/b/c]? : ")
            if CO2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if CO2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 0
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 0
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 1
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 1
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 2
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 2
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # Cooling-S4
        print("Cooling 4 Report information regarding cooling system performance")
        print("")

        while True:
            CO41LE = input("Choose:\n(a) None."
                           "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                           "submetering energy usage)."
                           "\n(c) Central or remote reporting of current performance KPIs and historical data."
                           "\n(d) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking."
                           "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking; also including predictive management and fault detection."
                           "\n[a/b/c/d/e]? : ")
            if CO41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO41LE == "a":
            print("Level 0")
            print("IMPACTS")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Cooling system
        CO_WE_energy_savings = 11
        CO_WE_flexibility = 13
        CO_WE_comfort = 17
        CO_WE_convenience = 11
        CO_WE_wellbeing_and_health = 0
        CO_WE_maintenance = 14
        CO_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Cooling system
        # Cooling 1
        CO1_impact_weighting_energy_saving = CO1LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_impact_weighting_flexibility_for_the_grid_and_storage = CO1LE_Flexibility * (CO_WE_flexibility / 100)
        CO1_impact_weighting_comfort = CO1LE_Comfort * (CO_WE_comfort / 100)
        CO1_impact_weighting_convenience = CO1LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO1_impact_weighting_wellbeing_and_health = CO1LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO1_impact_weighting_maintenance_and_fault_prediction = CO1LE_Maintenance * (CO_WE_maintenance / 100)
        CO1_impact_weighting_information_to_occupants = CO1LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO1_impact_scores_energy_saving = CO1_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO1_impact_scores_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO1_impact_scores_comfort = CO1_impact_weighting_comfort * IM_energy_savings_on_site

        CO1_impact_scores_convenience = CO1_impact_weighting_convenience * IM_energy_savings_on_site

        CO1_impact_scores_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO1_impact_scores_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO1_impact_scores_information_to_occupants = CO1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO1LE_Max_EnergySavings = 3
        CO1LE_Max_Flexibility = 0
        CO1LE_Max_Comfort = 2
        CO1LE_Max_Convenience = 3
        CO1LE_Max_WellbeingAndHealth = 0
        CO1LE_Max_Maintenance = 1
        CO1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO1_Max_SRI_IM_Scores_EnergySavings = CO1LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_Max_SRI_IM_Scores_Flexibility = CO1LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO1_Max_SRI_IM_Scores_Comfort = CO1LE_Max_Comfort * (CO_WE_comfort / 100)
        CO1_Max_SRI_IM_Scores_Convenience = CO1LE_Max_Convenience * (CO_WE_convenience / 100)
        CO1_Max_SRI_IM_Scores_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO1_Max_SRI_IM_Scores_Maintenance = CO1LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO1_Max_SRI_IM_Scores_InformationToOccupants = CO1LE_Max_InformationToOccupants * (
                CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO1_Max_impact_scores_energy_saving = CO1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO1_Max_impact_scores_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO1_Max_impact_scores_comfort = CO1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO1_Max_impact_scores_convenience = CO1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO1_Max_impact_scores_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO1_Max_impact_scores_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO1_Max_impact_scores_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 2
        CO2_impact_weighting_energy_saving = CO2LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_impact_weighting_flexibility_for_the_grid_and_storage = CO2LE_Flexibility * (CO_WE_flexibility / 100)
        CO2_impact_weighting_comfort = CO2LE_Comfort * (CO_WE_comfort / 100)
        CO2_impact_weighting_convenience = CO2LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO2_impact_weighting_wellbeing_and_health = CO2LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO2_impact_weighting_maintenance_and_fault_prediction = CO2LE_Maintenance * (CO_WE_maintenance / 100)
        CO2_impact_weighting_information_to_occupants = CO2LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO2_impact_scores_energy_saving = CO2_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO2_impact_scores_flexibility_for_the_grid_and_storage = CO2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO2_impact_scores_comfort = CO2_impact_weighting_comfort * IM_energy_savings_on_site

        CO2_impact_scores_convenience = CO2_impact_weighting_convenience * IM_energy_savings_on_site

        CO2_impact_scores_wellbeing_and_health = CO2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO2_impact_scores_maintenance_and_fault_prediction = CO2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO2_impact_scores_information_to_occupants = CO2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO2LE_Max_EnergySavings = 2
        CO2LE_Max_Flexibility = 0
        CO2LE_Max_Comfort = 2
        CO2LE_Max_Convenience = 0
        CO2LE_Max_WellbeingAndHealth = 0
        CO2LE_Max_Maintenance = 0
        CO2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO2_Max_SRI_IM_Scores_EnergySavings = CO2LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_Max_SRI_IM_Scores_Flexibility = CO2LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO2_Max_SRI_IM_Scores_Comfort = CO2LE_Max_Comfort * (CO_WE_comfort / 100)
        CO2_Max_SRI_IM_Scores_Convenience = CO2LE_Max_Convenience * (CO_WE_convenience / 100)
        CO2_Max_SRI_IM_Scores_WellbeingAndHealth = CO2LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO2_Max_SRI_IM_Scores_Maintenance = CO2LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO2_Max_SRI_IM_Scores_InformationToOccupants = CO2LE_Max_InformationToOccupants * (
                CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO2_Max_impact_scores_energy_saving = CO2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO2_Max_impact_scores_flexibility_for_the_grid_and_storage = CO2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO2_Max_impact_scores_comfort = CO2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO2_Max_impact_scores_convenience = CO2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO2_Max_impact_scores_wellbeing_and_health = CO2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO2_Max_impact_scores_maintenance_and_fault_prediction = CO2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO2_Max_impact_scores_information_to_occupants = CO2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################

        # Cooling 4
        CO4_impact_weighting_energy_saving = CO4LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_impact_weighting_flexibility_for_the_grid_and_storage = CO4LE_Flexibility * (CO_WE_flexibility / 100)
        CO4_impact_weighting_comfort = CO4LE_Comfort * (CO_WE_comfort / 100)
        CO4_impact_weighting_convenience = CO4LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO4_impact_weighting_wellbeing_and_health = CO4LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO4_impact_weighting_maintenance_and_fault_prediction = CO4LE_Maintenance * (CO_WE_maintenance / 100)
        CO4_impact_weighting_information_to_occupants = CO4LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO4_impact_scores_energy_saving = CO4_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO4_impact_scores_flexibility_for_the_grid_and_storage = CO4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO4_impact_scores_comfort = CO4_impact_weighting_comfort * IM_energy_savings_on_site

        CO4_impact_scores_convenience = CO4_impact_weighting_convenience * IM_energy_savings_on_site

        CO4_impact_scores_wellbeing_and_health = CO4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO4_impact_scores_maintenance_and_fault_prediction = CO4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO4_impact_scores_information_to_occupants = CO4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO4LE_Max_EnergySavings = 1
        CO4LE_Max_Flexibility = 0
        CO4LE_Max_Comfort = 0
        CO4LE_Max_Convenience = 1
        CO4LE_Max_WellbeingAndHealth = 0
        CO4LE_Max_Maintenance = 2
        CO4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        CO4_Max_SRI_IM_Scores_EnergySavings = CO4LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_Max_SRI_IM_Scores_Flexibility = CO4LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO4_Max_SRI_IM_Scores_Comfort = CO4LE_Max_Comfort * (CO_WE_comfort / 100)
        CO4_Max_SRI_IM_Scores_Convenience = CO4LE_Max_Convenience * (CO_WE_convenience / 100)
        CO4_Max_SRI_IM_Scores_WellbeingAndHealth = CO4LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO4_Max_SRI_IM_Scores_Maintenance = CO4LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO4_Max_SRI_IM_Scores_InformationToOccupants = CO4LE_Max_InformationToOccupants * (
                CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO4_Max_impact_scores_energy_saving = CO4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO4_Max_impact_scores_flexibility_for_the_grid_and_storage = CO4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO4_Max_impact_scores_comfort = CO4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO4_Max_impact_scores_convenience = CO4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO4_Max_impact_scores_wellbeing_and_health = CO4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO4_Max_impact_scores_maintenance_and_fault_prediction = CO4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO4_Max_impact_scores_information_to_occupants = CO4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_CO_OR_SC_EnergySavings = CO1LE_EnergySavings + CO2LE_EnergySavings + CO4LE_EnergySavings

        sum_CO_OR_SC_Flexibility = CO1LE_Flexibility + CO2LE_Flexibility + CO4LE_Flexibility

        sum_CO_OR_SC_Comfort = CO1LE_Comfort + CO2LE_Comfort + CO4LE_Comfort

        sum_CO_OR_SC_Convenience = CO1LE_Convenience + CO2LE_Convenience + CO4LE_Convenience

        sum_CO_OR_SC_WellbeingAndHealth = CO1LE_WellbeingAndHealth + CO2LE_WellbeingAndHealth + CO4LE_WellbeingAndHealth

        sum_CO_OR_SC_Maintenance = CO1LE_Maintenance + CO2LE_Maintenance + CO4LE_Maintenance

        sum_CO_OR_SC_InformationToOccupants = CO1LE_InformationToOccupants + CO2LE_InformationToOccupants + CO4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_CO_IM_WE_energy_savings = CO1_impact_weighting_energy_saving + CO2_impact_weighting_energy_saving + CO4_impact_weighting_energy_saving

        sum_CO_IM_WE_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_CO_IM_WE_comfort = CO1_impact_weighting_comfort + CO2_impact_weighting_comfort + CO4_impact_weighting_comfort

        sum_CO_IM_WE_convenience = CO1_impact_weighting_convenience + CO2_impact_weighting_convenience + CO4_impact_weighting_convenience

        sum_CO_IM_WE_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health + \
                                            CO2_impact_weighting_wellbeing_and_health + \
                                            CO4_impact_weighting_wellbeing_and_health

        sum_CO_IM_WE_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO2_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO4_impact_weighting_maintenance_and_fault_prediction

        sum_CO_IM_WE_information_to_occupants = CO1_impact_weighting_information_to_occupants + \
                                                CO2_impact_weighting_information_to_occupants + \
                                                CO4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_CO_IM_SC_energy_savings = CO1_impact_scores_energy_saving + CO2_impact_scores_energy_saving + \
                                      CO4_impact_scores_energy_saving

        sum_CO_IM_flexibility_for_the_grid_and_storage = CO1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO4_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_IM_SC_comfort = CO1_impact_scores_comfort + CO2_impact_scores_comfort + CO4_impact_scores_comfort

        sum_CO_IM_SC_convenience = CO1_impact_scores_convenience + CO2_impact_scores_convenience + \
                                   CO4_impact_scores_convenience

        sum_CO_IM_SC_wellbeing_and_health = CO1_impact_scores_wellbeing_and_health + \
                                            CO2_impact_scores_wellbeing_and_health + CO4_impact_scores_wellbeing_and_health

        sum_CO_IM_SC_maintenance_and_fault_prediction = CO1_impact_scores_maintenance_and_fault_prediction + \
                                                        CO2_impact_scores_maintenance_and_fault_prediction + \
                                                        CO4_impact_scores_maintenance_and_fault_prediction

        sum_CO_IM_SC_information_to_occupants = CO1_impact_scores_information_to_occupants + \
                                                CO2_impact_scores_information_to_occupants + \
                                                CO4_impact_scores_information_to_occupants

        # TOTAL
        total_CO_sum_IM_SC = sum_CO_IM_SC_energy_savings + sum_CO_IM_flexibility_for_the_grid_and_storage + \
                             sum_CO_IM_SC_comfort + sum_CO_IM_SC_convenience + sum_CO_IM_SC_wellbeing_and_health + \
                             sum_CO_IM_SC_maintenance_and_fault_prediction + sum_CO_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_CO_MAX_OR_SC_EnergySavings = CO1LE_Max_EnergySavings + CO2LE_Max_EnergySavings + CO4LE_Max_EnergySavings

        sum_CO_MAX_OR_SC_Flexibility = CO1LE_Max_Flexibility + CO2LE_Max_Flexibility + CO4LE_Max_Flexibility

        sum_CO_MAX_OR_SC_Comfort = CO1LE_Max_Comfort + CO2LE_Max_Comfort + CO4LE_Max_Comfort

        sum_CO_MAX_OR_SC_Convenience = CO1LE_Max_Convenience + CO2LE_Max_Convenience + CO4LE_Max_Convenience

        sum_CO_MAX_OR_SC_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth + CO2LE_Max_WellbeingAndHealth + \
                                              CO4LE_Max_WellbeingAndHealth

        sum_CO_MAX_OR_SC_Maintenance = CO1LE_Max_Maintenance + CO2LE_Max_Maintenance + CO4LE_Max_Maintenance

        sum_CO_MAX_OR_SC_InformationToOccupants = CO1LE_Max_InformationToOccupants + CO2LE_Max_InformationToOccupants \
                                                  + CO4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_CO_MAX_IM_WE_energy_savings = CO1_Max_SRI_IM_Scores_EnergySavings + CO2_Max_SRI_IM_Scores_EnergySavings \
                                          + CO4_Max_SRI_IM_Scores_EnergySavings

        sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility + \
                                                                CO2_Max_SRI_IM_Scores_Flexibility + \
                                                                CO4_Max_SRI_IM_Scores_Flexibility

        sum_CO_MAX_IM_WE_comfort = CO1_Max_SRI_IM_Scores_Comfort + CO2_Max_SRI_IM_Scores_Comfort + \
                                   CO3_Max_SRI_IM_Scores_Comfort

        sum_CO_MAX_IM_WE_convenience = CO1_Max_SRI_IM_Scores_Convenience + CO2_Max_SRI_IM_Scores_Convenience + \
                                       CO4_Max_SRI_IM_Scores_Convenience

        sum_CO_MAX_IM_WE_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance + \
                                                            CO2_Max_SRI_IM_Scores_Maintenance + \
                                                            CO4_Max_SRI_IM_Scores_Maintenance

        sum_CO_MAX_IM_WE_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_CO_MAX_IM_SC_energy_savings = CO1_Max_impact_scores_energy_saving + CO2_Max_impact_scores_energy_saving + \
                                          CO4_Max_impact_scores_energy_saving

        sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = CO1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_MAX_IM_SC_comfort = CO1_Max_impact_scores_comfort + CO2_Max_impact_scores_comfort + \
                                   CO4_Max_impact_scores_comfort

        sum_CO_MAX_IM_SC_convenience = CO1_Max_impact_scores_convenience + CO2_Max_impact_scores_convenience + \
                                       CO4_Max_impact_scores_convenience

        sum_CO_MAX_IM_SC_wellbeing_and_health = CO1_Max_impact_scores_wellbeing_and_health + \
                                                CO2_impact_scores_wellbeing_and_health + \
                                                CO4_Max_impact_scores_wellbeing_and_health

        sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = CO1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO4_Max_impact_scores_maintenance_and_fault_prediction

        sum_CO_MAX_IM_SC_information_to_occupants = CO1_Max_impact_scores_information_to_occupants + \
                                                    CO2_Max_impact_scores_information_to_occupants + \
                                                    CO4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_CO_MAX_sum_IM_SC = sum_CO_MAX_IM_SC_energy_savings + sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_CO_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_convenience + sum_CO_MAX_IM_SC_wellbeing_and_health + \
                                 sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + sum_CO_MAX_IM_SC_information_to_occupants

    if ET == "c" and TE == "b":
        # print("Cooling-S1, Cooling-S2, Cooling-S4")
        print("")
        # Cooling-S1
        print("Cooling 1 Cooling emission control")
        print("")

        while True:
            CO1LE = input("Choose: \n(a) No automatic control."
                          "\n(b) Central automatic control."
                          "\n(c) Individual room control."
                          "\n(d) Individual room control with communication between controllers and to BACS."
                          "\n(e) Individual room control with communication and occupancy detection.  \n[a/b/c/d/e]? : ")
            if CO1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 0
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 0
            CO1LE_Convenience = 0
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 1
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 1
            CO1LE_Convenience = 1
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 2
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 0
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 2
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        elif CO1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO1LE_EnergySavings = 3
            CO1LE_Flexibility = 0
            CO1LE_Comfort = 2
            CO1LE_Convenience = 3
            CO1LE_WellbeingAndHealth = 0
            CO1LE_Maintenance = 1
            CO1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO1LE_Flexibility))
            print("Comfort: " + str(CO1LE_Comfort))
            print("Convenience: " + str(CO1LE_Convenience))
            print("Health & wellbeing: " + str(CO1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO1LE_Maintenance))
            print("Information to occupants: " + str(CO1LE_InformationToOccupants))
            print("")
            print("")

        # Cooling-S2
        print("Cooling 2 Generator control for cooling")
        print("")

        while True:
            CO2LE = input("Choose:\n(a) Constant temperature control."
                          "\n(b) Variable temperature control depending on outdoor temperature."
                          "\n(c) Variable temperature control depending on the load."
                          "\n[a/b/c]? : ")
            if CO2LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break

        if CO2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 0
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 0
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 1
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 1
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        elif CO2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO2LE_EnergySavings = 2
            CO2LE_Flexibility = 0
            CO2LE_Comfort = 2
            CO2LE_Convenience = 0
            CO2LE_WellbeingAndHealth = 0
            CO2LE_Maintenance = 0
            CO2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO2LE_Flexibility))
            print("Comfort: " + str(CO2LE_Comfort))
            print("Convenience: " + str(CO2LE_Convenience))
            print("Health & wellbeing: " + str(CO2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO2LE_Maintenance))
            print("Information to occupants: " + str(CO2LE_InformationToOccupants))
            print("")
            print("")

        print("")
        # Cooling-S4
        print("Cooling 4 Report information regarding cooling system performance")
        print("")

        while True:
            CO41LE = input("Choose:\n(a) None."
                           "\n(b) Central or remote reporting of current performance KPIs (e.g. temperatures, "
                           "submetering energy usage)."
                           "\n(c) Central or remote reporting of current performance KPIs and historical data."
                           "\n(d) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking."
                           "\n(e) Central or remote reporting of performance evaluation including forecasting and/or "
                           "benchmarking; also including predictive management and fault detection."
                           "\n[a/b/c/d/e]? : ")
            if CO41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if CO41LE == "a":
            print("Level 0")
            print("IMPACTS")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 1
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 1
            CO4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        elif CO41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            CO4LE_EnergySavings = 0
            CO4LE_Flexibility = 0
            CO4LE_Comfort = 0
            CO4LE_Convenience = 0
            CO4LE_WellbeingAndHealth = 0
            CO4LE_Maintenance = 0
            CO4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(CO4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(CO4LE_Flexibility))
            print("Comfort: " + str(CO4LE_Comfort))
            print("Convenience: " + str(CO4LE_Convenience))
            print("Health & wellbeing: " + str(CO4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(CO4LE_Maintenance))
            print("Information to occupants: " + str(CO4LE_InformationToOccupants))
            print("")
            print("")

        # domain_weightings
        # Cooling system
        CO_WE_energy_savings = 11
        CO_WE_flexibility = 13
        CO_WE_comfort = 17
        CO_WE_convenience = 11
        CO_WE_wellbeing_and_health = 0
        CO_WE_maintenance = 14
        CO_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Cooling system
        # Cooling 1
        CO1_impact_weighting_energy_saving = CO1LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_impact_weighting_flexibility_for_the_grid_and_storage = CO1LE_Flexibility * (CO_WE_flexibility / 100)
        CO1_impact_weighting_comfort = CO1LE_Comfort * (CO_WE_comfort / 100)
        CO1_impact_weighting_convenience = CO1LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO1_impact_weighting_wellbeing_and_health = CO1LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO1_impact_weighting_maintenance_and_fault_prediction = CO1LE_Maintenance * (CO_WE_maintenance / 100)
        CO1_impact_weighting_information_to_occupants = CO1LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO1_impact_scores_energy_saving = CO1_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO1_impact_scores_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO1_impact_scores_comfort = CO1_impact_weighting_comfort * IM_energy_savings_on_site

        CO1_impact_scores_convenience = CO1_impact_weighting_convenience * IM_energy_savings_on_site

        CO1_impact_scores_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO1_impact_scores_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO1_impact_scores_information_to_occupants = CO1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO1LE_Max_EnergySavings = 3
        CO1LE_Max_Flexibility = 0
        CO1LE_Max_Comfort = 2
        CO1LE_Max_Convenience = 3
        CO1LE_Max_WellbeingAndHealth = 0
        CO1LE_Max_Maintenance = 1
        CO1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO1_Max_SRI_IM_Scores_EnergySavings = CO1LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO1_Max_SRI_IM_Scores_Flexibility = CO1LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO1_Max_SRI_IM_Scores_Comfort = CO1LE_Max_Comfort * (CO_WE_comfort / 100)
        CO1_Max_SRI_IM_Scores_Convenience = CO1LE_Max_Convenience * (CO_WE_convenience / 100)
        CO1_Max_SRI_IM_Scores_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO1_Max_SRI_IM_Scores_Maintenance = CO1LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO1_Max_SRI_IM_Scores_InformationToOccupants = CO1LE_Max_InformationToOccupants * (
                CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO1_Max_impact_scores_energy_saving = CO1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO1_Max_impact_scores_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO1_Max_impact_scores_comfort = CO1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO1_Max_impact_scores_convenience = CO1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO1_Max_impact_scores_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO1_Max_impact_scores_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO1_Max_impact_scores_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # Cooling 2
        CO2_impact_weighting_energy_saving = CO2LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_impact_weighting_flexibility_for_the_grid_and_storage = CO2LE_Flexibility * (CO_WE_flexibility / 100)
        CO2_impact_weighting_comfort = CO2LE_Comfort * (CO_WE_comfort / 100)
        CO2_impact_weighting_convenience = CO2LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO2_impact_weighting_wellbeing_and_health = CO2LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO2_impact_weighting_maintenance_and_fault_prediction = CO2LE_Maintenance * (CO_WE_maintenance / 100)
        CO2_impact_weighting_information_to_occupants = CO2LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO2_impact_scores_energy_saving = CO2_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO2_impact_scores_flexibility_for_the_grid_and_storage = CO2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO2_impact_scores_comfort = CO2_impact_weighting_comfort * IM_energy_savings_on_site

        CO2_impact_scores_convenience = CO2_impact_weighting_convenience * IM_energy_savings_on_site

        CO2_impact_scores_wellbeing_and_health = CO2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO2_impact_scores_maintenance_and_fault_prediction = CO2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO2_impact_scores_information_to_occupants = CO2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO2LE_Max_EnergySavings = 2
        CO2LE_Max_Flexibility = 0
        CO2LE_Max_Comfort = 2
        CO2LE_Max_Convenience = 0
        CO2LE_Max_WellbeingAndHealth = 0
        CO2LE_Max_Maintenance = 0
        CO2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        CO2_Max_SRI_IM_Scores_EnergySavings = CO2LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO2_Max_SRI_IM_Scores_Flexibility = CO2LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO2_Max_SRI_IM_Scores_Comfort = CO2LE_Max_Comfort * (CO_WE_comfort / 100)
        CO2_Max_SRI_IM_Scores_Convenience = CO2LE_Max_Convenience * (CO_WE_convenience / 100)
        CO2_Max_SRI_IM_Scores_WellbeingAndHealth = CO2LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO2_Max_SRI_IM_Scores_Maintenance = CO2LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO2_Max_SRI_IM_Scores_InformationToOccupants = CO2LE_Max_InformationToOccupants * (
                CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO2_Max_impact_scores_energy_saving = CO2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO2_Max_impact_scores_flexibility_for_the_grid_and_storage = CO2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO2_Max_impact_scores_comfort = CO2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO2_Max_impact_scores_convenience = CO2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO2_Max_impact_scores_wellbeing_and_health = CO2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO2_Max_impact_scores_maintenance_and_fault_prediction = CO2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO2_Max_impact_scores_information_to_occupants = CO2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################

        # Cooling 4
        CO4_impact_weighting_energy_saving = CO4LE_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_impact_weighting_flexibility_for_the_grid_and_storage = CO4LE_Flexibility * (CO_WE_flexibility / 100)
        CO4_impact_weighting_comfort = CO4LE_Comfort * (CO_WE_comfort / 100)
        CO4_impact_weighting_convenience = CO4LE_WellbeingAndHealth * (CO_WE_convenience / 100)
        CO4_impact_weighting_wellbeing_and_health = CO4LE_Convenience * (CO_WE_wellbeing_and_health / 100)
        CO4_impact_weighting_maintenance_and_fault_prediction = CO4LE_Maintenance * (CO_WE_maintenance / 100)
        CO4_impact_weighting_information_to_occupants = CO4LE_InformationToOccupants * (CO_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        CO4_impact_scores_energy_saving = CO4_impact_weighting_energy_saving * IM_energy_savings_on_site

        CO4_impact_scores_flexibility_for_the_grid_and_storage = CO4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        CO4_impact_scores_comfort = CO4_impact_weighting_comfort * IM_energy_savings_on_site

        CO4_impact_scores_convenience = CO4_impact_weighting_convenience * IM_energy_savings_on_site

        CO4_impact_scores_wellbeing_and_health = CO4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        CO4_impact_scores_maintenance_and_fault_prediction = CO4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        CO4_impact_scores_information_to_occupants = CO4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        CO4LE_Max_EnergySavings = 1
        CO4LE_Max_Flexibility = 0
        CO4LE_Max_Comfort = 0
        CO4LE_Max_Convenience = 1
        CO4LE_Max_WellbeingAndHealth = 0
        CO4LE_Max_Maintenance = 2
        CO4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        CO4_Max_SRI_IM_Scores_EnergySavings = CO4LE_Max_EnergySavings * (CO_WE_energy_savings / 100)
        CO4_Max_SRI_IM_Scores_Flexibility = CO4LE_Max_Flexibility * (CO_WE_flexibility / 100)
        CO4_Max_SRI_IM_Scores_Comfort = CO4LE_Max_Comfort * (CO_WE_comfort / 100)
        CO4_Max_SRI_IM_Scores_Convenience = CO4LE_Max_Convenience * (CO_WE_convenience / 100)
        CO4_Max_SRI_IM_Scores_WellbeingAndHealth = CO4LE_Max_WellbeingAndHealth * (CO_WE_wellbeing_and_health / 100)
        CO4_Max_SRI_IM_Scores_Maintenance = CO4LE_Max_Maintenance * (CO_WE_maintenance / 100)
        CO4_Max_SRI_IM_Scores_InformationToOccupants = CO4LE_Max_InformationToOccupants * (
                CO_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        CO4_Max_impact_scores_energy_saving = CO4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        CO4_Max_impact_scores_flexibility_for_the_grid_and_storage = CO4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        CO4_Max_impact_scores_comfort = CO4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        CO4_Max_impact_scores_convenience = CO4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        CO4_Max_impact_scores_wellbeing_and_health = CO4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        CO4_Max_impact_scores_maintenance_and_fault_prediction = CO4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        CO4_Max_impact_scores_information_to_occupants = CO4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_CO_OR_SC_EnergySavings = CO1LE_EnergySavings + CO2LE_EnergySavings + CO4LE_EnergySavings

        sum_CO_OR_SC_Flexibility = CO1LE_Flexibility + CO2LE_Flexibility + CO4LE_Flexibility

        sum_CO_OR_SC_Comfort = CO1LE_Comfort + CO2LE_Comfort + CO4LE_Comfort

        sum_CO_OR_SC_Convenience = CO1LE_Convenience + CO2LE_Convenience + CO4LE_Convenience

        sum_CO_OR_SC_WellbeingAndHealth = CO1LE_WellbeingAndHealth + CO2LE_WellbeingAndHealth + CO4LE_WellbeingAndHealth

        sum_CO_OR_SC_Maintenance = CO1LE_Maintenance + CO2LE_Maintenance + CO4LE_Maintenance

        sum_CO_OR_SC_InformationToOccupants = CO1LE_InformationToOccupants + CO2LE_InformationToOccupants + CO4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_CO_IM_WE_energy_savings = CO1_impact_weighting_energy_saving + CO2_impact_weighting_energy_saving + CO4_impact_weighting_energy_saving

        sum_CO_IM_WE_flexibility_for_the_grid_and_storage = CO1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            CO4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_CO_IM_WE_comfort = CO1_impact_weighting_comfort + CO2_impact_weighting_comfort + CO4_impact_weighting_comfort

        sum_CO_IM_WE_convenience = CO1_impact_weighting_convenience + CO2_impact_weighting_convenience + CO4_impact_weighting_convenience

        sum_CO_IM_WE_wellbeing_and_health = CO1_impact_weighting_wellbeing_and_health + \
                                            CO2_impact_weighting_wellbeing_and_health + \
                                            CO4_impact_weighting_wellbeing_and_health

        sum_CO_IM_WE_maintenance_and_fault_prediction = CO1_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO2_impact_weighting_maintenance_and_fault_prediction + \
                                                        CO4_impact_weighting_maintenance_and_fault_prediction

        sum_CO_IM_WE_information_to_occupants = CO1_impact_weighting_information_to_occupants + \
                                                CO2_impact_weighting_information_to_occupants + \
                                                CO4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_CO_IM_SC_energy_savings = CO1_impact_scores_energy_saving + CO2_impact_scores_energy_saving + \
                                      CO4_impact_scores_energy_saving

        sum_CO_IM_flexibility_for_the_grid_and_storage = CO1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         CO4_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_IM_SC_comfort = CO1_impact_scores_comfort + CO2_impact_scores_comfort + CO4_impact_scores_comfort

        sum_CO_IM_SC_convenience = CO1_impact_scores_convenience + CO2_impact_scores_convenience + \
                                   CO4_impact_scores_convenience

        sum_CO_IM_SC_wellbeing_and_health = CO1_impact_scores_wellbeing_and_health + \
                                            CO2_impact_scores_wellbeing_and_health + CO4_impact_scores_wellbeing_and_health

        sum_CO_IM_SC_maintenance_and_fault_prediction = CO1_impact_scores_maintenance_and_fault_prediction + \
                                                        CO2_impact_scores_maintenance_and_fault_prediction + \
                                                        CO4_impact_scores_maintenance_and_fault_prediction

        sum_CO_IM_SC_information_to_occupants = CO1_impact_scores_information_to_occupants + \
                                                CO2_impact_scores_information_to_occupants + \
                                                CO4_impact_scores_information_to_occupants

        # TOTAL
        total_CO_sum_IM_SC = sum_CO_IM_SC_energy_savings + sum_CO_IM_flexibility_for_the_grid_and_storage + \
                             sum_CO_IM_SC_comfort + sum_CO_IM_SC_convenience + sum_CO_IM_SC_wellbeing_and_health + \
                             sum_CO_IM_SC_maintenance_and_fault_prediction + sum_CO_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_CO_MAX_OR_SC_EnergySavings = CO1LE_Max_EnergySavings + CO2LE_Max_EnergySavings + CO4LE_Max_EnergySavings

        sum_CO_MAX_OR_SC_Flexibility = CO1LE_Max_Flexibility + CO2LE_Max_Flexibility + CO4LE_Max_Flexibility

        sum_CO_MAX_OR_SC_Comfort = CO1LE_Max_Comfort + CO2LE_Max_Comfort + CO4LE_Max_Comfort

        sum_CO_MAX_OR_SC_Convenience = CO1LE_Max_Convenience + CO2LE_Max_Convenience + CO4LE_Max_Convenience

        sum_CO_MAX_OR_SC_WellbeingAndHealth = CO1LE_Max_WellbeingAndHealth + CO2LE_Max_WellbeingAndHealth + \
                                              CO4LE_Max_WellbeingAndHealth

        sum_CO_MAX_OR_SC_Maintenance = CO1LE_Max_Maintenance + CO2LE_Max_Maintenance + CO4LE_Max_Maintenance

        sum_CO_MAX_OR_SC_InformationToOccupants = CO1LE_Max_InformationToOccupants + CO2LE_Max_InformationToOccupants \
                                                  + CO4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_CO_MAX_IM_WE_energy_savings = CO1_Max_SRI_IM_Scores_EnergySavings + CO2_Max_SRI_IM_Scores_EnergySavings \
                                          + CO4_Max_SRI_IM_Scores_EnergySavings

        sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = CO1_Max_SRI_IM_Scores_Flexibility + \
                                                                CO2_Max_SRI_IM_Scores_Flexibility + \
                                                                CO4_Max_SRI_IM_Scores_Flexibility

        sum_CO_MAX_IM_WE_comfort = CO1_Max_SRI_IM_Scores_Comfort + CO2_Max_SRI_IM_Scores_Comfort + \
                                   CO3_Max_SRI_IM_Scores_Comfort

        sum_CO_MAX_IM_WE_convenience = CO1_Max_SRI_IM_Scores_Convenience + CO2_Max_SRI_IM_Scores_Convenience + \
                                       CO4_Max_SRI_IM_Scores_Convenience

        sum_CO_MAX_IM_WE_wellbeing_and_health = CO1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                CO4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = CO1_Max_SRI_IM_Scores_Maintenance + \
                                                            CO2_Max_SRI_IM_Scores_Maintenance + \
                                                            CO4_Max_SRI_IM_Scores_Maintenance

        sum_CO_MAX_IM_WE_information_to_occupants = CO1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    CO4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_CO_MAX_IM_SC_energy_savings = CO1_Max_impact_scores_energy_saving + CO2_Max_impact_scores_energy_saving + \
                                          CO4_Max_impact_scores_energy_saving

        sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = CO1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             CO4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_CO_MAX_IM_SC_comfort = CO1_Max_impact_scores_comfort + CO2_Max_impact_scores_comfort + \
                                   CO4_Max_impact_scores_comfort

        sum_CO_MAX_IM_SC_convenience = CO1_Max_impact_scores_convenience + CO2_Max_impact_scores_convenience + \
                                       CO4_Max_impact_scores_convenience

        sum_CO_MAX_IM_SC_wellbeing_and_health = CO1_Max_impact_scores_wellbeing_and_health + \
                                                CO2_impact_scores_wellbeing_and_health + \
                                                CO4_Max_impact_scores_wellbeing_and_health

        sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = CO1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            CO4_Max_impact_scores_maintenance_and_fault_prediction

        sum_CO_MAX_IM_SC_information_to_occupants = CO1_Max_impact_scores_information_to_occupants + \
                                                    CO2_Max_impact_scores_information_to_occupants + \
                                                    CO4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_CO_MAX_sum_IM_SC = sum_CO_MAX_IM_SC_energy_savings + sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_CO_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_convenience + sum_CO_MAX_IM_SC_wellbeing_and_health + \
                                 sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + sum_CO_MAX_IM_SC_information_to_occupants

if CO == "b":
    # SUM ORDINAL SCORES
    sum_CO_OR_SC_EnergySavings = 0
    sum_CO_OR_SC_Flexibility = 0
    sum_CO_OR_SC_Comfort = 0
    sum_CO_OR_SC_Convenience = 0
    sum_CO_OR_SC_WellbeingAndHealth = 0
    sum_CO_OR_SC_Maintenance = 0
    sum_CO_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_CO_IM_WE_energy_savings = 0
    sum_CO_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_CO_IM_WE_comfort = 0
    sum_CO_IM_WE_convenience = 0
    sum_CO_IM_WE_wellbeing_and_health = 0
    sum_CO_IM_WE_maintenance_and_fault_prediction = 0
    sum_CO_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_CO_IM_SC_energy_savings = 0
    sum_CO_IM_flexibility_for_the_grid_and_storage = 0
    sum_CO_IM_SC_comfort = 0
    sum_CO_IM_SC_convenience = 0
    sum_CO_IM_SC_wellbeing_and_health = 0
    sum_CO_IM_SC_maintenance_and_fault_prediction = 0
    sum_CO_IM_SC_information_to_occupants = 0

    # TOTAL
    total_CO_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_CO_MAX_OR_SC_EnergySavings = 0
    sum_CO_MAX_OR_SC_Flexibility = 0
    sum_CO_MAX_OR_SC_Comfort = 0
    sum_CO_MAX_OR_SC_Convenience = 0
    sum_CO_MAX_OR_SC_WellbeingAndHealth = 0
    sum_CO_MAX_OR_SC_Maintenance = 0
    sum_CO_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_CO_MAX_IM_WE_energy_savings = 0
    sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_CO_MAX_IM_WE_comfort = 0
    sum_CO_MAX_IM_WE_convenience = 0
    sum_CO_MAX_IM_WE_wellbeing_and_health = 0
    sum_CO_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_CO_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_CO_MAX_IM_SC_energy_savings = 0
    sum_CO_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_CO_MAX_IM_SC_comfort = 0
    sum_CO_MAX_IM_SC_convenience = 0
    sum_CO_MAX_IM_SC_wellbeing_and_health = 0
    sum_CO_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_CO_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_CO_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Ventilation")
    print("")
    VE = input("Controlled ventilation \n(a) yes \n(b) no \n[a/b]?: ")
    if VE in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if VE == "a":
    while True:
        print("")
        ST = input("System type \n(a) Mechanical ventilation."
                   "\n(b) Controlled natural ventilation. \n[a/b]? :")

        if ST in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if ST == "a":
        # HR = input("Heat recovery \n(a) Heat recovery. \n(b) No heat recovery \n[a/b]? :")
        # SH = input("Space heating \n(a) Used for space heating. \n(b) Not used for space heating. \n[a/b]? :")
        # SST = input("System sub-type \n(a) All air. \n(b) Combined air-water. \n[a/b]? :")
        print("")

        while True:
            HR = input("Heat recovery \n(a) Heat recovery. \n(b) No heat recovery \n[a/b]? :")
            print("")

            if HR in ['a', 'b']:
                # if it was equal - break from the while loop
                break

        while True:
            SH = input("Space heating \n(a) Used for space heating. \n(b) Not used for space heating. \n[a/b]? :")
            print("")

            if SH in ['a', 'b']:
                # if it was equal - break from the while loop
                break

        if SH == "a":
            while True:
                print("")
                SST = input("System sub-type \n(a) All air. \n(b) Combined air-water. \n[a/b]? :")

                if SST in ['a', 'b']:
                    # if it was equal - break from the while loop
                    break

        if HR == "a" and SH == "a" and SST == "a":
            # print("Ventilation S1, Ventilation S3")
            print("")
            # Ventilation-S1
            print("Ventilation 1 Air flow control at the room level")
            print("")

            while True:
                VE1LE = input("Choose:\n(a) No ventilation system or manual control."
                              "\n(b) Clock control."
                              "\n(c) Occupancy detection control."
                              "\n(d) Central Demand Control based on air quality sensors (CO2, VOC, humidity, ...)."
                              "\n(e) Local Demand Control based on air quality sensors (CO2, VOC,...) "
                              "with local flow from/to the zone regulated by dampers. "
                              "\n[a/b/c/d/e]? : ")
                if VE1LE in ['a', 'b', 'c', 'd', 'e']:
                    # if it was equal - break from the while loop
                    break

            if VE1LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 0
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 0
                VE1LE_Convenience = 0
                VE1LE_WellbeingAndHealth = 0
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 1
                VE1LE_Convenience = 1
                VE1LE_WellbeingAndHealth = 1
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 2
                VE1LE_Convenience = 2
                VE1LE_WellbeingAndHealth = 2
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 2
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "e":
                print("")
                print("Level 4")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 3
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            print("")
            # Ventilation-S3
            print("Ventilation 2 Reporting information regarding IAQ")
            print("")

            while True:
                VE21LE = input("Choose:\n(a) None."
                               "\n(b) Air quality sensors (e.g. CO2) and real time autonomous monitoring."
                               "\n(c) Real time monitoring & historical information of IAQ available to occupants."
                               "\n(d) Real time monitoring & historical information of IAQ available to occupants + "
                               "warning on maintenance needs or occupant actions (e.g. window opening). \n[a/b/c/d]? : ")
                if VE21LE in ['a', 'b', 'c', 'd']:
                    # if it was equal - break from the while loop
                    break

            if VE21LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 0
                VE2LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 1

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 2

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 3

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            # domain_weightings
            # Controlled Ventilation
            VE_WE_energy_savings = 11
            VE_WE_flexibility = 13
            VE_WE_comfort = 17
            VE_WE_convenience = 11
            VE_WE_wellbeing_and_health = 50
            VE_WE_maintenance = 14
            VE_WE_information_to_occupants = 13

            # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
            IM_energy_savings_on_site = 0.14
            IM_flexibility_for_the_grid_and_storage = 0.14
            IM_comfort = 0.14
            IM_convenience = 0.14
            IM_wellbeing_and_health = 0.14
            IM_maintenance_and_fault_prediction = 0.14
            IM_information_to_occupants = 0.14

            # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
            # Ventilation
            # VE 1
            VE1_impact_weighting_energy_saving = VE1LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_impact_weighting_flexibility_for_the_grid_and_storage = VE1LE_Flexibility * (VE_WE_flexibility / 100)
            VE1_impact_weighting_comfort = VE1LE_Comfort * (VE_WE_comfort / 100)
            VE1_impact_weighting_convenience = VE1LE_Convenience * (VE_WE_convenience / 100)
            VE1_impact_weighting_wellbeing_and_health = VE1LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_impact_weighting_maintenance_and_fault_prediction = VE1LE_Maintenance * (VE_WE_maintenance / 100)
            VE1_impact_weighting_information_to_occupants = VE1LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE1_impact_scores_energy_saving = VE1_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE1_impact_scores_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE1_impact_scores_comfort = VE1_impact_weighting_comfort * IM_energy_savings_on_site

            VE1_impact_scores_convenience = VE1_impact_weighting_convenience * IM_energy_savings_on_site

            VE1_impact_scores_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE1_impact_scores_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE1_impact_scores_information_to_occupants = VE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE1LE_Max_EnergySavings = 3
            VE1LE_Max_Flexibility = 0
            VE1LE_Max_Comfort = 3
            VE1LE_Max_Convenience = 3
            VE1LE_Max_WellbeingAndHealth = 3
            VE1LE_Max_Maintenance = 0
            VE1LE_Max_InformationToOccupants = 0

            # Maximum possible SRI impact scores by domain
            VE1_Max_SRI_IM_Scores_EnergySavings = VE1LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_Max_SRI_IM_Scores_Flexibility = VE1LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE1_Max_SRI_IM_Scores_Comfort = VE1LE_Max_Comfort * (VE_WE_comfort / 100)
            VE1_Max_SRI_IM_Scores_Convenience = VE1LE_Max_Convenience * (VE_WE_convenience / 100)
            VE1_Max_SRI_IM_Scores_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_Max_SRI_IM_Scores_Maintenance = VE1LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE1_Max_SRI_IM_Scores_InformationToOccupants = VE1LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE1_Max_impact_scores_energy_saving = VE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE1_Max_impact_scores_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE1_Max_impact_scores_comfort = VE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE1_Max_impact_scores_convenience = VE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE1_Max_impact_scores_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE1_Max_impact_scores_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE1_Max_impact_scores_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            ######################################################################################################################
            # VE 2
            VE2_impact_weighting_energy_saving = VE2LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_impact_weighting_flexibility_for_the_grid_and_storage = VE2LE_Flexibility * (VE_WE_flexibility / 100)
            VE2_impact_weighting_comfort = VE2LE_Comfort * (VE_WE_comfort / 100)
            VE2_impact_weighting_convenience = VE2LE_Convenience * (VE_WE_convenience / 100)
            VE2_impact_weighting_wellbeing_and_health = VE2LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_impact_weighting_maintenance_and_fault_prediction = VE2LE_Maintenance * (VE_WE_maintenance / 100)
            VE2_impact_weighting_information_to_occupants = VE2LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE2_impact_scores_energy_saving = VE2_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE2_impact_scores_flexibility_for_the_grid_and_storage = VE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE2_impact_scores_comfort = VE2_impact_weighting_comfort * IM_energy_savings_on_site

            VE2_impact_scores_convenience = VE2_impact_weighting_convenience * IM_energy_savings_on_site

            VE2_impact_scores_wellbeing_and_health = VE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE2_impact_scores_maintenance_and_fault_prediction = VE2_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE2_impact_scores_information_to_occupants = VE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE2LE_Max_EnergySavings = 0
            VE2LE_Max_Flexibility = 0
            VE2LE_Max_Comfort = 0
            VE2LE_Max_Convenience = 1
            VE2LE_Max_WellbeingAndHealth = 0
            VE2LE_Max_Maintenance = 2
            VE2LE_Max_InformationToOccupants = 3

            # Maximum possible SRI impact scores by domain
            VE2_Max_SRI_IM_Scores_EnergySavings = VE2LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_Max_SRI_IM_Scores_Flexibility = VE2LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE2_Max_SRI_IM_Scores_Comfort = VE2LE_Max_Comfort * (VE_WE_comfort / 100)
            VE2_Max_SRI_IM_Scores_Convenience = VE2LE_Max_Convenience * (VE_WE_convenience / 100)
            VE2_Max_SRI_IM_Scores_WellbeingAndHealth = VE2LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_Max_SRI_IM_Scores_Maintenance = VE2LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE2_Max_SRI_IM_Scores_InformationToOccupants = VE2LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE2_Max_impact_scores_energy_saving = VE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE2_Max_impact_scores_flexibility_for_the_grid_and_storage = VE2_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE2_Max_impact_scores_comfort = VE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE2_Max_impact_scores_convenience = VE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE2_Max_impact_scores_wellbeing_and_health = VE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE2_Max_impact_scores_maintenance_and_fault_prediction = VE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE2_Max_impact_scores_information_to_occupants = VE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            # SUM ORDINAL SCORES
            sum_VE_OR_SC_EnergySavings = VE1LE_EnergySavings + VE2LE_EnergySavings

            sum_VE_OR_SC_Flexibility = VE1LE_Flexibility + VE2LE_Flexibility

            sum_VE_OR_SC_Comfort = VE1LE_Comfort + VE2LE_Comfort

            sum_VE_OR_SC_Convenience = VE1LE_Convenience + VE2LE_Convenience

            sum_VE_OR_SC_WellbeingAndHealth = VE1LE_WellbeingAndHealth + VE2LE_WellbeingAndHealth

            sum_VE_OR_SC_Maintenance = VE1LE_Maintenance + VE2LE_Maintenance

            sum_VE_OR_SC_InformationToOccupants = VE1LE_InformationToOccupants + VE2LE_InformationToOccupants

            # SUM IMPACT SCORES BY DOMAIN
            sum_VE_IM_WE_energy_savings = VE1_impact_weighting_energy_saving + VE2_impact_weighting_energy_saving

            sum_VE_IM_WE_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                                VE2_impact_weighting_flexibility_for_the_grid_and_storage

            sum_VE_IM_WE_comfort = VE1_impact_weighting_comfort + VE2_impact_weighting_comfort

            sum_VE_IM_WE_convenience = VE1_impact_weighting_convenience + VE2_impact_weighting_convenience

            sum_VE_IM_WE_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health + \
                                                VE2_impact_weighting_wellbeing_and_health

            sum_VE_IM_WE_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction + \
                                                            VE2_impact_weighting_maintenance_and_fault_prediction

            sum_VE_IM_WE_information_to_occupants = VE1_impact_weighting_information_to_occupants + \
                                                    VE2_impact_weighting_information_to_occupants

            # SUM SRI impact scores by domain after impact weightings also applied
            sum_VE_IM_SC_energy_savings = VE1_impact_scores_energy_saving + VE2_impact_scores_energy_saving

            sum_VE_IM_flexibility_for_the_grid_and_storage = VE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             VE2_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_IM_SC_comfort = VE1_impact_scores_comfort + VE2_impact_scores_comfort

            sum_VE_IM_SC_convenience = VE1_impact_scores_convenience + VE2_impact_scores_convenience

            sum_VE_IM_SC_wellbeing_and_health = VE1_impact_scores_wellbeing_and_health + VE2_impact_scores_wellbeing_and_health

            sum_VE_IM_SC_maintenance_and_fault_prediction = VE1_impact_scores_maintenance_and_fault_prediction + \
                                                            VE2_impact_scores_maintenance_and_fault_prediction

            sum_VE_IM_SC_information_to_occupants = VE1_impact_scores_information_to_occupants + \
                                                    VE2_impact_scores_information_to_occupants

            # TOTAL
            total_VE_sum_IM_SC = sum_VE_IM_SC_energy_savings + sum_VE_IM_flexibility_for_the_grid_and_storage + \
                                 sum_VE_IM_SC_comfort + sum_VE_IM_SC_convenience + sum_VE_IM_SC_wellbeing_and_health + \
                                 sum_VE_IM_SC_maintenance_and_fault_prediction + sum_VE_IM_SC_information_to_occupants

            # SUM MAX ORDINAL SCORES
            sum_VE_MAX_OR_SC_EnergySavings = VE1LE_Max_EnergySavings + VE2LE_Max_EnergySavings

            sum_VE_MAX_OR_SC_Flexibility = VE1LE_Max_Flexibility + VE2LE_Max_Flexibility

            sum_VE_MAX_OR_SC_Comfort = VE1LE_Max_Comfort + VE2LE_Max_Comfort

            sum_VE_MAX_OR_SC_Convenience = VE1LE_Max_Convenience + VE2LE_Max_Convenience

            sum_VE_MAX_OR_SC_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth + VE2LE_Max_WellbeingAndHealth

            sum_VE_MAX_OR_SC_Maintenance = VE1LE_Max_Maintenance + VE2LE_Max_Maintenance

            sum_VE_MAX_OR_SC_InformationToOccupants = VE1LE_Max_InformationToOccupants + VE2LE_Max_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain
            sum_VE_MAX_IM_WE_energy_savings = VE1_Max_SRI_IM_Scores_EnergySavings + VE2_Max_SRI_IM_Scores_EnergySavings

            sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility + \
                                                                    VE2_Max_SRI_IM_Scores_Flexibility

            sum_VE_MAX_IM_WE_comfort = VE1_Max_SRI_IM_Scores_Comfort + VE2_Max_SRI_IM_Scores_Comfort

            sum_VE_MAX_IM_WE_convenience = VE1_Max_SRI_IM_Scores_Convenience + VE2_Max_SRI_IM_Scores_Convenience

            sum_VE_MAX_IM_WE_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                    VE2_Max_SRI_IM_Scores_WellbeingAndHealth

            sum_VE_MAX_IM_WE_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance + \
                                                                VE2_Max_SRI_IM_Scores_Maintenance

            sum_VE_MAX_IM_WE_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                        VE2_Max_SRI_IM_Scores_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
            sum_VE_MAX_IM_SC_energy_savings = VE1_Max_impact_scores_energy_saving + VE2_Max_impact_scores_energy_saving

            sum_VE_MAX_IM_flexibility_for_the_grid_and_storage = VE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                                 VE2_Max_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_MAX_IM_SC_comfort = VE1_Max_impact_scores_comfort + VE2_Max_impact_scores_comfort

            sum_VE_MAX_IM_SC_convenience = VE1_Max_impact_scores_convenience + VE2_Max_impact_scores_convenience

            sum_VE_MAX_IM_SC_wellbeing_and_health = VE1_Max_impact_scores_wellbeing_and_health + \
                                                    VE2_impact_scores_wellbeing_and_health

            sum_VE_MAX_IM_SC_maintenance_and_fault_prediction = VE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                                VE2_Max_impact_scores_maintenance_and_fault_prediction

            sum_VE_MAX_IM_SC_information_to_occupants = VE1_Max_impact_scores_information_to_occupants + \
                                                        VE2_Max_impact_scores_information_to_occupants

            # TOTAL MAX
            total_VE_MAX_sum_IM_SC = sum_VE_MAX_IM_SC_energy_savings + sum_VE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                     sum_VE_MAX_IM_SC_comfort + sum_VE_MAX_IM_SC_convenience + sum_VE_MAX_IM_SC_wellbeing_and_health + \
                                     sum_VE_MAX_IM_SC_maintenance_and_fault_prediction + sum_VE_MAX_IM_SC_information_to_occupants

        if HR == "a" and SH == "b":
            # print("Ventilation S1, Ventilation S3")
            print("")
            # Ventilation-S1
            print("Ventilation 1 Air flow control at the room level")
            print("")

            while True:
                VE1LE = input("Choose:\n(a) No ventilation system or manual control."
                              "\n(b) Clock control."
                              "\n(c) Occupancy detection control."
                              "\n(d) Central Demand Control based on air quality sensors (CO2, VOC, humidity, ...)."
                              "\n(e) Local Demand Control based on air quality sensors (CO2, VOC,...) "
                              "with local flow from/to the zone regulated by dampers. "
                              "\n[a/b/c/d/e]? : ")
                if VE1LE in ['a', 'b', 'c', 'd', 'e']:
                    # if it was equal - break from the while loop
                    break

            if VE1LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 0
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 0
                VE1LE_Convenience = 0
                VE1LE_WellbeingAndHealth = 0
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 1
                VE1LE_Convenience = 1
                VE1LE_WellbeingAndHealth = 1
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 2
                VE1LE_Convenience = 2
                VE1LE_WellbeingAndHealth = 2
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 2
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "e":
                print("")
                print("Level 4")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 3
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            print("")
            # Ventilation-S3
            print("Ventilation 2 Reporting information regarding IAQ")
            print("")

            while True:
                VE21LE = input("Choose:\n(a) None."
                               "\n(b) Air quality sensors (e.g. CO2) and real time autonomous monitoring."
                               "\n(c) Real time monitoring & historical information of IAQ available to occupants."
                               "\n(d) Real time monitoring & historical information of IAQ available to occupants + "
                               "warning on maintenance needs or occupant actions (e.g. window opening). \n[a/b/c/d]? : ")
                if VE21LE in ['a', 'b', 'c', 'd']:
                    # if it was equal - break from the while loop
                    break

            if VE21LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 0
                VE2LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 1

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 2

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 3

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            # domain_weightings
            # Controlled Ventilation
            VE_WE_energy_savings = 11
            VE_WE_flexibility = 13
            VE_WE_comfort = 17
            VE_WE_convenience = 11
            VE_WE_wellbeing_and_health = 50
            VE_WE_maintenance = 14
            VE_WE_information_to_occupants = 13

            # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
            IM_energy_savings_on_site = 0.14
            IM_flexibility_for_the_grid_and_storage = 0.14
            IM_comfort = 0.14
            IM_convenience = 0.14
            IM_wellbeing_and_health = 0.14
            IM_maintenance_and_fault_prediction = 0.14
            IM_information_to_occupants = 0.14

            # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
            # Ventilation
            # VE 1
            VE1_impact_weighting_energy_saving = VE1LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_impact_weighting_flexibility_for_the_grid_and_storage = VE1LE_Flexibility * (VE_WE_flexibility / 100)
            VE1_impact_weighting_comfort = VE1LE_Comfort * (VE_WE_comfort / 100)
            VE1_impact_weighting_convenience = VE1LE_Convenience * (VE_WE_convenience / 100)
            VE1_impact_weighting_wellbeing_and_health = VE1LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_impact_weighting_maintenance_and_fault_prediction = VE1LE_Maintenance * (VE_WE_maintenance / 100)
            VE1_impact_weighting_information_to_occupants = VE1LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE1_impact_scores_energy_saving = VE1_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE1_impact_scores_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE1_impact_scores_comfort = VE1_impact_weighting_comfort * IM_energy_savings_on_site

            VE1_impact_scores_convenience = VE1_impact_weighting_convenience * IM_energy_savings_on_site

            VE1_impact_scores_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE1_impact_scores_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE1_impact_scores_information_to_occupants = VE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE1LE_Max_EnergySavings = 3
            VE1LE_Max_Flexibility = 0
            VE1LE_Max_Comfort = 3
            VE1LE_Max_Convenience = 3
            VE1LE_Max_WellbeingAndHealth = 3
            VE1LE_Max_Maintenance = 0
            VE1LE_Max_InformationToOccupants = 0

            # Maximum possible SRI impact scores by domain
            VE1_Max_SRI_IM_Scores_EnergySavings = VE1LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_Max_SRI_IM_Scores_Flexibility = VE1LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE1_Max_SRI_IM_Scores_Comfort = VE1LE_Max_Comfort * (VE_WE_comfort / 100)
            VE1_Max_SRI_IM_Scores_Convenience = VE1LE_Max_Convenience * (VE_WE_convenience / 100)
            VE1_Max_SRI_IM_Scores_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_Max_SRI_IM_Scores_Maintenance = VE1LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE1_Max_SRI_IM_Scores_InformationToOccupants = VE1LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE1_Max_impact_scores_energy_saving = VE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE1_Max_impact_scores_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE1_Max_impact_scores_comfort = VE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE1_Max_impact_scores_convenience = VE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE1_Max_impact_scores_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE1_Max_impact_scores_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE1_Max_impact_scores_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            ######################################################################################################################
            # VE 2
            VE2_impact_weighting_energy_saving = VE2LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_impact_weighting_flexibility_for_the_grid_and_storage = VE2LE_Flexibility * (VE_WE_flexibility / 100)
            VE2_impact_weighting_comfort = VE2LE_Comfort * (VE_WE_comfort / 100)
            VE2_impact_weighting_convenience = VE2LE_Convenience * (VE_WE_convenience / 100)
            VE2_impact_weighting_wellbeing_and_health = VE2LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_impact_weighting_maintenance_and_fault_prediction = VE2LE_Maintenance * (VE_WE_maintenance / 100)
            VE2_impact_weighting_information_to_occupants = VE2LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE2_impact_scores_energy_saving = VE2_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE2_impact_scores_flexibility_for_the_grid_and_storage = VE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE2_impact_scores_comfort = VE2_impact_weighting_comfort * IM_energy_savings_on_site

            VE2_impact_scores_convenience = VE2_impact_weighting_convenience * IM_energy_savings_on_site

            VE2_impact_scores_wellbeing_and_health = VE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE2_impact_scores_maintenance_and_fault_prediction = VE2_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE2_impact_scores_information_to_occupants = VE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE2LE_Max_EnergySavings = 0
            VE2LE_Max_Flexibility = 0
            VE2LE_Max_Comfort = 0
            VE2LE_Max_Convenience = 1
            VE2LE_Max_WellbeingAndHealth = 0
            VE2LE_Max_Maintenance = 2
            VE2LE_Max_InformationToOccupants = 3

            # Maximum possible SRI impact scores by domain
            VE2_Max_SRI_IM_Scores_EnergySavings = VE2LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_Max_SRI_IM_Scores_Flexibility = VE2LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE2_Max_SRI_IM_Scores_Comfort = VE2LE_Max_Comfort * (VE_WE_comfort / 100)
            VE2_Max_SRI_IM_Scores_Convenience = VE2LE_Max_Convenience * (VE_WE_convenience / 100)
            VE2_Max_SRI_IM_Scores_WellbeingAndHealth = VE2LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_Max_SRI_IM_Scores_Maintenance = VE2LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE2_Max_SRI_IM_Scores_InformationToOccupants = VE2LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE2_Max_impact_scores_energy_saving = VE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE2_Max_impact_scores_flexibility_for_the_grid_and_storage = VE2_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE2_Max_impact_scores_comfort = VE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE2_Max_impact_scores_convenience = VE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE2_Max_impact_scores_wellbeing_and_health = VE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE2_Max_impact_scores_maintenance_and_fault_prediction = VE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE2_Max_impact_scores_information_to_occupants = VE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            # SUM ORDINAL SCORES
            sum_VE_OR_SC_EnergySavings = VE1LE_EnergySavings + VE2LE_EnergySavings

            sum_VE_OR_SC_Flexibility = VE1LE_Flexibility + VE2LE_Flexibility

            sum_VE_OR_SC_Comfort = VE1LE_Comfort + VE2LE_Comfort

            sum_VE_OR_SC_Convenience = VE1LE_Convenience + VE2LE_Convenience

            sum_VE_OR_SC_WellbeingAndHealth = VE1LE_WellbeingAndHealth + VE2LE_WellbeingAndHealth

            sum_VE_OR_SC_Maintenance = VE1LE_Maintenance + VE2LE_Maintenance

            sum_VE_OR_SC_InformationToOccupants = VE1LE_InformationToOccupants + VE2LE_InformationToOccupants

            # SUM IMPACT SCORES BY DOMAIN
            sum_VE_IM_WE_energy_savings = VE1_impact_weighting_energy_saving + VE2_impact_weighting_energy_saving

            sum_VE_IM_WE_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                                VE2_impact_weighting_flexibility_for_the_grid_and_storage

            sum_VE_IM_WE_comfort = VE1_impact_weighting_comfort + VE2_impact_weighting_comfort

            sum_VE_IM_WE_convenience = VE1_impact_weighting_convenience + VE2_impact_weighting_convenience

            sum_VE_IM_WE_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health + \
                                                VE2_impact_weighting_wellbeing_and_health

            sum_VE_IM_WE_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction + \
                                                            VE2_impact_weighting_maintenance_and_fault_prediction

            sum_VE_IM_WE_information_to_occupants = VE1_impact_weighting_information_to_occupants + \
                                                    VE2_impact_weighting_information_to_occupants

            # SUM SRI impact scores by domain after impact weightings also applied
            sum_VE_IM_SC_energy_savings = VE1_impact_scores_energy_saving + VE2_impact_scores_energy_saving

            sum_VE_IM_flexibility_for_the_grid_and_storage = VE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             VE2_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_IM_SC_comfort = VE1_impact_scores_comfort + VE2_impact_scores_comfort

            sum_VE_IM_SC_convenience = VE1_impact_scores_convenience + VE2_impact_scores_convenience

            sum_VE_IM_SC_wellbeing_and_health = VE1_impact_scores_wellbeing_and_health + VE2_impact_scores_wellbeing_and_health

            sum_VE_IM_SC_maintenance_and_fault_prediction = VE1_impact_scores_maintenance_and_fault_prediction + \
                                                            VE2_impact_scores_maintenance_and_fault_prediction

            sum_VE_IM_SC_information_to_occupants = VE1_impact_scores_information_to_occupants + \
                                                    VE2_impact_scores_information_to_occupants

            # TOTAL
            total_VE_sum_IM_SC = sum_VE_IM_SC_energy_savings + sum_VE_IM_flexibility_for_the_grid_and_storage + \
                                 sum_VE_IM_SC_comfort + sum_VE_IM_SC_convenience + sum_VE_IM_SC_wellbeing_and_health + \
                                 sum_VE_IM_SC_maintenance_and_fault_prediction + sum_VE_IM_SC_information_to_occupants

            # SUM MAX ORDINAL SCORES
            sum_VE_MAX_OR_SC_EnergySavings = VE1LE_Max_EnergySavings + VE2LE_Max_EnergySavings

            sum_VE_MAX_OR_SC_Flexibility = VE1LE_Max_Flexibility + VE2LE_Max_Flexibility

            sum_VE_MAX_OR_SC_Comfort = VE1LE_Max_Comfort + VE2LE_Max_Comfort

            sum_VE_MAX_OR_SC_Convenience = VE1LE_Max_Convenience + VE2LE_Max_Convenience

            sum_VE_MAX_OR_SC_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth + VE2LE_Max_WellbeingAndHealth

            sum_VE_MAX_OR_SC_Maintenance = VE1LE_Max_Maintenance + VE2LE_Max_Maintenance

            sum_VE_MAX_OR_SC_InformationToOccupants = VE1LE_Max_InformationToOccupants + VE2LE_Max_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain
            sum_VE_MAX_IM_WE_energy_savings = VE1_Max_SRI_IM_Scores_EnergySavings + VE2_Max_SRI_IM_Scores_EnergySavings

            sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility + \
                                                                    VE2_Max_SRI_IM_Scores_Flexibility

            sum_VE_MAX_IM_WE_comfort = VE1_Max_SRI_IM_Scores_Comfort + VE2_Max_SRI_IM_Scores_Comfort

            sum_VE_MAX_IM_WE_convenience = VE1_Max_SRI_IM_Scores_Convenience + VE2_Max_SRI_IM_Scores_Convenience

            sum_VE_MAX_IM_WE_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                    VE2_Max_SRI_IM_Scores_WellbeingAndHealth

            sum_VE_MAX_IM_WE_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance + \
                                                                VE2_Max_SRI_IM_Scores_Maintenance

            sum_VE_MAX_IM_WE_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                        VE2_Max_SRI_IM_Scores_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
            sum_VE_MAX_IM_SC_energy_savings = VE1_Max_impact_scores_energy_saving + VE2_Max_impact_scores_energy_saving

            sum_VE_MAX_IM_flexibility_for_the_grid_and_storage = VE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                                 VE2_Max_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_MAX_IM_SC_comfort = VE1_Max_impact_scores_comfort + VE2_Max_impact_scores_comfort

            sum_VE_MAX_IM_SC_convenience = VE1_Max_impact_scores_convenience + VE2_Max_impact_scores_convenience

            sum_VE_MAX_IM_SC_wellbeing_and_health = VE1_Max_impact_scores_wellbeing_and_health + \
                                                    VE2_impact_scores_wellbeing_and_health

            sum_VE_MAX_IM_SC_maintenance_and_fault_prediction = VE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                                VE2_Max_impact_scores_maintenance_and_fault_prediction

            sum_VE_MAX_IM_SC_information_to_occupants = VE1_Max_impact_scores_information_to_occupants + \
                                                        VE2_Max_impact_scores_information_to_occupants

            # TOTAL MAX
            total_VE_MAX_sum_IM_SC = sum_VE_MAX_IM_SC_energy_savings + sum_VE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                     sum_VE_MAX_IM_SC_comfort + sum_VE_MAX_IM_SC_convenience + sum_VE_MAX_IM_SC_wellbeing_and_health + \
                                     sum_VE_MAX_IM_SC_maintenance_and_fault_prediction + sum_VE_MAX_IM_SC_information_to_occupants

        if HR == "a" and SH == "a" and SST == "a":
            # print("Ventilation S1, Ventilation S3")
            print("")
            # Ventilation-S1
            print("Ventilation 1 Air flow control at the room level")
            print("")

            while True:
                VE1LE = input("Choose:\n(a) No ventilation system or manual control."
                              "\n(b) Clock control."
                              "\n(c) Occupancy detection control."
                              "\n(d) Central Demand Control based on air quality sensors (CO2, VOC, humidity, ...)."
                              "\n(e) Local Demand Control based on air quality sensors (CO2, VOC,...) "
                              "with local flow from/to the zone regulated by dampers. "
                              "\n[a/b/c/d/e]? : ")
                if VE1LE in ['a', 'b', 'c', 'd', 'e']:
                    # if it was equal - break from the while loop
                    break

            if VE1LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 0
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 0
                VE1LE_Convenience = 0
                VE1LE_WellbeingAndHealth = 0
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 1
                VE1LE_Convenience = 1
                VE1LE_WellbeingAndHealth = 1
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 2
                VE1LE_Convenience = 2
                VE1LE_WellbeingAndHealth = 2
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 2
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "e":
                print("")
                print("Level 4")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 3
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            print("")
            # Ventilation-S3
            print("Ventilation 2 Reporting information regarding IAQ")
            print("")

            while True:
                VE21LE = input("Choose:\n(a) None."
                               "\n(b) Air quality sensors (e.g. CO2) and real time autonomous monitoring."
                               "\n(c) Real time monitoring & historical information of IAQ available to occupants."
                               "\n(d) Real time monitoring & historical information of IAQ available to occupants + "
                               "warning on maintenance needs or occupant actions (e.g. window opening). \n[a/b/c/d]? : ")
                if VE21LE in ['a', 'b', 'c', 'd']:
                    # if it was equal - break from the while loop
                    break

            if VE21LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 0
                VE2LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 1

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 2

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 3

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            # domain_weightings
            # Controlled Ventilation
            VE_WE_energy_savings = 11
            VE_WE_flexibility = 13
            VE_WE_comfort = 17
            VE_WE_convenience = 11
            VE_WE_wellbeing_and_health = 50
            VE_WE_maintenance = 14
            VE_WE_information_to_occupants = 13

            # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
            IM_energy_savings_on_site = 0.14
            IM_flexibility_for_the_grid_and_storage = 0.14
            IM_comfort = 0.14
            IM_convenience = 0.14
            IM_wellbeing_and_health = 0.14
            IM_maintenance_and_fault_prediction = 0.14
            IM_information_to_occupants = 0.14

            # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
            # Ventilation
            # VE 1
            VE1_impact_weighting_energy_saving = VE1LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_impact_weighting_flexibility_for_the_grid_and_storage = VE1LE_Flexibility * (VE_WE_flexibility / 100)
            VE1_impact_weighting_comfort = VE1LE_Comfort * (VE_WE_comfort / 100)
            VE1_impact_weighting_convenience = VE1LE_Convenience * (VE_WE_convenience / 100)
            VE1_impact_weighting_wellbeing_and_health = VE1LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_impact_weighting_maintenance_and_fault_prediction = VE1LE_Maintenance * (VE_WE_maintenance / 100)
            VE1_impact_weighting_information_to_occupants = VE1LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE1_impact_scores_energy_saving = VE1_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE1_impact_scores_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE1_impact_scores_comfort = VE1_impact_weighting_comfort * IM_energy_savings_on_site

            VE1_impact_scores_convenience = VE1_impact_weighting_convenience * IM_energy_savings_on_site

            VE1_impact_scores_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE1_impact_scores_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE1_impact_scores_information_to_occupants = VE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE1LE_Max_EnergySavings = 3
            VE1LE_Max_Flexibility = 0
            VE1LE_Max_Comfort = 3
            VE1LE_Max_Convenience = 3
            VE1LE_Max_WellbeingAndHealth = 3
            VE1LE_Max_Maintenance = 0
            VE1LE_Max_InformationToOccupants = 0

            # Maximum possible SRI impact scores by domain
            VE1_Max_SRI_IM_Scores_EnergySavings = VE1LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_Max_SRI_IM_Scores_Flexibility = VE1LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE1_Max_SRI_IM_Scores_Comfort = VE1LE_Max_Comfort * (VE_WE_comfort / 100)
            VE1_Max_SRI_IM_Scores_Convenience = VE1LE_Max_Convenience * (VE_WE_convenience / 100)
            VE1_Max_SRI_IM_Scores_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_Max_SRI_IM_Scores_Maintenance = VE1LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE1_Max_SRI_IM_Scores_InformationToOccupants = VE1LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE1_Max_impact_scores_energy_saving = VE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE1_Max_impact_scores_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE1_Max_impact_scores_comfort = VE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE1_Max_impact_scores_convenience = VE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE1_Max_impact_scores_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE1_Max_impact_scores_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE1_Max_impact_scores_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            ######################################################################################################################
            # VE 2
            VE2_impact_weighting_energy_saving = VE2LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_impact_weighting_flexibility_for_the_grid_and_storage = VE2LE_Flexibility * (VE_WE_flexibility / 100)
            VE2_impact_weighting_comfort = VE2LE_Comfort * (VE_WE_comfort / 100)
            VE2_impact_weighting_convenience = VE2LE_Convenience * (VE_WE_convenience / 100)
            VE2_impact_weighting_wellbeing_and_health = VE2LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_impact_weighting_maintenance_and_fault_prediction = VE2LE_Maintenance * (VE_WE_maintenance / 100)
            VE2_impact_weighting_information_to_occupants = VE2LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE2_impact_scores_energy_saving = VE2_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE2_impact_scores_flexibility_for_the_grid_and_storage = VE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE2_impact_scores_comfort = VE2_impact_weighting_comfort * IM_energy_savings_on_site

            VE2_impact_scores_convenience = VE2_impact_weighting_convenience * IM_energy_savings_on_site

            VE2_impact_scores_wellbeing_and_health = VE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE2_impact_scores_maintenance_and_fault_prediction = VE2_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE2_impact_scores_information_to_occupants = VE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE2LE_Max_EnergySavings = 0
            VE2LE_Max_Flexibility = 0
            VE2LE_Max_Comfort = 0
            VE2LE_Max_Convenience = 1
            VE2LE_Max_WellbeingAndHealth = 0
            VE2LE_Max_Maintenance = 2
            VE2LE_Max_InformationToOccupants = 3

            # Maximum possible SRI impact scores by domain
            VE2_Max_SRI_IM_Scores_EnergySavings = VE2LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_Max_SRI_IM_Scores_Flexibility = VE2LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE2_Max_SRI_IM_Scores_Comfort = VE2LE_Max_Comfort * (VE_WE_comfort / 100)
            VE2_Max_SRI_IM_Scores_Convenience = VE2LE_Max_Convenience * (VE_WE_convenience / 100)
            VE2_Max_SRI_IM_Scores_WellbeingAndHealth = VE2LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_Max_SRI_IM_Scores_Maintenance = VE2LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE2_Max_SRI_IM_Scores_InformationToOccupants = VE2LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE2_Max_impact_scores_energy_saving = VE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE2_Max_impact_scores_flexibility_for_the_grid_and_storage = VE2_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE2_Max_impact_scores_comfort = VE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE2_Max_impact_scores_convenience = VE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE2_Max_impact_scores_wellbeing_and_health = VE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE2_Max_impact_scores_maintenance_and_fault_prediction = VE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE2_Max_impact_scores_information_to_occupants = VE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            # SUM ORDINAL SCORES
            sum_VE_OR_SC_EnergySavings = VE1LE_EnergySavings + VE2LE_EnergySavings

            sum_VE_OR_SC_Flexibility = VE1LE_Flexibility + VE2LE_Flexibility

            sum_VE_OR_SC_Comfort = VE1LE_Comfort + VE2LE_Comfort

            sum_VE_OR_SC_Convenience = VE1LE_Convenience + VE2LE_Convenience

            sum_VE_OR_SC_WellbeingAndHealth = VE1LE_WellbeingAndHealth + VE2LE_WellbeingAndHealth

            sum_VE_OR_SC_Maintenance = VE1LE_Maintenance + VE2LE_Maintenance

            sum_VE_OR_SC_InformationToOccupants = VE1LE_InformationToOccupants + VE2LE_InformationToOccupants

            # SUM IMPACT SCORES BY DOMAIN
            sum_VE_IM_WE_energy_savings = VE1_impact_weighting_energy_saving + VE2_impact_weighting_energy_saving

            sum_VE_IM_WE_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                                VE2_impact_weighting_flexibility_for_the_grid_and_storage

            sum_VE_IM_WE_comfort = VE1_impact_weighting_comfort + VE2_impact_weighting_comfort

            sum_VE_IM_WE_convenience = VE1_impact_weighting_convenience + VE2_impact_weighting_convenience

            sum_VE_IM_WE_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health + \
                                                VE2_impact_weighting_wellbeing_and_health

            sum_VE_IM_WE_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction + \
                                                            VE2_impact_weighting_maintenance_and_fault_prediction

            sum_VE_IM_WE_information_to_occupants = VE1_impact_weighting_information_to_occupants + \
                                                    VE2_impact_weighting_information_to_occupants

            # SUM SRI impact scores by domain after impact weightings also applied
            sum_VE_IM_SC_energy_savings = VE1_impact_scores_energy_saving + VE2_impact_scores_energy_saving

            sum_VE_IM_flexibility_for_the_grid_and_storage = VE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             VE2_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_IM_SC_comfort = VE1_impact_scores_comfort + VE2_impact_scores_comfort

            sum_VE_IM_SC_convenience = VE1_impact_scores_convenience + VE2_impact_scores_convenience

            sum_VE_IM_SC_wellbeing_and_health = VE1_impact_scores_wellbeing_and_health + VE2_impact_scores_wellbeing_and_health

            sum_VE_IM_SC_maintenance_and_fault_prediction = VE1_impact_scores_maintenance_and_fault_prediction + \
                                                            VE2_impact_scores_maintenance_and_fault_prediction

            sum_VE_IM_SC_information_to_occupants = VE1_impact_scores_information_to_occupants + \
                                                    VE2_impact_scores_information_to_occupants

            # TOTAL
            total_VE_sum_IM_SC = sum_VE_IM_SC_energy_savings + sum_VE_IM_flexibility_for_the_grid_and_storage + \
                                 sum_VE_IM_SC_comfort + sum_VE_IM_SC_convenience + sum_VE_IM_SC_wellbeing_and_health + \
                                 sum_VE_IM_SC_maintenance_and_fault_prediction + sum_VE_IM_SC_information_to_occupants

            # SUM MAX ORDINAL SCORES
            sum_VE_MAX_OR_SC_EnergySavings = VE1LE_Max_EnergySavings + VE2LE_Max_EnergySavings

            sum_VE_MAX_OR_SC_Flexibility = VE1LE_Max_Flexibility + VE2LE_Max_Flexibility

            sum_VE_MAX_OR_SC_Comfort = VE1LE_Max_Comfort + VE2LE_Max_Comfort

            sum_VE_MAX_OR_SC_Convenience = VE1LE_Max_Convenience + VE2LE_Max_Convenience

            sum_VE_MAX_OR_SC_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth + VE2LE_Max_WellbeingAndHealth

            sum_VE_MAX_OR_SC_Maintenance = VE1LE_Max_Maintenance + VE2LE_Max_Maintenance

            sum_VE_MAX_OR_SC_InformationToOccupants = VE1LE_Max_InformationToOccupants + VE2LE_Max_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain
            sum_VE_MAX_IM_WE_energy_savings = VE1_Max_SRI_IM_Scores_EnergySavings + VE2_Max_SRI_IM_Scores_EnergySavings

            sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility + \
                                                                    VE2_Max_SRI_IM_Scores_Flexibility

            sum_VE_MAX_IM_WE_comfort = VE1_Max_SRI_IM_Scores_Comfort + VE2_Max_SRI_IM_Scores_Comfort

            sum_VE_MAX_IM_WE_convenience = VE1_Max_SRI_IM_Scores_Convenience + VE2_Max_SRI_IM_Scores_Convenience

            sum_VE_MAX_IM_WE_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                    VE2_Max_SRI_IM_Scores_WellbeingAndHealth

            sum_VE_MAX_IM_WE_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance + \
                                                                VE2_Max_SRI_IM_Scores_Maintenance

            sum_VE_MAX_IM_WE_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                        VE2_Max_SRI_IM_Scores_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
            sum_VE_MAX_IM_SC_energy_savings = VE1_Max_impact_scores_energy_saving + VE2_Max_impact_scores_energy_saving

            sum_VE_MAX_IM_flexibility_for_the_grid_and_storage = VE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                                 VE2_Max_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_MAX_IM_SC_comfort = VE1_Max_impact_scores_comfort + VE2_Max_impact_scores_comfort

            sum_VE_MAX_IM_SC_convenience = VE1_Max_impact_scores_convenience + VE2_Max_impact_scores_convenience

            sum_VE_MAX_IM_SC_wellbeing_and_health = VE1_Max_impact_scores_wellbeing_and_health + \
                                                    VE2_impact_scores_wellbeing_and_health

            sum_VE_MAX_IM_SC_maintenance_and_fault_prediction = VE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                                VE2_Max_impact_scores_maintenance_and_fault_prediction

            sum_VE_MAX_IM_SC_information_to_occupants = VE1_Max_impact_scores_information_to_occupants + \
                                                        VE2_Max_impact_scores_information_to_occupants

            # TOTAL MAX
            total_VE_MAX_sum_IM_SC = sum_VE_MAX_IM_SC_energy_savings + sum_VE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                     sum_VE_MAX_IM_SC_comfort + sum_VE_MAX_IM_SC_convenience + sum_VE_MAX_IM_SC_wellbeing_and_health + \
                                     sum_VE_MAX_IM_SC_maintenance_and_fault_prediction + sum_VE_MAX_IM_SC_information_to_occupants

        if HR == "b" and SH == "a" and SST == "a":
            # print("Ventilation S1, Ventilation S3")
            print("")
            # Ventilation-S1
            print("Ventilation 1 Air flow control at the room level")
            print("")

            while True:
                VE1LE = input("Choose:\n(a) No ventilation system or manual control."
                              "\n(b) Clock control."
                              "\n(c) Occupancy detection control."
                              "\n(d) Central Demand Control based on air quality sensors (CO2, VOC, humidity, ...)."
                              "\n(e) Local Demand Control based on air quality sensors (CO2, VOC,...) "
                              "with local flow from/to the zone regulated by dampers. "
                              "\n[a/b/c/d/e]? : ")
                if VE1LE in ['a', 'b', 'c', 'd', 'e']:
                    # if it was equal - break from the while loop
                    break

            if VE1LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 0
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 0
                VE1LE_Convenience = 0
                VE1LE_WellbeingAndHealth = 0
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 1
                VE1LE_Convenience = 1
                VE1LE_WellbeingAndHealth = 1
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 2
                VE1LE_Convenience = 2
                VE1LE_WellbeingAndHealth = 2
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 2
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "e":
                print("")
                print("Level 4")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 3
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            print("")
            # Ventilation-S3
            print("Ventilation 2 Reporting information regarding IAQ")
            print("")

            while True:
                VE21LE = input("Choose:\n(a) None."
                               "\n(b) Air quality sensors (e.g. CO2) and real time autonomous monitoring."
                               "\n(c) Real time monitoring & historical information of IAQ available to occupants."
                               "\n(d) Real time monitoring & historical information of IAQ available to occupants + "
                               "warning on maintenance needs or occupant actions (e.g. window opening). \n[a/b/c/d]? : ")
                if VE21LE in ['a', 'b', 'c', 'd']:
                    # if it was equal - break from the while loop
                    break

            if VE21LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 0
                VE2LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 1

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 2

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 3

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            # domain_weightings
            # Controlled Ventilation
            VE_WE_energy_savings = 11
            VE_WE_flexibility = 13
            VE_WE_comfort = 17
            VE_WE_convenience = 11
            VE_WE_wellbeing_and_health = 50
            VE_WE_maintenance = 14
            VE_WE_information_to_occupants = 13

            # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
            IM_energy_savings_on_site = 0.14
            IM_flexibility_for_the_grid_and_storage = 0.14
            IM_comfort = 0.14
            IM_convenience = 0.14
            IM_wellbeing_and_health = 0.14
            IM_maintenance_and_fault_prediction = 0.14
            IM_information_to_occupants = 0.14

            # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
            # Ventilation
            # VE 1
            VE1_impact_weighting_energy_saving = VE1LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_impact_weighting_flexibility_for_the_grid_and_storage = VE1LE_Flexibility * (VE_WE_flexibility / 100)
            VE1_impact_weighting_comfort = VE1LE_Comfort * (VE_WE_comfort / 100)
            VE1_impact_weighting_convenience = VE1LE_Convenience * (VE_WE_convenience / 100)
            VE1_impact_weighting_wellbeing_and_health = VE1LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_impact_weighting_maintenance_and_fault_prediction = VE1LE_Maintenance * (VE_WE_maintenance / 100)
            VE1_impact_weighting_information_to_occupants = VE1LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE1_impact_scores_energy_saving = VE1_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE1_impact_scores_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE1_impact_scores_comfort = VE1_impact_weighting_comfort * IM_energy_savings_on_site

            VE1_impact_scores_convenience = VE1_impact_weighting_convenience * IM_energy_savings_on_site

            VE1_impact_scores_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE1_impact_scores_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE1_impact_scores_information_to_occupants = VE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE1LE_Max_EnergySavings = 3
            VE1LE_Max_Flexibility = 0
            VE1LE_Max_Comfort = 3
            VE1LE_Max_Convenience = 3
            VE1LE_Max_WellbeingAndHealth = 3
            VE1LE_Max_Maintenance = 0
            VE1LE_Max_InformationToOccupants = 0

            # Maximum possible SRI impact scores by domain
            VE1_Max_SRI_IM_Scores_EnergySavings = VE1LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_Max_SRI_IM_Scores_Flexibility = VE1LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE1_Max_SRI_IM_Scores_Comfort = VE1LE_Max_Comfort * (VE_WE_comfort / 100)
            VE1_Max_SRI_IM_Scores_Convenience = VE1LE_Max_Convenience * (VE_WE_convenience / 100)
            VE1_Max_SRI_IM_Scores_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_Max_SRI_IM_Scores_Maintenance = VE1LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE1_Max_SRI_IM_Scores_InformationToOccupants = VE1LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE1_Max_impact_scores_energy_saving = VE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE1_Max_impact_scores_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE1_Max_impact_scores_comfort = VE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE1_Max_impact_scores_convenience = VE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE1_Max_impact_scores_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE1_Max_impact_scores_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE1_Max_impact_scores_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            ######################################################################################################################
            # VE 2
            VE2_impact_weighting_energy_saving = VE2LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_impact_weighting_flexibility_for_the_grid_and_storage = VE2LE_Flexibility * (VE_WE_flexibility / 100)
            VE2_impact_weighting_comfort = VE2LE_Comfort * (VE_WE_comfort / 100)
            VE2_impact_weighting_convenience = VE2LE_Convenience * (VE_WE_convenience / 100)
            VE2_impact_weighting_wellbeing_and_health = VE2LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_impact_weighting_maintenance_and_fault_prediction = VE2LE_Maintenance * (VE_WE_maintenance / 100)
            VE2_impact_weighting_information_to_occupants = VE2LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE2_impact_scores_energy_saving = VE2_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE2_impact_scores_flexibility_for_the_grid_and_storage = VE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE2_impact_scores_comfort = VE2_impact_weighting_comfort * IM_energy_savings_on_site

            VE2_impact_scores_convenience = VE2_impact_weighting_convenience * IM_energy_savings_on_site

            VE2_impact_scores_wellbeing_and_health = VE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE2_impact_scores_maintenance_and_fault_prediction = VE2_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE2_impact_scores_information_to_occupants = VE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE2LE_Max_EnergySavings = 0
            VE2LE_Max_Flexibility = 0
            VE2LE_Max_Comfort = 0
            VE2LE_Max_Convenience = 1
            VE2LE_Max_WellbeingAndHealth = 0
            VE2LE_Max_Maintenance = 2
            VE2LE_Max_InformationToOccupants = 3

            # Maximum possible SRI impact scores by domain
            VE2_Max_SRI_IM_Scores_EnergySavings = VE2LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_Max_SRI_IM_Scores_Flexibility = VE2LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE2_Max_SRI_IM_Scores_Comfort = VE2LE_Max_Comfort * (VE_WE_comfort / 100)
            VE2_Max_SRI_IM_Scores_Convenience = VE2LE_Max_Convenience * (VE_WE_convenience / 100)
            VE2_Max_SRI_IM_Scores_WellbeingAndHealth = VE2LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_Max_SRI_IM_Scores_Maintenance = VE2LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE2_Max_SRI_IM_Scores_InformationToOccupants = VE2LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE2_Max_impact_scores_energy_saving = VE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE2_Max_impact_scores_flexibility_for_the_grid_and_storage = VE2_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE2_Max_impact_scores_comfort = VE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE2_Max_impact_scores_convenience = VE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE2_Max_impact_scores_wellbeing_and_health = VE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE2_Max_impact_scores_maintenance_and_fault_prediction = VE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE2_Max_impact_scores_information_to_occupants = VE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            # SUM ORDINAL SCORES
            sum_VE_OR_SC_EnergySavings = VE1LE_EnergySavings + VE2LE_EnergySavings

            sum_VE_OR_SC_Flexibility = VE1LE_Flexibility + VE2LE_Flexibility

            sum_VE_OR_SC_Comfort = VE1LE_Comfort + VE2LE_Comfort

            sum_VE_OR_SC_Convenience = VE1LE_Convenience + VE2LE_Convenience

            sum_VE_OR_SC_WellbeingAndHealth = VE1LE_WellbeingAndHealth + VE2LE_WellbeingAndHealth

            sum_VE_OR_SC_Maintenance = VE1LE_Maintenance + VE2LE_Maintenance

            sum_VE_OR_SC_InformationToOccupants = VE1LE_InformationToOccupants + VE2LE_InformationToOccupants

            # SUM IMPACT SCORES BY DOMAIN
            sum_VE_IM_WE_energy_savings = VE1_impact_weighting_energy_saving + VE2_impact_weighting_energy_saving

            sum_VE_IM_WE_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                                VE2_impact_weighting_flexibility_for_the_grid_and_storage

            sum_VE_IM_WE_comfort = VE1_impact_weighting_comfort + VE2_impact_weighting_comfort

            sum_VE_IM_WE_convenience = VE1_impact_weighting_convenience + VE2_impact_weighting_convenience

            sum_VE_IM_WE_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health + \
                                                VE2_impact_weighting_wellbeing_and_health

            sum_VE_IM_WE_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction + \
                                                            VE2_impact_weighting_maintenance_and_fault_prediction

            sum_VE_IM_WE_information_to_occupants = VE1_impact_weighting_information_to_occupants + \
                                                    VE2_impact_weighting_information_to_occupants

            # SUM SRI impact scores by domain after impact weightings also applied
            sum_VE_IM_SC_energy_savings = VE1_impact_scores_energy_saving + VE2_impact_scores_energy_saving

            sum_VE_IM_flexibility_for_the_grid_and_storage = VE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             VE2_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_IM_SC_comfort = VE1_impact_scores_comfort + VE2_impact_scores_comfort

            sum_VE_IM_SC_convenience = VE1_impact_scores_convenience + VE2_impact_scores_convenience

            sum_VE_IM_SC_wellbeing_and_health = VE1_impact_scores_wellbeing_and_health + VE2_impact_scores_wellbeing_and_health

            sum_VE_IM_SC_maintenance_and_fault_prediction = VE1_impact_scores_maintenance_and_fault_prediction + \
                                                            VE2_impact_scores_maintenance_and_fault_prediction

            sum_VE_IM_SC_information_to_occupants = VE1_impact_scores_information_to_occupants + \
                                                    VE2_impact_scores_information_to_occupants

            # TOTAL
            total_VE_sum_IM_SC = sum_VE_IM_SC_energy_savings + sum_VE_IM_flexibility_for_the_grid_and_storage + \
                                 sum_VE_IM_SC_comfort + sum_VE_IM_SC_convenience + sum_VE_IM_SC_wellbeing_and_health + \
                                 sum_VE_IM_SC_maintenance_and_fault_prediction + sum_VE_IM_SC_information_to_occupants

            # SUM MAX ORDINAL SCORES
            sum_VE_MAX_OR_SC_EnergySavings = VE1LE_Max_EnergySavings + VE2LE_Max_EnergySavings

            sum_VE_MAX_OR_SC_Flexibility = VE1LE_Max_Flexibility + VE2LE_Max_Flexibility

            sum_VE_MAX_OR_SC_Comfort = VE1LE_Max_Comfort + VE2LE_Max_Comfort

            sum_VE_MAX_OR_SC_Convenience = VE1LE_Max_Convenience + VE2LE_Max_Convenience

            sum_VE_MAX_OR_SC_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth + VE2LE_Max_WellbeingAndHealth

            sum_VE_MAX_OR_SC_Maintenance = VE1LE_Max_Maintenance + VE2LE_Max_Maintenance

            sum_VE_MAX_OR_SC_InformationToOccupants = VE1LE_Max_InformationToOccupants + VE2LE_Max_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain
            sum_VE_MAX_IM_WE_energy_savings = VE1_Max_SRI_IM_Scores_EnergySavings + VE2_Max_SRI_IM_Scores_EnergySavings

            sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility + \
                                                                    VE2_Max_SRI_IM_Scores_Flexibility

            sum_VE_MAX_IM_WE_comfort = VE1_Max_SRI_IM_Scores_Comfort + VE2_Max_SRI_IM_Scores_Comfort

            sum_VE_MAX_IM_WE_convenience = VE1_Max_SRI_IM_Scores_Convenience + VE2_Max_SRI_IM_Scores_Convenience

            sum_VE_MAX_IM_WE_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                    VE2_Max_SRI_IM_Scores_WellbeingAndHealth

            sum_VE_MAX_IM_WE_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance + \
                                                                VE2_Max_SRI_IM_Scores_Maintenance

            sum_VE_MAX_IM_WE_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                        VE2_Max_SRI_IM_Scores_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
            sum_VE_MAX_IM_SC_energy_savings = VE1_Max_impact_scores_energy_saving + VE2_Max_impact_scores_energy_saving

            sum_VE_MAX_IM_flexibility_for_the_grid_and_storage = VE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                                 VE2_Max_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_MAX_IM_SC_comfort = VE1_Max_impact_scores_comfort + VE2_Max_impact_scores_comfort

            sum_VE_MAX_IM_SC_convenience = VE1_Max_impact_scores_convenience + VE2_Max_impact_scores_convenience

            sum_VE_MAX_IM_SC_wellbeing_and_health = VE1_Max_impact_scores_wellbeing_and_health + \
                                                    VE2_impact_scores_wellbeing_and_health

            sum_VE_MAX_IM_SC_maintenance_and_fault_prediction = VE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                                VE2_Max_impact_scores_maintenance_and_fault_prediction

            sum_VE_MAX_IM_SC_information_to_occupants = VE1_Max_impact_scores_information_to_occupants + \
                                                        VE2_Max_impact_scores_information_to_occupants

            # TOTAL MAX
            total_VE_MAX_sum_IM_SC = sum_VE_MAX_IM_SC_energy_savings + sum_VE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                     sum_VE_MAX_IM_SC_comfort + sum_VE_MAX_IM_SC_convenience + sum_VE_MAX_IM_SC_wellbeing_and_health + \
                                     sum_VE_MAX_IM_SC_maintenance_and_fault_prediction + sum_VE_MAX_IM_SC_information_to_occupants

        if HR == "b" and SH == "a" and SST == "b":
            # print("Ventilation S1, Ventilation S3")
            print("")
            # Ventilation-S1
            print("Ventilation 1 Air flow control at the room level")
            print("")

            while True:
                VE1LE = input("Choose:\n(a) No ventilation system or manual control."
                              "\n(b) Clock control."
                              "\n(c) Occupancy detection control."
                              "\n(d) Central Demand Control based on air quality sensors (CO2, VOC, humidity, ...)."
                              "\n(e) Local Demand Control based on air quality sensors (CO2, VOC,...) "
                              "with local flow from/to the zone regulated by dampers. "
                              "\n[a/b/c/d/e]? : ")
                if VE1LE in ['a', 'b', 'c', 'd', 'e']:
                    # if it was equal - break from the while loop
                    break

            if VE1LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 0
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 0
                VE1LE_Convenience = 0
                VE1LE_WellbeingAndHealth = 0
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 1
                VE1LE_Convenience = 1
                VE1LE_WellbeingAndHealth = 1
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 1
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 2
                VE1LE_Convenience = 2
                VE1LE_WellbeingAndHealth = 2
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 2
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            elif VE1LE == "e":
                print("")
                print("Level 4")
                print("")
                print("IMPACTS")
                print("")

                VE1LE_EnergySavings = 3
                VE1LE_Flexibility = 0
                VE1LE_Comfort = 3
                VE1LE_Convenience = 3
                VE1LE_WellbeingAndHealth = 3
                VE1LE_Maintenance = 0
                VE1LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE1LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
                print("Comfort: " + str(VE1LE_Comfort))
                print("Convenience: " + str(VE1LE_Convenience))
                print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
                print("Information to occupants: " + str(VE1LE_InformationToOccupants))
                print("")

            print("")
            # Ventilation-S3
            print("Ventilation 2 Reporting information regarding IAQ")
            print("")

            while True:
                VE21LE = input("Choose:\n(a) None."
                               "\n(b) Air quality sensors (e.g. CO2) and real time autonomous monitoring."
                               "\n(c) Real time monitoring & historical information of IAQ available to occupants."
                               "\n(d) Real time monitoring & historical information of IAQ available to occupants + "
                               "warning on maintenance needs or occupant actions (e.g. window opening). \n[a/b/c/d]? : ")
                if VE21LE in ['a', 'b', 'c', 'd']:
                    # if it was equal - break from the while loop
                    break

            if VE21LE == "a":
                print("")
                print("Level 0")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 0
                VE2LE_InformationToOccupants = 0

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "b":
                print("")
                print("Level 1")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 1

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "c":
                print("")
                print("Level 2")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 2

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            elif VE21LE == "d":
                print("")
                print("Level 3")
                print("")
                print("IMPACTS")
                print("")

                VE2LE_EnergySavings = 0
                VE2LE_Flexibility = 0
                VE2LE_Comfort = 0
                VE2LE_Convenience = 0
                VE2LE_WellbeingAndHealth = 0
                VE2LE_Maintenance = 1
                VE2LE_InformationToOccupants = 3

                print("Energy savings on site: " + str(VE2LE_EnergySavings))
                print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
                print("Comfort: " + str(VE2LE_Comfort))
                print("Convenience: " + str(VE2LE_Convenience))
                print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
                print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
                print("Information to occupants: " + str(VE2LE_InformationToOccupants))
                print("")

            # domain_weightings
            # Controlled Ventilation
            VE_WE_energy_savings = 11
            VE_WE_flexibility = 13
            VE_WE_comfort = 17
            VE_WE_convenience = 11
            VE_WE_wellbeing_and_health = 50
            VE_WE_maintenance = 14
            VE_WE_information_to_occupants = 13

            # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
            IM_energy_savings_on_site = 0.14
            IM_flexibility_for_the_grid_and_storage = 0.14
            IM_comfort = 0.14
            IM_convenience = 0.14
            IM_wellbeing_and_health = 0.14
            IM_maintenance_and_fault_prediction = 0.14
            IM_information_to_occupants = 0.14

            # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
            # Ventilation
            # VE 1
            VE1_impact_weighting_energy_saving = VE1LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_impact_weighting_flexibility_for_the_grid_and_storage = VE1LE_Flexibility * (VE_WE_flexibility / 100)
            VE1_impact_weighting_comfort = VE1LE_Comfort * (VE_WE_comfort / 100)
            VE1_impact_weighting_convenience = VE1LE_Convenience * (VE_WE_convenience / 100)
            VE1_impact_weighting_wellbeing_and_health = VE1LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_impact_weighting_maintenance_and_fault_prediction = VE1LE_Maintenance * (VE_WE_maintenance / 100)
            VE1_impact_weighting_information_to_occupants = VE1LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE1_impact_scores_energy_saving = VE1_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE1_impact_scores_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE1_impact_scores_comfort = VE1_impact_weighting_comfort * IM_energy_savings_on_site

            VE1_impact_scores_convenience = VE1_impact_weighting_convenience * IM_energy_savings_on_site

            VE1_impact_scores_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE1_impact_scores_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE1_impact_scores_information_to_occupants = VE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE1LE_Max_EnergySavings = 3
            VE1LE_Max_Flexibility = 0
            VE1LE_Max_Comfort = 3
            VE1LE_Max_Convenience = 3
            VE1LE_Max_WellbeingAndHealth = 3
            VE1LE_Max_Maintenance = 0
            VE1LE_Max_InformationToOccupants = 0

            # Maximum possible SRI impact scores by domain
            VE1_Max_SRI_IM_Scores_EnergySavings = VE1LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE1_Max_SRI_IM_Scores_Flexibility = VE1LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE1_Max_SRI_IM_Scores_Comfort = VE1LE_Max_Comfort * (VE_WE_comfort / 100)
            VE1_Max_SRI_IM_Scores_Convenience = VE1LE_Max_Convenience * (VE_WE_convenience / 100)
            VE1_Max_SRI_IM_Scores_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE1_Max_SRI_IM_Scores_Maintenance = VE1LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE1_Max_SRI_IM_Scores_InformationToOccupants = VE1LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE1_Max_impact_scores_energy_saving = VE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE1_Max_impact_scores_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE1_Max_impact_scores_comfort = VE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE1_Max_impact_scores_convenience = VE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE1_Max_impact_scores_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE1_Max_impact_scores_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE1_Max_impact_scores_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            ######################################################################################################################
            # VE 2
            VE2_impact_weighting_energy_saving = VE2LE_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_impact_weighting_flexibility_for_the_grid_and_storage = VE2LE_Flexibility * (VE_WE_flexibility / 100)
            VE2_impact_weighting_comfort = VE2LE_Comfort * (VE_WE_comfort / 100)
            VE2_impact_weighting_convenience = VE2LE_Convenience * (VE_WE_convenience / 100)
            VE2_impact_weighting_wellbeing_and_health = VE2LE_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_impact_weighting_maintenance_and_fault_prediction = VE2LE_Maintenance * (VE_WE_maintenance / 100)
            VE2_impact_weighting_information_to_occupants = VE2LE_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # SRI impact scores by domain after impact weightings also applied
            VE2_impact_scores_energy_saving = VE2_impact_weighting_energy_saving * IM_energy_savings_on_site

            VE2_impact_scores_flexibility_for_the_grid_and_storage = VE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                     * IM_energy_savings_on_site

            VE2_impact_scores_comfort = VE2_impact_weighting_comfort * IM_energy_savings_on_site

            VE2_impact_scores_convenience = VE2_impact_weighting_convenience * IM_energy_savings_on_site

            VE2_impact_scores_wellbeing_and_health = VE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

            VE2_impact_scores_maintenance_and_fault_prediction = VE2_impact_weighting_maintenance_and_fault_prediction \
                                                                 * IM_energy_savings_on_site

            VE2_impact_scores_information_to_occupants = VE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

            # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
            VE2LE_Max_EnergySavings = 0
            VE2LE_Max_Flexibility = 0
            VE2LE_Max_Comfort = 0
            VE2LE_Max_Convenience = 1
            VE2LE_Max_WellbeingAndHealth = 0
            VE2LE_Max_Maintenance = 2
            VE2LE_Max_InformationToOccupants = 3

            # Maximum possible SRI impact scores by domain
            VE2_Max_SRI_IM_Scores_EnergySavings = VE2LE_Max_EnergySavings * (VE_WE_energy_savings / 100)
            VE2_Max_SRI_IM_Scores_Flexibility = VE2LE_Max_Flexibility * (VE_WE_flexibility / 100)
            VE2_Max_SRI_IM_Scores_Comfort = VE2LE_Max_Comfort * (VE_WE_comfort / 100)
            VE2_Max_SRI_IM_Scores_Convenience = VE2LE_Max_Convenience * (VE_WE_convenience / 100)
            VE2_Max_SRI_IM_Scores_WellbeingAndHealth = VE2LE_Max_WellbeingAndHealth * (VE_WE_wellbeing_and_health / 100)
            VE2_Max_SRI_IM_Scores_Maintenance = VE2LE_Max_Maintenance * (VE_WE_maintenance / 100)
            VE2_Max_SRI_IM_Scores_InformationToOccupants = VE2LE_Max_InformationToOccupants * (
                        VE_WE_information_to_occupants / 100)

            # Maximum SRI impact scores by domain after impact weightings also applied
            VE2_Max_impact_scores_energy_saving = VE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

            VE2_Max_impact_scores_flexibility_for_the_grid_and_storage = VE2_Max_SRI_IM_Scores_Flexibility * \
                                                                         IM_energy_savings_on_site

            VE2_Max_impact_scores_comfort = VE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

            VE2_Max_impact_scores_convenience = VE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

            VE2_Max_impact_scores_wellbeing_and_health = VE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

            VE2_Max_impact_scores_maintenance_and_fault_prediction = VE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

            VE2_Max_impact_scores_information_to_occupants = VE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                             IM_energy_savings_on_site

            # SUM ORDINAL SCORES
            sum_VE_OR_SC_EnergySavings = VE1LE_EnergySavings + VE2LE_EnergySavings

            sum_VE_OR_SC_Flexibility = VE1LE_Flexibility + VE2LE_Flexibility

            sum_VE_OR_SC_Comfort = VE1LE_Comfort + VE2LE_Comfort

            sum_VE_OR_SC_Convenience = VE1LE_Convenience + VE2LE_Convenience

            sum_VE_OR_SC_WellbeingAndHealth = VE1LE_WellbeingAndHealth + VE2LE_WellbeingAndHealth

            sum_VE_OR_SC_Maintenance = VE1LE_Maintenance + VE2LE_Maintenance

            sum_VE_OR_SC_InformationToOccupants = VE1LE_InformationToOccupants + VE2LE_InformationToOccupants

            # SUM IMPACT SCORES BY DOMAIN
            sum_VE_IM_WE_energy_savings = VE1_impact_weighting_energy_saving + VE2_impact_weighting_energy_saving

            sum_VE_IM_WE_flexibility_for_the_grid_and_storage = VE1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                                VE2_impact_weighting_flexibility_for_the_grid_and_storage

            sum_VE_IM_WE_comfort = VE1_impact_weighting_comfort + VE2_impact_weighting_comfort

            sum_VE_IM_WE_convenience = VE1_impact_weighting_convenience + VE2_impact_weighting_convenience

            sum_VE_IM_WE_wellbeing_and_health = VE1_impact_weighting_wellbeing_and_health + \
                                                VE2_impact_weighting_wellbeing_and_health

            sum_VE_IM_WE_maintenance_and_fault_prediction = VE1_impact_weighting_maintenance_and_fault_prediction + \
                                                            VE2_impact_weighting_maintenance_and_fault_prediction

            sum_VE_IM_WE_information_to_occupants = VE1_impact_weighting_information_to_occupants + \
                                                    VE2_impact_weighting_information_to_occupants

            # SUM SRI impact scores by domain after impact weightings also applied
            sum_VE_IM_SC_energy_savings = VE1_impact_scores_energy_saving + VE2_impact_scores_energy_saving

            sum_VE_IM_flexibility_for_the_grid_and_storage = VE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             VE2_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_IM_SC_comfort = VE1_impact_scores_comfort + VE2_impact_scores_comfort

            sum_VE_IM_SC_convenience = VE1_impact_scores_convenience + VE2_impact_scores_convenience

            sum_VE_IM_SC_wellbeing_and_health = VE1_impact_scores_wellbeing_and_health + VE2_impact_scores_wellbeing_and_health

            sum_VE_IM_SC_maintenance_and_fault_prediction = VE1_impact_scores_maintenance_and_fault_prediction + \
                                                            VE2_impact_scores_maintenance_and_fault_prediction

            sum_VE_IM_SC_information_to_occupants = VE1_impact_scores_information_to_occupants + \
                                                    VE2_impact_scores_information_to_occupants

            # TOTAL
            total_VE_sum_IM_SC = sum_VE_IM_SC_energy_savings + sum_VE_IM_flexibility_for_the_grid_and_storage + \
                                 sum_VE_IM_SC_comfort + sum_VE_IM_SC_convenience + sum_VE_IM_SC_wellbeing_and_health + \
                                 sum_VE_IM_SC_maintenance_and_fault_prediction + sum_VE_IM_SC_information_to_occupants

            # SUM MAX ORDINAL SCORES
            sum_VE_MAX_OR_SC_EnergySavings = VE1LE_Max_EnergySavings + VE2LE_Max_EnergySavings

            sum_VE_MAX_OR_SC_Flexibility = VE1LE_Max_Flexibility + VE2LE_Max_Flexibility

            sum_VE_MAX_OR_SC_Comfort = VE1LE_Max_Comfort + VE2LE_Max_Comfort

            sum_VE_MAX_OR_SC_Convenience = VE1LE_Max_Convenience + VE2LE_Max_Convenience

            sum_VE_MAX_OR_SC_WellbeingAndHealth = VE1LE_Max_WellbeingAndHealth + VE2LE_Max_WellbeingAndHealth

            sum_VE_MAX_OR_SC_Maintenance = VE1LE_Max_Maintenance + VE2LE_Max_Maintenance

            sum_VE_MAX_OR_SC_InformationToOccupants = VE1LE_Max_InformationToOccupants + VE2LE_Max_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain
            sum_VE_MAX_IM_WE_energy_savings = VE1_Max_SRI_IM_Scores_EnergySavings + VE2_Max_SRI_IM_Scores_EnergySavings

            sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage = VE1_Max_SRI_IM_Scores_Flexibility + \
                                                                    VE2_Max_SRI_IM_Scores_Flexibility

            sum_VE_MAX_IM_WE_comfort = VE1_Max_SRI_IM_Scores_Comfort + VE2_Max_SRI_IM_Scores_Comfort

            sum_VE_MAX_IM_WE_convenience = VE1_Max_SRI_IM_Scores_Convenience + VE2_Max_SRI_IM_Scores_Convenience

            sum_VE_MAX_IM_WE_wellbeing_and_health = VE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                    VE2_Max_SRI_IM_Scores_WellbeingAndHealth

            sum_VE_MAX_IM_WE_maintenance_and_fault_prediction = VE1_Max_SRI_IM_Scores_Maintenance + \
                                                                VE2_Max_SRI_IM_Scores_Maintenance

            sum_VE_MAX_IM_WE_information_to_occupants = VE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                        VE2_Max_SRI_IM_Scores_InformationToOccupants

            # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
            sum_VE_MAX_IM_SC_energy_savings = VE1_Max_impact_scores_energy_saving + VE2_Max_impact_scores_energy_saving

            sum_VE_MAX_IM_flexibility_for_the_grid_and_storage = VE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                                 VE2_Max_impact_scores_flexibility_for_the_grid_and_storage

            sum_VE_MAX_IM_SC_comfort = VE1_Max_impact_scores_comfort + VE2_Max_impact_scores_comfort

            sum_VE_MAX_IM_SC_convenience = VE1_Max_impact_scores_convenience + VE2_Max_impact_scores_convenience

            sum_VE_MAX_IM_SC_wellbeing_and_health = VE1_Max_impact_scores_wellbeing_and_health + \
                                                    VE2_impact_scores_wellbeing_and_health

            sum_VE_MAX_IM_SC_maintenance_and_fault_prediction = VE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                                VE2_Max_impact_scores_maintenance_and_fault_prediction

            sum_VE_MAX_IM_SC_information_to_occupants = VE1_Max_impact_scores_information_to_occupants + \
                                                        VE2_Max_impact_scores_information_to_occupants

            # TOTAL MAX
            total_VE_MAX_sum_IM_SC = sum_VE_MAX_IM_SC_energy_savings + sum_VE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                     sum_VE_MAX_IM_SC_comfort + sum_VE_MAX_IM_SC_convenience + sum_VE_MAX_IM_SC_wellbeing_and_health + \
                                     sum_VE_MAX_IM_SC_maintenance_and_fault_prediction + sum_VE_MAX_IM_SC_information_to_occupants


    elif ST == "b":
        print("")
        # Ventilation-S1
        print("Ventilation 1 Air flow control at the room level")
        print("")

        while True:
            VE1LE = input("Choose:\n(a) No ventilation system or manual control."
                          "\n(b) Clock control."
                          "\n(c) Occupancy detection control."
                          "\n(d) Central Demand Control based on air quality sensors (CO2, VOC, humidity, ...)."
                          "\n(e) Local Demand Control based on air quality sensors (CO2, VOC,...) "
                          "with local flow from/to the zone regulated by dampers. "
                          "\n[a/b/c/d/e]? : ")
            if VE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if VE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            VE1LE_EnergySavings = 0
            VE1LE_Flexibility = 0
            VE1LE_Comfort = 0
            VE1LE_Convenience = 0
            VE1LE_WellbeingAndHealth = 0
            VE1LE_Maintenance = 0
            VE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(VE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
            print("Comfort: " + str(VE1LE_Comfort))
            print("Convenience: " + str(VE1LE_Convenience))
            print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
            print("Information to occupants: " + str(VE1LE_InformationToOccupants))
            print("")

        elif VE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            VE1LE_EnergySavings = 1
            VE1LE_Flexibility = 0
            VE1LE_Comfort = 1
            VE1LE_Convenience = 1
            VE1LE_WellbeingAndHealth = 1
            VE1LE_Maintenance = 0
            VE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(VE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
            print("Comfort: " + str(VE1LE_Comfort))
            print("Convenience: " + str(VE1LE_Convenience))
            print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
            print("Information to occupants: " + str(VE1LE_InformationToOccupants))
            print("")

        elif VE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            VE1LE_EnergySavings = 1
            VE1LE_Flexibility = 0
            VE1LE_Comfort = 2
            VE1LE_Convenience = 2
            VE1LE_WellbeingAndHealth = 2
            VE1LE_Maintenance = 0
            VE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(VE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
            print("Comfort: " + str(VE1LE_Comfort))
            print("Convenience: " + str(VE1LE_Convenience))
            print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
            print("Information to occupants: " + str(VE1LE_InformationToOccupants))
            print("")

        elif VE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            VE1LE_EnergySavings = 2
            VE1LE_Flexibility = 0
            VE1LE_Comfort = 3
            VE1LE_Convenience = 3
            VE1LE_WellbeingAndHealth = 3
            VE1LE_Maintenance = 0
            VE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(VE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
            print("Comfort: " + str(VE1LE_Comfort))
            print("Convenience: " + str(VE1LE_Convenience))
            print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
            print("Information to occupants: " + str(VE1LE_InformationToOccupants))
            print("")

        elif VE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            VE1LE_EnergySavings = 3
            VE1LE_Flexibility = 0
            VE1LE_Comfort = 3
            VE1LE_Convenience = 3
            VE1LE_WellbeingAndHealth = 3
            VE1LE_Maintenance = 0
            VE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(VE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE1LE_Flexibility))
            print("Comfort: " + str(VE1LE_Comfort))
            print("Convenience: " + str(VE1LE_Convenience))
            print("Health & wellbeing: " + str(VE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE1LE_Maintenance))
            print("Information to occupants: " + str(VE1LE_InformationToOccupants))
            print("")

        print("")
        # Ventilation-S3
        print("Ventilation 2 Reporting information regarding IAQ")
        print("")

        while True:
            VE21LE = input("Choose:\n(a) None."
                           "\n(b) Air quality sensors (e.g. CO2) and real time autonomous monitoring."
                           "\n(c) Real time monitoring & historical information of IAQ available to occupants."
                           "\n(d) Real time monitoring & historical information of IAQ available to occupants + "
                           "warning on maintenance needs or occupant actions (e.g. window opening). \n[a/b/c/d]? : ")
            if VE21LE in ['a', 'b', 'c', 'd']:
                # if it was equal - break from the while loop
                break

        if VE21LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            VE2LE_EnergySavings = 0
            VE2LE_Flexibility = 0
            VE2LE_Comfort = 0
            VE2LE_Convenience = 0
            VE2LE_WellbeingAndHealth = 0
            VE2LE_Maintenance = 0
            VE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(VE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
            print("Comfort: " + str(VE2LE_Comfort))
            print("Convenience: " + str(VE2LE_Convenience))
            print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
            print("Information to occupants: " + str(VE2LE_InformationToOccupants))
            print("")

        elif VE21LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            VE2LE_EnergySavings = 0
            VE2LE_Flexibility = 0
            VE2LE_Comfort = 0
            VE2LE_Convenience = 0
            VE2LE_WellbeingAndHealth = 0
            VE2LE_Maintenance = 1
            VE2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(VE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
            print("Comfort: " + str(VE2LE_Comfort))
            print("Convenience: " + str(VE2LE_Convenience))
            print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
            print("Information to occupants: " + str(VE2LE_InformationToOccupants))
            print("")

        elif VE21LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            VE2LE_EnergySavings = 0
            VE2LE_Flexibility = 0
            VE2LE_Comfort = 0
            VE2LE_Convenience = 0
            VE2LE_WellbeingAndHealth = 0
            VE2LE_Maintenance = 1
            VE2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(VE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
            print("Comfort: " + str(VE2LE_Comfort))
            print("Convenience: " + str(VE2LE_Convenience))
            print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
            print("Information to occupants: " + str(VE2LE_InformationToOccupants))
            print("")

        elif VE21LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            VE2LE_EnergySavings = 0
            VE2LE_Flexibility = 0
            VE2LE_Comfort = 0
            VE2LE_Convenience = 0
            VE2LE_WellbeingAndHealth = 0
            VE2LE_Maintenance = 1
            VE2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(VE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(VE2LE_Flexibility))
            print("Comfort: " + str(VE2LE_Comfort))
            print("Convenience: " + str(VE2LE_Convenience))
            print("Health & wellbeing: " + str(VE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(VE2LE_Maintenance))
            print("Information to occupants: " + str(VE2LE_InformationToOccupants))
            print("")

        sum_VE_EnergySavings = VE1LE_EnergySavings + VE2LE_EnergySavings
        print(sum_VE_EnergySavings)

        sum_VE_Flexibility = VE1LE_Flexibility + VE2LE_Flexibility
        print(sum_VE_Flexibility)

        sum_VE_Comfort = VE1LE_Comfort + VE2LE_Comfort
        print(sum_VE_Comfort)

        sum_VE_Convenience = VE1LE_Convenience + VE2LE_Convenience
        print(sum_VE_Convenience)

        sum_VE_Health_and_Wellbeing = VE1LE_WellbeingAndHealth + VE2LE_WellbeingAndHealth
        print(sum_VE_Health_and_Wellbeing)

        sum_VE_Maintenance = VE1LE_Maintenance + VE2LE_Maintenance
        print(sum_VE_Maintenance)

        sum_VE_Information_to_occupants = VE1LE_InformationToOccupants + VE2LE_InformationToOccupants
        print(sum_VE_Information_to_occupants)

if VE == "b":
    # SUM ORDINAL SCORES
    sum_VE_OR_SC_EnergySavings = 0
    sum_VE_OR_SC_Flexibility = 0
    sum_VE_OR_SC_Comfort = 0
    sum_VE_OR_SC_Convenience = 0
    sum_VE_OR_SC_WellbeingAndHealth = 0
    sum_VE_OR_SC_Maintenance = 0
    sum_VE_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_VE_IM_WE_energy_savings = 0
    sum_VE_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_VE_IM_WE_comfort = 0
    sum_VE_IM_WE_convenience = 0
    sum_VE_IM_WE_wellbeing_and_health = 0
    sum_VE_IM_WE_maintenance_and_fault_prediction = 0
    sum_VE_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_VE_IM_SC_energy_savings = 0
    sum_VE_IM_flexibility_for_the_grid_and_storage = 0
    sum_VE_IM_SC_comfort = 0
    sum_VE_IM_SC_convenience = 0
    sum_VE_IM_SC_wellbeing_and_health = 0
    sum_VE_IM_SC_maintenance_and_fault_prediction = 0
    sum_VE_IM_SC_information_to_occupants = 0

    # TOTAL
    total_VE_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_VE_MAX_OR_SC_EnergySavings = 0
    sum_VE_MAX_OR_SC_Flexibility = 0
    sum_VE_MAX_OR_SC_Comfort = 0
    sum_VE_MAX_OR_SC_Convenience = 0
    sum_VE_MAX_OR_SC_WellbeingAndHealth = 0
    sum_VE_MAX_OR_SC_Maintenance = 0
    sum_VE_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_VE_MAX_IM_WE_energy_savings = 0
    sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_VE_MAX_IM_WE_comfort = 0
    sum_VE_MAX_IM_WE_convenience = 0
    sum_VE_MAX_IM_WE_wellbeing_and_health = 0
    sum_VE_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_VE_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_VE_MAX_IM_SC_energy_savings = 0
    sum_VE_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_VE_MAX_IM_SC_comfort = 0
    sum_VE_MAX_IM_SC_convenience = 0
    sum_VE_MAX_IM_SC_wellbeing_and_health = 0
    sum_VE_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_VE_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_VE_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Lighting")
    print("Lighting 1 Occupancy control for indoor lighting")
    print("")
    LI = input("Lighting \n(a) yes \n(b) no \n[a/b]?: ")
    if LI in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if LI == "a":
    while True:
        print("")
        LI1LE = input("Choose: \n(a) Manual on/off switch."
                      "\n(b) Manual on/off switch + additional sweeping extinction signal."
                      "\n(c) Automatic detection (auto on / dimmed or auto off)."
                      "\n(d) Automatic detection (manual on / dimmed or auto off).\n[a/b/c/d]? : ")
        if LI1LE in ['a', 'b', 'c', 'd']:
            # if it was equal - break from the while loop
            break

    if LI1LE == "a":
        print("")
        print("Level 0")
        print("")
        print("IMPACTS")
        print("")

        LI1LE_EnergySavings = 0
        LI1LE_Flexibility = 0
        LI1LE_Comfort = 0
        LI1LE_Convenience = 0
        LI1LE_WellbeingAndHealth = 0
        LI1LE_Maintenance = 0
        LI1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(LI1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(LI1LE_Flexibility))
        print("Comfort: " + str(LI1LE_Comfort))
        print("Convenience: " + str(LI1LE_Convenience))
        print("Health & wellbeing: " + str(LI1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(LI1LE_Maintenance))
        print("Information to occupants: " + str(LI1LE_InformationToOccupants))
        print("")

    elif LI1LE == "b":
        print("")
        print("Level 1")
        print("")
        print("IMPACTS")
        print("")

        LI1LE_EnergySavings = 1
        LI1LE_Flexibility = 0
        LI1LE_Comfort = 1
        LI1LE_Convenience = 1
        LI1LE_WellbeingAndHealth = 0
        LI1LE_Maintenance = 0
        LI1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(LI1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(LI1LE_Flexibility))
        print("Comfort: " + str(LI1LE_Comfort))
        print("Convenience: " + str(LI1LE_Convenience))
        print("Health & wellbeing: " + str(LI1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(LI1LE_Maintenance))
        print("Information to occupants: " + str(LI1LE_InformationToOccupants))
        print("")

    elif LI1LE == "c":
        print("")
        print("Level 2")
        print("")
        print("IMPACTS")
        print("")

        LI1LE_EnergySavings = 2
        LI1LE_Flexibility = 0
        LI1LE_Comfort = 2
        LI1LE_Convenience = 2
        LI1LE_WellbeingAndHealth = 0
        LI1LE_Maintenance = 0
        LI1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(LI1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(LI1LE_Flexibility))
        print("Comfort: " + str(LI1LE_Comfort))
        print("Convenience: " + str(LI1LE_Convenience))
        print("Health & wellbeing: " + str(LI1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(LI1LE_Maintenance))
        print("Information to occupants: " + str(LI1LE_InformationToOccupants))
        print("")

    elif LI1LE == "d":
        print("")
        print("Level 3")
        print("")
        print("IMPACTS")
        print("")

        LI1LE_EnergySavings = 2
        LI1LE_Flexibility = 0
        LI1LE_Comfort = 2
        LI1LE_Convenience = 2
        LI1LE_WellbeingAndHealth = 0
        LI1LE_Maintenance = 0
        LI1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(LI1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(LI1LE_Flexibility))
        print("Comfort: " + str(LI1LE_Comfort))
        print("Convenience: " + str(LI1LE_Convenience))
        print("Health & wellbeing: " + str(LI1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(LI1LE_Maintenance))
        print("Information to occupants: " + str(LI1LE_InformationToOccupants))
        print("")

    # domain_weightings
    # Lighting
    LI_WE_energy_savings = 11
    LI_WE_flexibility = 0
    LI_WE_comfort = 17
    LI_WE_convenience = 11
    LI_WE_wellbeing_and_health = 0
    LI_WE_maintenance = 0
    LI_WE_information_to_occupants = 0

    # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
    IM_energy_savings_on_site = 0.14
    IM_flexibility_for_the_grid_and_storage = 0.14
    IM_comfort = 0.14
    IM_convenience = 0.14
    IM_wellbeing_and_health = 0.14
    IM_maintenance_and_fault_prediction = 0.14
    IM_information_to_occupants = 0.14

    # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
    # Lighting
    # LI1
    LI1_impact_weighting_energy_saving = LI1LE_EnergySavings * (LI_WE_energy_savings / 100)
    LI1_impact_weighting_flexibility_for_the_grid_and_storage = LI1LE_Flexibility * (LI_WE_flexibility / 100)
    LI1_impact_weighting_comfort = LI1LE_Comfort * (LI_WE_comfort / 100)
    LI1_impact_weighting_convenience = LI1LE_Convenience * (LI_WE_convenience / 100)
    LI1_impact_weighting_wellbeing_and_health = LI1LE_WellbeingAndHealth * (LI_WE_wellbeing_and_health / 100)
    LI1_impact_weighting_maintenance_and_fault_prediction = LI1LE_Maintenance * (LI_WE_maintenance / 100)
    LI1_impact_weighting_information_to_occupants = LI1LE_InformationToOccupants * (
                LI_WE_information_to_occupants / 100)

    # SRI impact scores by domain after impact weightings also applied
    LI1_impact_scores_energy_saving = LI1_impact_weighting_energy_saving * IM_energy_savings_on_site

    LI1_impact_scores_flexibility_for_the_grid_and_storage = LI1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                             * IM_energy_savings_on_site

    LI1_impact_scores_comfort = LI1_impact_weighting_comfort * IM_energy_savings_on_site

    LI1_impact_scores_convenience = LI1_impact_weighting_convenience * IM_energy_savings_on_site

    LI1_impact_scores_wellbeing_and_health = LI1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

    LI1_impact_scores_maintenance_and_fault_prediction = LI1_impact_weighting_maintenance_and_fault_prediction \
                                                         * IM_energy_savings_on_site

    LI1_impact_scores_information_to_occupants = LI1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

    # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
    LI1LE_Max_EnergySavings = 2
    LI1LE_Max_Flexibility = 0
    LI1LE_Max_Comfort = 2
    LI1LE_Max_Convenience = 2
    LI1LE_Max_WellbeingAndHealth = 0
    LI1LE_Max_Maintenance = 0
    LI1LE_Max_InformationToOccupants = 0

    # Maximum possible SRI impact scores by domain
    LI1_Max_SRI_IM_Scores_EnergySavings = LI1LE_Max_EnergySavings * (LI_WE_energy_savings / 100)
    LI1_Max_SRI_IM_Scores_Flexibility = LI1LE_Max_Flexibility * (LI_WE_flexibility / 100)
    LI1_Max_SRI_IM_Scores_Comfort = LI1LE_Max_Comfort * (LI_WE_comfort / 100)
    LI1_Max_SRI_IM_Scores_Convenience = LI1LE_Max_Convenience * (LI_WE_convenience / 100)
    LI1_Max_SRI_IM_Scores_WellbeingAndHealth = LI1LE_Max_WellbeingAndHealth * (LI_WE_wellbeing_and_health / 100)
    LI1_Max_SRI_IM_Scores_Maintenance = LI1LE_Max_Maintenance * (LI_WE_maintenance / 100)
    LI1_Max_SRI_IM_Scores_InformationToOccupants = LI1LE_Max_InformationToOccupants * (
                LI_WE_information_to_occupants / 100)

    # Maximum SRI impact scores by domain after impact weightings also applied
    LI1_Max_impact_scores_energy_saving = LI1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

    LI1_Max_impact_scores_flexibility_for_the_grid_and_storage = LI1_Max_SRI_IM_Scores_Flexibility * \
                                                                 IM_energy_savings_on_site

    LI1_Max_impact_scores_comfort = LI1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

    LI1_Max_impact_scores_convenience = LI1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

    LI1_Max_impact_scores_wellbeing_and_health = LI1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

    LI1_Max_impact_scores_maintenance_and_fault_prediction = LI1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

    LI1_Max_impact_scores_information_to_occupants = LI1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                     IM_energy_savings_on_site

    # SUM ORDINAL SCORES
    sum_LI_OR_SC_EnergySavings = LI1LE_EnergySavings

    sum_LI_OR_SC_Flexibility = LI1LE_Flexibility

    sum_LI_OR_SC_Comfort = LI1LE_Comfort

    sum_LI_OR_SC_Convenience = LI1LE_Convenience

    sum_LI_OR_SC_WellbeingAndHealth = LI1LE_WellbeingAndHealth

    sum_LI_OR_SC_Maintenance = LI1LE_Maintenance

    sum_LI_OR_SC_InformationToOccupants = LI1LE_InformationToOccupants

    # SUM IMPACT SCORES BY DOMAIN
    sum_LI_IM_WE_energy_savings = LI1_impact_weighting_energy_saving

    sum_LI_IM_WE_flexibility_for_the_grid_and_storage = LI1_impact_weighting_flexibility_for_the_grid_and_storage

    sum_LI_IM_WE_comfort = LI1_impact_weighting_comfort

    sum_LI_IM_WE_convenience = LI1_impact_weighting_convenience

    sum_LI_IM_WE_wellbeing_and_health = LI1_impact_weighting_wellbeing_and_health

    sum_LI_IM_WE_maintenance_and_fault_prediction = LI1_impact_weighting_maintenance_and_fault_prediction

    sum_LI_IM_WE_information_to_occupants = LI1_impact_weighting_information_to_occupants

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_LI_IM_SC_energy_savings = LI1_impact_scores_energy_saving

    sum_LI_IM_flexibility_for_the_grid_and_storage = LI1_impact_scores_flexibility_for_the_grid_and_storage

    sum_LI_IM_SC_comfort = LI1_impact_scores_comfort

    sum_LI_IM_SC_convenience = LI1_impact_scores_convenience

    sum_LI_IM_SC_wellbeing_and_health = LI1_impact_scores_wellbeing_and_health

    sum_LI_IM_SC_maintenance_and_fault_prediction = LI1_impact_scores_maintenance_and_fault_prediction

    sum_LI_IM_SC_information_to_occupants = LI1_impact_scores_information_to_occupants

    # TOTAL
    total_LI_sum_IM_SC = sum_LI_IM_SC_energy_savings + sum_LI_IM_flexibility_for_the_grid_and_storage + \
                         sum_LI_IM_SC_comfort + sum_LI_IM_SC_convenience + sum_LI_IM_SC_wellbeing_and_health + \
                         sum_LI_IM_SC_maintenance_and_fault_prediction + sum_LI_IM_SC_information_to_occupants

    # SUM MAX ORDINAL SCORES
    sum_LI_MAX_OR_SC_EnergySavings = LI1LE_Max_EnergySavings

    sum_LI_MAX_OR_SC_Flexibility = LI1LE_Max_Flexibility

    sum_LI_MAX_OR_SC_Comfort = LI1LE_Max_Comfort

    sum_LI_MAX_OR_SC_Convenience = LI1LE_Max_Convenience

    sum_LI_MAX_OR_SC_WellbeingAndHealth = LI1LE_Max_WellbeingAndHealth

    sum_LI_MAX_OR_SC_Maintenance = LI1LE_Max_Maintenance

    sum_LI_MAX_OR_SC_InformationToOccupants = LI1LE_Max_InformationToOccupants

    # SUM Maximum possible SRI impact scores by domain
    sum_LI_MAX_IM_WE_energy_savings = LI1_Max_SRI_IM_Scores_EnergySavings

    sum_LI_MAX_IM_WE_flexibility_for_the_grid_and_storage = LI1_Max_SRI_IM_Scores_Flexibility

    sum_LI_MAX_IM_WE_comfort = LI1_Max_SRI_IM_Scores_Comfort

    sum_LI_MAX_IM_WE_convenience = LI1_Max_SRI_IM_Scores_Convenience

    sum_LI_MAX_IM_WE_wellbeing_and_health = LI1_Max_SRI_IM_Scores_WellbeingAndHealth

    sum_LI_MAX_IM_WE_maintenance_and_fault_prediction = LI1_Max_SRI_IM_Scores_Maintenance

    sum_LI_MAX_IM_WE_information_to_occupants = LI1_Max_SRI_IM_Scores_InformationToOccupants

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_LI_MAX_IM_SC_energy_savings = LI1_Max_impact_scores_energy_saving

    sum_LI_MAX_IM_flexibility_for_the_grid_and_storage = LI1_Max_impact_scores_flexibility_for_the_grid_and_storage

    sum_LI_MAX_IM_SC_comfort = LI1_Max_impact_scores_comfort

    sum_LI_MAX_IM_SC_convenience = LI1_Max_impact_scores_convenience

    sum_LI_MAX_IM_SC_wellbeing_and_health = LI1_Max_impact_scores_wellbeing_and_health

    sum_LI_MAX_IM_SC_maintenance_and_fault_prediction = LI1_Max_impact_scores_maintenance_and_fault_prediction

    sum_LI_MAX_IM_SC_information_to_occupants = LI1_Max_impact_scores_information_to_occupants

    # TOTAL MAX
    total_LI_MAX_sum_IM_SC = sum_LI_MAX_IM_SC_energy_savings + sum_LI_MAX_IM_flexibility_for_the_grid_and_storage + \
                             sum_LI_MAX_IM_SC_comfort + sum_LI_MAX_IM_SC_convenience + sum_LI_MAX_IM_SC_wellbeing_and_health + \
                             sum_LI_MAX_IM_SC_maintenance_and_fault_prediction + sum_LI_MAX_IM_SC_information_to_occupants

if LI == "b":
    # SUM ORDINAL SCORES
    sum_LI_OR_SC_EnergySavings = 0
    sum_LI_OR_SC_Flexibility = 0
    sum_LI_OR_SC_Comfort = 0
    sum_LI_OR_SC_Convenience = 0
    sum_LI_OR_SC_WellbeingAndHealth = 0
    sum_LI_OR_SC_Maintenance = 0
    sum_LI_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_LI_IM_WE_energy_savings = 0
    sum_LI_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_LI_IM_WE_comfort = 0
    sum_LI_IM_WE_convenience = 0
    sum_LI_IM_WE_wellbeing_and_health = 0
    sum_LI_IM_WE_maintenance_and_fault_prediction = 0
    sum_LI_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_LI_IM_SC_energy_savings = 0
    sum_LI_IM_flexibility_for_the_grid_and_storage = 0
    sum_LI_IM_SC_comfort = 0
    sum_LI_IM_SC_convenience = 0
    sum_LI_IM_SC_wellbeing_and_health = 0
    sum_LI_IM_SC_maintenance_and_fault_prediction = 0
    sum_LI_IM_SC_information_to_occupants = 0

    # TOTAL
    total_LI_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_LI_MAX_OR_SC_EnergySavings = 0
    sum_LI_MAX_OR_SC_Flexibility = 0
    sum_LI_MAX_OR_SC_Comfort = 0
    sum_LI_MAX_OR_SC_Convenience = 0
    sum_LI_MAX_OR_SC_WellbeingAndHealth = 0
    sum_LI_MAX_OR_SC_Maintenance = 0
    sum_LI_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_LI_MAX_IM_WE_energy_savings = 0
    sum_LI_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_LI_MAX_IM_WE_comfort = 0
    sum_LI_MAX_IM_WE_convenience = 0
    sum_LI_MAX_IM_WE_wellbeing_and_health = 0
    sum_LI_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_LI_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_LI_MAX_IM_SC_energy_savings = 0
    sum_LI_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_LI_MAX_IM_SC_comfort = 0
    sum_LI_MAX_IM_SC_convenience = 0
    sum_LI_MAX_IM_SC_wellbeing_and_health = 0
    sum_LI_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_LI_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_LI_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Dynamic envelope")
    print("")
    DE = input("Dynamic envelope \n(a) yes \n(b) no \n[a/b]?: ")

    if DE in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if DE == "a":
    while True:
        print("")
        MS = input("Movable shades, screens or blinds \n(a) Present."
                   "\n(b) Not present. \n[a/b]? :")
        if MS in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if MS == "a":
        print("")
        # DE-S1
        print("Window solar shading control")
        print("")

        while True:
            DE1LE = input("Choose:\n(a) No sun shading or only manual operation."
                          "\n(b) Motorized operation with manual control."
                          "\n(c) Motorized operation with automatic control based on sensor data."
                          "\n(d) Combined light/blind/HVAC control."
                          "\n(e) Predictive blind control (e.g. based on weather forecast). \n[a/b/c/d/e]? : ")
            if DE1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if DE1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            DE1LE_EnergySavings = 0
            DE1LE_Flexibility = 0
            DE1LE_Comfort = 0
            DE1LE_Convenience = 0
            DE1LE_WellbeingAndHealth = 0
            DE1LE_Maintenance = 0
            DE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(DE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE1LE_Flexibility))
            print("Comfort: " + str(DE1LE_Comfort))
            print("Convenience: " + str(DE1LE_Convenience))
            print("Health & wellbeing: " + str(DE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE1LE_Maintenance))
            print("Information to occupants: " + str(DE1LE_InformationToOccupants))
            print("")

        elif DE1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            DE1LE_EnergySavings = 1
            DE1LE_Flexibility = 0
            DE1LE_Comfort = 0
            DE1LE_Convenience = 0
            DE1LE_WellbeingAndHealth = 0
            DE1LE_Maintenance = 1
            DE1LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(DE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE1LE_Flexibility))
            print("Comfort: " + str(DE1LE_Comfort))
            print("Convenience: " + str(DE1LE_Convenience))
            print("Health & wellbeing: " + str(DE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE1LE_Maintenance))
            print("Information to occupants: " + str(DE1LE_InformationToOccupants))
            print("")

        elif DE1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            DE1LE_EnergySavings = 2
            DE1LE_Flexibility = 0
            DE1LE_Comfort = 1
            DE1LE_Convenience = 2
            DE1LE_WellbeingAndHealth = 1
            DE1LE_Maintenance = 0
            DE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(DE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE1LE_Flexibility))
            print("Comfort: " + str(DE1LE_Comfort))
            print("Convenience: " + str(DE1LE_Convenience))
            print("Health & wellbeing: " + str(DE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE1LE_Maintenance))
            print("Information to occupants: " + str(DE1LE_InformationToOccupants))
            print("")

        elif DE1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            DE1LE_EnergySavings = 3
            DE1LE_Flexibility = 0
            DE1LE_Comfort = 2
            DE1LE_Convenience = 3
            DE1LE_WellbeingAndHealth = 1
            DE1LE_Maintenance = 0
            DE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(DE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE1LE_Flexibility))
            print("Comfort: " + str(DE1LE_Comfort))
            print("Convenience: " + str(DE1LE_Convenience))
            print("Health & wellbeing: " + str(DE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE1LE_Maintenance))
            print("Information to occupants: " + str(DE1LE_InformationToOccupants))
            print("")

        elif DE1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            DE1LE_EnergySavings = 3
            DE1LE_Flexibility = 0
            DE1LE_Comfort = 3
            DE1LE_Convenience = 3
            DE1LE_WellbeingAndHealth = 1
            DE1LE_Maintenance = 0
            DE1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(DE1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE1LE_Flexibility))
            print("Comfort: " + str(DE1LE_Comfort))
            print("Convenience: " + str(DE1LE_Convenience))
            print("Health & wellbeing: " + str(DE1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE1LE_Maintenance))
            print("Information to occupants: " + str(DE1LE_InformationToOccupants))
            print("")

        # DE-S3
        print("Reporting information regarding performance of dynamic building envelope systems")
        print("")

        while True:
            DE2LE = input("Choose:\n(a) No reporting."
                          "\n(b) Position of each product & fault detection."
                          "\n(c) Position of each product, fault detection & predictive maintenance."
                          "\n(d) Position of each product, fault detection, predictive maintenance,"
                          " real-time sensor data (wind, lux, temperature…)."
                          "\n(e) Position of each product, fault detection, predictive maintenance,"
                          " real-time & historical sensor data (wind, lux, temperature…)."
                          "\n[a/b/c/d/e?] : ")
            if DE2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if DE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 0
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 0
            DE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 1
            DE2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 1
            DE2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 1
            DE2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 1
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 2
            DE2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Dynamic Envelope
        DE_WE_energy_savings = 11
        DE_WE_flexibility = 13
        DE_WE_comfort = 17
        DE_WE_convenience = 11
        DE_WE_wellbeing_and_health = 50
        DE_WE_maintenance = 14
        DE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Dynamic Envelope
        # DE1
        DE1_impact_weighting_energy_saving = DE1LE_EnergySavings * (DE_WE_energy_savings / 100)
        DE1_impact_weighting_flexibility_for_the_grid_and_storage = DE1LE_Flexibility * (DE_WE_flexibility / 100)
        DE1_impact_weighting_comfort = DE1LE_Comfort * (DE_WE_comfort / 100)
        DE1_impact_weighting_convenience = DE1LE_Convenience * (DE_WE_convenience / 100)
        DE1_impact_weighting_wellbeing_and_health = DE1LE_WellbeingAndHealth * (DE_WE_wellbeing_and_health / 100)
        DE1_impact_weighting_maintenance_and_fault_prediction = DE1LE_Maintenance * (DE_WE_maintenance / 100)
        DE1_impact_weighting_information_to_occupants = DE1LE_InformationToOccupants * (
                    DE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        DE1_impact_scores_energy_saving = DE1_impact_weighting_energy_saving * IM_energy_savings_on_site

        DE1_impact_scores_flexibility_for_the_grid_and_storage = DE1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        DE1_impact_scores_comfort = DE1_impact_weighting_comfort * IM_energy_savings_on_site

        DE1_impact_scores_convenience = DE1_impact_weighting_convenience * IM_energy_savings_on_site

        DE1_impact_scores_wellbeing_and_health = DE1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        DE1_impact_scores_maintenance_and_fault_prediction = DE1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        DE1_impact_scores_information_to_occupants = DE1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        DE1LE_Max_EnergySavings = 3
        DE1LE_Max_Flexibility = 0
        DE1LE_Max_Comfort = 3
        DE1LE_Max_Convenience = 3
        DE1LE_Max_WellbeingAndHealth = 1
        DE1LE_Max_Maintenance = 0
        DE1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        DE1_Max_SRI_IM_Scores_EnergySavings = DE1LE_Max_EnergySavings * (DE_WE_energy_savings / 100)
        DE1_Max_SRI_IM_Scores_Flexibility = DE1LE_Max_Flexibility * (DE_WE_flexibility / 100)
        DE1_Max_SRI_IM_Scores_Comfort = DE1LE_Max_Comfort * (DE_WE_comfort / 100)
        DE1_Max_SRI_IM_Scores_Convenience = DE1LE_Max_Convenience * (DE_WE_convenience / 100)
        DE1_Max_SRI_IM_Scores_WellbeingAndHealth = DE1LE_Max_WellbeingAndHealth * (DE_WE_wellbeing_and_health / 100)
        DE1_Max_SRI_IM_Scores_Maintenance = DE1LE_Max_Maintenance * (DE_WE_maintenance / 100)
        DE1_Max_SRI_IM_Scores_InformationToOccupants = DE1LE_Max_InformationToOccupants * (
                    DE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        DE1_Max_impact_scores_energy_saving = DE1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        DE1_Max_impact_scores_flexibility_for_the_grid_and_storage = DE1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        DE1_Max_impact_scores_comfort = DE1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        DE1_Max_impact_scores_convenience = DE1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        DE1_Max_impact_scores_wellbeing_and_health = DE1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        DE1_Max_impact_scores_maintenance_and_fault_prediction = DE1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        DE1_Max_impact_scores_information_to_occupants = DE1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # DE2
        DE2_impact_weighting_energy_saving = DE2LE_EnergySavings * (DE_WE_energy_savings / 100)
        DE2_impact_weighting_flexibility_for_the_grid_and_storage = DE2LE_Flexibility * (DE_WE_flexibility / 100)
        DE2_impact_weighting_comfort = DE2LE_Comfort * (DE_WE_comfort / 100)
        DE2_impact_weighting_convenience = DE2LE_Convenience * (DE_WE_convenience / 100)
        DE2_impact_weighting_wellbeing_and_health = DE2LE_WellbeingAndHealth * (DE_WE_wellbeing_and_health / 100)
        DE2_impact_weighting_maintenance_and_fault_prediction = DE2LE_Maintenance * (DE_WE_maintenance / 100)
        DE2_impact_weighting_information_to_occupants = DE2LE_InformationToOccupants * (
                    DE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        DE2_impact_scores_energy_saving = DE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        DE2_impact_scores_flexibility_for_the_grid_and_storage = DE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        DE2_impact_scores_comfort = DE2_impact_weighting_comfort * IM_energy_savings_on_site

        DE2_impact_scores_convenience = DE2_impact_weighting_convenience * IM_energy_savings_on_site

        DE2_impact_scores_wellbeing_and_health = DE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        DE2_impact_scores_maintenance_and_fault_prediction = DE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        DE2_impact_scores_information_to_occupants = DE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        DE2LE_Max_EnergySavings = 1
        DE2LE_Max_Flexibility = 0
        DE2LE_Max_Comfort = 0
        DE2LE_Max_Convenience = 1
        DE2LE_Max_WellbeingAndHealth = 0
        DE2LE_Max_Maintenance = 2
        DE2LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        DE2_Max_SRI_IM_Scores_EnergySavings = DE2LE_Max_EnergySavings * (DE_WE_energy_savings / 100)
        DE2_Max_SRI_IM_Scores_Flexibility = DE2LE_Max_Flexibility * (DE_WE_flexibility / 100)
        DE2_Max_SRI_IM_Scores_Comfort = DE2LE_Max_Comfort * (DE_WE_comfort / 100)
        DE2_Max_SRI_IM_Scores_Convenience = DE2LE_Max_Convenience * (DE_WE_convenience / 100)
        DE2_Max_SRI_IM_Scores_WellbeingAndHealth = DE2LE_Max_WellbeingAndHealth * (DE_WE_wellbeing_and_health / 100)
        DE2_Max_SRI_IM_Scores_Maintenance = DE2LE_Max_Maintenance * (DE_WE_maintenance / 100)
        DE2_Max_SRI_IM_Scores_InformationToOccupants = DE2LE_Max_InformationToOccupants * (
                    DE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        DE2_Max_impact_scores_energy_saving = DE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        DE2_Max_impact_scores_flexibility_for_the_grid_and_storage = DE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        DE2_Max_impact_scores_comfort = DE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        DE2_Max_impact_scores_convenience = DE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        DE2_Max_impact_scores_wellbeing_and_health = DE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        DE2_Max_impact_scores_maintenance_and_fault_prediction = DE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        DE2_Max_impact_scores_information_to_occupants = DE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_DE_OR_SC_EnergySavings = DE1LE_EnergySavings + DE2LE_EnergySavings

        sum_DE_OR_SC_Flexibility = DE1LE_Flexibility + DE2LE_Flexibility

        sum_DE_OR_SC_Comfort = DE1LE_Comfort + DE2LE_Comfort

        sum_DE_OR_SC_Convenience = DE1LE_Convenience + DE2LE_Convenience

        sum_DE_OR_SC_WellbeingAndHealth = DE1LE_WellbeingAndHealth + DE2LE_WellbeingAndHealth

        sum_DE_OR_SC_Maintenance = DE1LE_Maintenance + DE2LE_Maintenance

        sum_DE_OR_SC_InformationToOccupants = DE1LE_InformationToOccupants + DE2LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_DE_IM_WE_energy_savings = DE1_impact_weighting_energy_saving + DE2_impact_weighting_energy_saving

        sum_DE_IM_WE_flexibility_for_the_grid_and_storage = DE1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            DE2_impact_weighting_flexibility_for_the_grid_and_storage

        sum_DE_IM_WE_comfort = DE1_impact_weighting_comfort + DE2_impact_weighting_comfort

        sum_DE_IM_WE_convenience = DE1_impact_weighting_convenience + DE2_impact_weighting_convenience

        sum_DE_IM_WE_wellbeing_and_health = DE1_impact_weighting_wellbeing_and_health + \
                                            DE2_impact_weighting_wellbeing_and_health

        sum_DE_IM_WE_maintenance_and_fault_prediction = DE1_impact_weighting_maintenance_and_fault_prediction + \
                                                        DE2_impact_weighting_maintenance_and_fault_prediction

        sum_DE_IM_WE_information_to_occupants = DE1_impact_weighting_information_to_occupants + \
                                                DE2_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_DE_IM_SC_energy_savings = DE1_impact_scores_energy_saving + DE2_impact_scores_energy_saving

        sum_DE_IM_flexibility_for_the_grid_and_storage = DE1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         DE2_impact_scores_flexibility_for_the_grid_and_storage

        sum_DE_IM_SC_comfort = DE1_impact_scores_comfort + DE2_impact_scores_comfort

        sum_DE_IM_SC_convenience = DE1_impact_scores_convenience + DE2_impact_scores_convenience

        sum_DE_IM_SC_wellbeing_and_health = DE1_impact_scores_wellbeing_and_health + DE2_impact_scores_wellbeing_and_health

        sum_DE_IM_SC_maintenance_and_fault_prediction = DE1_impact_scores_maintenance_and_fault_prediction + \
                                                        DE2_impact_scores_maintenance_and_fault_prediction

        sum_DE_IM_SC_information_to_occupants = DE1_impact_scores_information_to_occupants + \
                                                DE2_impact_scores_information_to_occupants

        # TOTAL
        total_DE_sum_IM_SC = sum_DE_IM_SC_energy_savings + sum_DE_IM_flexibility_for_the_grid_and_storage + \
                             sum_DE_IM_SC_comfort + sum_DE_IM_SC_convenience + sum_DE_IM_SC_wellbeing_and_health + \
                             sum_DE_IM_SC_maintenance_and_fault_prediction + sum_DE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_DE_MAX_OR_SC_EnergySavings = DE1LE_Max_EnergySavings + DE2LE_Max_EnergySavings

        sum_DE_MAX_OR_SC_Flexibility = DE1LE_Max_Flexibility + DE2LE_Max_Flexibility

        sum_DE_MAX_OR_SC_Comfort = DE1LE_Max_Comfort + DE2LE_Max_Comfort

        sum_DE_MAX_OR_SC_Convenience = DE1LE_Max_Convenience + DE2LE_Max_Convenience

        sum_DE_MAX_OR_SC_WellbeingAndHealth = DE1LE_Max_WellbeingAndHealth + DE2LE_Max_WellbeingAndHealth

        sum_DE_MAX_OR_SC_Maintenance = DE1LE_Max_Maintenance + DE2LE_Max_Maintenance

        sum_DE_MAX_OR_SC_InformationToOccupants = DE1LE_Max_InformationToOccupants + DE2LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_DE_MAX_IM_WE_energy_savings = DE1_Max_SRI_IM_Scores_EnergySavings + DE2_Max_SRI_IM_Scores_EnergySavings

        sum_DE_MAX_IM_WE_flexibility_for_the_grid_and_storage = DE1_Max_SRI_IM_Scores_Flexibility + \
                                                                DE2_Max_SRI_IM_Scores_Flexibility

        sum_DE_MAX_IM_WE_comfort = DE1_Max_SRI_IM_Scores_Comfort + DE2_Max_SRI_IM_Scores_Comfort

        sum_DE_MAX_IM_WE_convenience = DE1_Max_SRI_IM_Scores_Convenience + DE2_Max_SRI_IM_Scores_Convenience

        sum_DE_MAX_IM_WE_wellbeing_and_health = DE1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                DE2_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_DE_MAX_IM_WE_maintenance_and_fault_prediction = DE1_Max_SRI_IM_Scores_Maintenance + \
                                                            DE2_Max_SRI_IM_Scores_Maintenance

        sum_DE_MAX_IM_WE_information_to_occupants = DE1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    DE2_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_DE_MAX_IM_SC_energy_savings = DE1_Max_impact_scores_energy_saving + DE2_Max_impact_scores_energy_saving

        sum_DE_MAX_IM_flexibility_for_the_grid_and_storage = DE1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             DE2_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_DE_MAX_IM_SC_comfort = DE1_Max_impact_scores_comfort + DE2_Max_impact_scores_comfort

        sum_DE_MAX_IM_SC_convenience = DE1_Max_impact_scores_convenience + DE2_Max_impact_scores_convenience

        sum_DE_MAX_IM_SC_wellbeing_and_health = DE1_Max_impact_scores_wellbeing_and_health + \
                                                DE2_impact_scores_wellbeing_and_health

        sum_DE_MAX_IM_SC_maintenance_and_fault_prediction = DE1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            DE2_Max_impact_scores_maintenance_and_fault_prediction

        sum_DE_MAX_IM_SC_information_to_occupants = DE1_Max_impact_scores_information_to_occupants + \
                                                    DE2_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_DE_MAX_sum_IM_SC = sum_DE_MAX_IM_SC_energy_savings + sum_DE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_DE_MAX_IM_SC_comfort + sum_DE_MAX_IM_SC_convenience + sum_DE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_DE_MAX_IM_SC_maintenance_and_fault_prediction + sum_DE_MAX_IM_SC_information_to_occupants

    if MS == "b":
        # DE-S3
        print("Reporting information regarding performance of dynamic building envelope systems")
        print("")

        while True:
            DE2LE = input("Choose:\n(a) No reporting."
                          "\n(b) Position of each product & fault detection."
                          "\n(c) Position of each product, fault detection & predictive maintenance."
                          "\n(d) Position of each product, fault detection, predictive maintenance,"
                          " real-time sensor data (wind, lux, temperature…)."
                          "\n(e) Position of each product, fault detection, predictive maintenance,"
                          " real-time & historical sensor data (wind, lux, temperature…)."
                          "\n[a/b/c/d/e?] : ")
            if DE2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if DE2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 0
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 0
            DE2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 1
            DE2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 1
            DE2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 0
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 1
            DE2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        elif DE2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            DE2LE_EnergySavings = 1
            DE2LE_Flexibility = 0
            DE2LE_Comfort = 0
            DE2LE_Convenience = 1
            DE2LE_WellbeingAndHealth = 0
            DE2LE_Maintenance = 2
            DE2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(DE2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(DE2LE_Flexibility))
            print("Comfort: " + str(DE2LE_Comfort))
            print("Convenience: " + str(DE2LE_Convenience))
            print("Health & wellbeing: " + str(DE2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(DE2LE_Maintenance))
            print("Information to occupants: " + str(DE2LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Dynamic Envelope
        DE_WE_energy_savings = 11
        DE_WE_flexibility = 13
        DE_WE_comfort = 17
        DE_WE_convenience = 11
        DE_WE_wellbeing_and_health = 50
        DE_WE_maintenance = 14
        DE_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Dynamic Envelope
        # DE2
        DE2_impact_weighting_energy_saving = DE2LE_EnergySavings * (DE_WE_energy_savings / 100)
        DE2_impact_weighting_flexibility_for_the_grid_and_storage = DE2LE_Flexibility * (DE_WE_flexibility / 100)
        DE2_impact_weighting_comfort = DE2LE_Comfort * (DE_WE_comfort / 100)
        DE2_impact_weighting_convenience = DE2LE_Convenience * (DE_WE_convenience / 100)
        DE2_impact_weighting_wellbeing_and_health = DE2LE_WellbeingAndHealth * (DE_WE_wellbeing_and_health / 100)
        DE2_impact_weighting_maintenance_and_fault_prediction = DE2LE_Maintenance * (DE_WE_maintenance / 100)
        DE2_impact_weighting_information_to_occupants = DE2LE_InformationToOccupants * (
                    DE_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        DE2_impact_scores_energy_saving = DE2_impact_weighting_energy_saving * IM_energy_savings_on_site

        DE2_impact_scores_flexibility_for_the_grid_and_storage = DE2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        DE2_impact_scores_comfort = DE2_impact_weighting_comfort * IM_energy_savings_on_site

        DE2_impact_scores_convenience = DE2_impact_weighting_convenience * IM_energy_savings_on_site

        DE2_impact_scores_wellbeing_and_health = DE2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        DE2_impact_scores_maintenance_and_fault_prediction = DE2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        DE2_impact_scores_information_to_occupants = DE2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        DE2LE_Max_EnergySavings = 1
        DE2LE_Max_Flexibility = 0
        DE2LE_Max_Comfort = 0
        DE2LE_Max_Convenience = 1
        DE2LE_Max_WellbeingAndHealth = 0
        DE2LE_Max_Maintenance = 2
        DE2LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        DE2_Max_SRI_IM_Scores_EnergySavings = DE2LE_Max_EnergySavings * (DE_WE_energy_savings / 100)
        DE2_Max_SRI_IM_Scores_Flexibility = DE2LE_Max_Flexibility * (DE_WE_flexibility / 100)
        DE2_Max_SRI_IM_Scores_Comfort = DE2LE_Max_Comfort * (DE_WE_comfort / 100)
        DE2_Max_SRI_IM_Scores_Convenience = DE2LE_Max_Convenience * (DE_WE_convenience / 100)
        DE2_Max_SRI_IM_Scores_WellbeingAndHealth = DE2LE_Max_WellbeingAndHealth * (DE_WE_wellbeing_and_health / 100)
        DE2_Max_SRI_IM_Scores_Maintenance = DE2LE_Max_Maintenance * (DE_WE_maintenance / 100)
        DE2_Max_SRI_IM_Scores_InformationToOccupants = DE2LE_Max_InformationToOccupants * (
                    DE_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        DE2_Max_impact_scores_energy_saving = DE2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        DE2_Max_impact_scores_flexibility_for_the_grid_and_storage = DE2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        DE2_Max_impact_scores_comfort = DE2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        DE2_Max_impact_scores_convenience = DE2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        DE2_Max_impact_scores_wellbeing_and_health = DE2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        DE2_Max_impact_scores_maintenance_and_fault_prediction = DE2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        DE2_Max_impact_scores_information_to_occupants = DE2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_DE_OR_SC_EnergySavings = DE2LE_EnergySavings

        sum_DE_OR_SC_Flexibility = DE2LE_Flexibility

        sum_DE_OR_SC_Comfort = DE2LE_Comfort

        sum_DE_OR_SC_Convenience = DE2LE_Convenience

        sum_DE_OR_SC_WellbeingAndHealth = DE2LE_WellbeingAndHealth

        sum_DE_OR_SC_Maintenance = DE2LE_Maintenance

        sum_DE_OR_SC_InformationToOccupants = DE2LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_DE_IM_WE_energy_savings = DE2_impact_weighting_energy_saving

        sum_DE_IM_WE_flexibility_for_the_grid_and_storage = DE2_impact_weighting_flexibility_for_the_grid_and_storage

        sum_DE_IM_WE_comfort = DE2_impact_weighting_comfort

        sum_DE_IM_WE_convenience = DE2_impact_weighting_convenience

        sum_DE_IM_WE_wellbeing_and_health = DE2_impact_weighting_wellbeing_and_health

        sum_DE_IM_WE_maintenance_and_fault_prediction = DE2_impact_weighting_maintenance_and_fault_prediction

        sum_DE_IM_WE_information_to_occupants = DE2_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_DE_IM_SC_energy_savings = DE2_impact_scores_energy_saving

        sum_DE_IM_flexibility_for_the_grid_and_storage = DE2_impact_scores_flexibility_for_the_grid_and_storage

        sum_DE_IM_SC_comfort = DE2_impact_scores_comfort

        sum_DE_IM_SC_convenience = DE2_impact_scores_convenience

        sum_DE_IM_SC_wellbeing_and_health = DE2_impact_scores_wellbeing_and_health

        sum_DE_IM_SC_maintenance_and_fault_prediction = DE2_impact_scores_maintenance_and_fault_prediction

        sum_DE_IM_SC_information_to_occupants = DE2_impact_scores_information_to_occupants

        # TOTAL
        total_DE_sum_IM_SC = sum_DE_IM_SC_energy_savings + sum_DE_IM_flexibility_for_the_grid_and_storage + \
                             sum_DE_IM_SC_comfort + sum_DE_IM_SC_convenience + sum_DE_IM_SC_wellbeing_and_health + \
                             sum_DE_IM_SC_maintenance_and_fault_prediction + sum_DE_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_DE_MAX_OR_SC_EnergySavings = DE2LE_Max_EnergySavings

        sum_DE_MAX_OR_SC_Flexibility = DE2LE_Max_Flexibility

        sum_DE_MAX_OR_SC_Comfort = DE2LE_Max_Comfort

        sum_DE_MAX_OR_SC_Convenience = DE2LE_Max_Convenience

        sum_DE_MAX_OR_SC_WellbeingAndHealth = DE2LE_Max_WellbeingAndHealth

        sum_DE_MAX_OR_SC_Maintenance = DE2LE_Max_Maintenance

        sum_DE_MAX_OR_SC_InformationToOccupants = DE2LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_DE_MAX_IM_WE_energy_savings = DE2_Max_SRI_IM_Scores_EnergySavings

        sum_DE_MAX_IM_WE_flexibility_for_the_grid_and_storage = DE2_Max_SRI_IM_Scores_Flexibility

        sum_DE_MAX_IM_WE_comfort = DE2_Max_SRI_IM_Scores_Comfort

        sum_DE_MAX_IM_WE_convenience = DE2_Max_SRI_IM_Scores_Convenience

        sum_DE_MAX_IM_WE_wellbeing_and_health = DE2_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_DE_MAX_IM_WE_maintenance_and_fault_prediction = DE2_Max_SRI_IM_Scores_Maintenance

        sum_DE_MAX_IM_WE_information_to_occupants = DE2_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_DE_MAX_IM_SC_energy_savings = DE2_Max_impact_scores_energy_saving

        sum_DE_MAX_IM_flexibility_for_the_grid_and_storage = DE2_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_DE_MAX_IM_SC_comfort = DE2_Max_impact_scores_comfort

        sum_DE_MAX_IM_SC_convenience = DE2_Max_impact_scores_convenience

        sum_DE_MAX_IM_SC_wellbeing_and_health = DE2_impact_scores_wellbeing_and_health

        sum_DE_MAX_IM_SC_maintenance_and_fault_prediction = DE2_Max_impact_scores_maintenance_and_fault_prediction

        sum_DE_MAX_IM_SC_information_to_occupants = DE2_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_DE_MAX_sum_IM_SC = sum_DE_MAX_IM_SC_energy_savings + sum_DE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_DE_MAX_IM_SC_comfort + sum_DE_MAX_IM_SC_convenience + sum_DE_MAX_IM_SC_wellbeing_and_health + \
                                 sum_DE_MAX_IM_SC_maintenance_and_fault_prediction + sum_DE_MAX_IM_SC_information_to_occupants

if DE == "b":
    # SUM ORDINAL SCORES
    sum_DE_OR_SC_EnergySavings = 0
    sum_DE_OR_SC_Flexibility = 0
    sum_DE_OR_SC_Comfort = 0
    sum_DE_OR_SC_Convenience = 0
    sum_DE_OR_SC_WellbeingAndHealth = 0
    sum_DE_OR_SC_Maintenance = 0
    sum_DE_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_DE_IM_WE_energy_savings = 0
    sum_DE_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_DE_IM_WE_comfort = 0
    sum_DE_IM_WE_convenience = 0
    sum_DE_IM_WE_wellbeing_and_health = 0
    sum_DE_IM_WE_maintenance_and_fault_prediction = 0
    sum_DE_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_DE_IM_SC_energy_savings = 0
    sum_DE_IM_flexibility_for_the_grid_and_storage = 0
    sum_DE_IM_SC_comfort = 0
    sum_DE_IM_SC_convenience = 0
    sum_DE_IM_SC_wellbeing_and_health = 0
    sum_DE_IM_SC_maintenance_and_fault_prediction = 0
    sum_DE_IM_SC_information_to_occupants = 0

    # TOTAL
    total_DE_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_DE_MAX_OR_SC_EnergySavings = 0
    sum_DE_MAX_OR_SC_Flexibility = 0
    sum_DE_MAX_OR_SC_Comfort = 0
    sum_DE_MAX_OR_SC_Convenience = 0
    sum_DE_MAX_OR_SC_WellbeingAndHealth = 0
    sum_DE_MAX_OR_SC_Maintenance = 0
    sum_DE_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_DE_MAX_IM_WE_energy_savings = 0
    sum_DE_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_DE_MAX_IM_WE_comfort = 0
    sum_DE_MAX_IM_WE_convenience = 0
    sum_DE_MAX_IM_WE_wellbeing_and_health = 0
    sum_DE_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_DE_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_DE_MAX_IM_SC_energy_savings = 0
    sum_DE_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_DE_MAX_IM_SC_comfort = 0
    sum_DE_MAX_IM_SC_convenience = 0
    sum_DE_MAX_IM_SC_wellbeing_and_health = 0
    sum_DE_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_DE_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_DE_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Electricity: renewables & storage")
    print("")
    EL = input("Electricity: renewables & storage \n(a) yes \n(b) no \n[a/b]?: ")

    if EL in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if EL == "a":
    while True:
        print("")
        RES = input("On-site renewable electricity generation \n(a) On-site renewable electricity generation."
                    "\n(b) No On-site renewable electricity generation. \n[a/b]? :")
        if RES in ['a', 'b']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        SRES = input("Storage of on-site generated renewable electricity "
                     "\n(a) Present. \n(b) Not present. \n[a/b]? :")

        if SRES in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if RES == "a" and SRES == "a":
        # Electricity-S1
        print("Storage of locally generated energy")
        print("")

        while True:
            EL1LE = input("Choose:\n(a) None."
                          "\n(b) Limited: small scale storage (batteries,TES,..)."
                          "\n(c) Storage which can supply self-consumption for > 3hours."
                          "\n(d) Dynamically operated storage which can also feedback into the grid. "
                          "\n [a/b/c/d]? :")
            if EL1LE in ['a', 'b', 'c', 'd']:
                # if it was equal - break from the while loop
                break

        if EL1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 0
            EL1LE_Comfort = 0
            EL1LE_Convenience = 0
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 1
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 2
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "d":
            print()
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 3
            EL1LE_Comfort = 0
            EL1LE_Convenience = 2
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        # Electricity-S2
        print("")
        print("Electricity Monitoring Systems")
        print("")

        while True:
            EL2LE = input("Choose:\n(a) None."
                          "\n(b) Reporting on current electricity consumption on building level."
                          "\n(c) Real-time feedback or benchmarking on building level."
                          "\n(d) Real-time feedback or benchmarking on appliance level."
                          "\n(e) Real-time feedback or benchmarking on appliance level with automated "
                          "personalized recommendations. \n[a/b/c/d/e]? : ")
            if EL2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 1
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 2
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 1
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 3
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 1
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 2
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        # Electricity-S3
        print("")
        print("Reporting information regarding energy generation")
        print("")

        while True:
            EL3LE = input("Choose:\n(a) None."
                          "\n(b) Current generation data available."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; "
                          "also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if EL3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 0
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 0
            EL3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 1
            EL3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 1
            EL3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 1
            EL3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 1
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 2
            EL3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        # Electricity-S4
        print("")
        print("Reporting information regarding energy storage")
        print("")

        while True:
            EL41LE = input("Choose:\n(a) None."
                           "\n(b) Current state of charge (SOC) data available."
                           "\n(c) Actual values and historical data."
                           "\n(d) Performance evaluation including forecasting and/or benchmarking."
                           "\n(e) Performance evaluation including forecasting and/or benchmarking; "
                           "also including predictive management and fault detection. \n[a/b/c/d/e]? : ")
            if EL41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL41LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 0
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 0
            EL4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 1
            EL4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 1
            EL4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 1
            EL4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 1
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 2
            EL4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electricity
        EL_WE_energy_savings = 11
        EL_WE_flexibility = 13
        EL_WE_comfort = 0
        EL_WE_convenience = 11
        EL_WE_wellbeing_and_health = 0
        EL_WE_maintenance = 14
        EL_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electricity
        # EL 1
        EL1_impact_weighting_energy_saving = EL1LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_impact_weighting_flexibility_for_the_grid_and_storage = EL1LE_Flexibility * (EL_WE_flexibility / 100)
        EL1_impact_weighting_comfort = EL1LE_Comfort * (EL_WE_comfort / 100)
        EL1_impact_weighting_convenience = EL1LE_Convenience * (EL_WE_convenience / 100)
        EL1_impact_weighting_wellbeing_and_health = EL1LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_impact_weighting_maintenance_and_fault_prediction = EL1LE_Maintenance * (EL_WE_maintenance / 100)
        EL1_impact_weighting_information_to_occupants = EL1LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL1_impact_scores_energy_saving = EL1_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL1_impact_scores_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL1_impact_scores_comfort = EL1_impact_weighting_comfort * IM_energy_savings_on_site

        EL1_impact_scores_convenience = EL1_impact_weighting_convenience * IM_energy_savings_on_site

        EL1_impact_scores_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL1_impact_scores_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL1_impact_scores_information_to_occupants = EL1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL1LE_Max_EnergySavings = 0
        EL1LE_Max_Flexibility = 3
        EL1LE_Max_Comfort = 0
        EL1LE_Max_Convenience = 2
        EL1LE_Max_WellbeingAndHealth = 0
        EL1LE_Max_Maintenance = 0
        EL1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EL1_Max_SRI_IM_Scores_EnergySavings = EL1LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_Max_SRI_IM_Scores_Flexibility = EL1LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL1_Max_SRI_IM_Scores_Comfort = EL1LE_Max_Comfort * (EL_WE_comfort / 100)
        EL1_Max_SRI_IM_Scores_Convenience = EL1LE_Max_Convenience * (EL_WE_convenience / 100)
        EL1_Max_SRI_IM_Scores_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_Max_SRI_IM_Scores_Maintenance = EL1LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL1_Max_SRI_IM_Scores_InformationToOccupants = EL1LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL1_Max_impact_scores_energy_saving = EL1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL1_Max_impact_scores_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL1_Max_impact_scores_comfort = EL1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL1_Max_impact_scores_convenience = EL1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL1_Max_impact_scores_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL1_Max_impact_scores_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL1_Max_impact_scores_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 2
        EL2_impact_weighting_energy_saving = EL2LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_impact_weighting_flexibility_for_the_grid_and_storage = EL2LE_Flexibility * (EL_WE_flexibility / 100)
        EL2_impact_weighting_comfort = EL2LE_Comfort * (EL_WE_comfort / 100)
        EL2_impact_weighting_convenience = EL2LE_Convenience * (EL_WE_convenience / 100)
        EL2_impact_weighting_wellbeing_and_health = EL2LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_impact_weighting_maintenance_and_fault_prediction = EL2LE_Maintenance * (EL_WE_maintenance / 100)
        EL2_impact_weighting_information_to_occupants = EL2LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL2_impact_scores_energy_saving = EL2_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL2_impact_scores_flexibility_for_the_grid_and_storage = EL2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL2_impact_scores_comfort = EL2_impact_weighting_comfort * IM_energy_savings_on_site

        EL2_impact_scores_convenience = EL2_impact_weighting_convenience * IM_energy_savings_on_site

        EL2_impact_scores_wellbeing_and_health = EL2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL2_impact_scores_maintenance_and_fault_prediction = EL2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL2_impact_scores_information_to_occupants = EL2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL2LE_Max_EnergySavings = 3
        EL2LE_Max_Flexibility = 0
        EL2LE_Max_Comfort = 0
        EL2LE_Max_Convenience = 1
        EL2LE_Max_WellbeingAndHealth = 0
        EL2LE_Max_Maintenance = 2
        EL2LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL2_Max_SRI_IM_Scores_EnergySavings = EL2LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_Max_SRI_IM_Scores_Flexibility = EL2LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL2_Max_SRI_IM_Scores_Comfort = EL2LE_Max_Comfort * (EL_WE_comfort / 100)
        EL2_Max_SRI_IM_Scores_Convenience = EL2LE_Max_Convenience * (EL_WE_convenience / 100)
        EL2_Max_SRI_IM_Scores_WellbeingAndHealth = EL2LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_Max_SRI_IM_Scores_Maintenance = EL2LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL2_Max_SRI_IM_Scores_InformationToOccupants = EL2LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL2_Max_impact_scores_energy_saving = EL2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL2_Max_impact_scores_flexibility_for_the_grid_and_storage = EL2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL2_Max_impact_scores_comfort = EL2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL2_Max_impact_scores_convenience = EL2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL2_Max_impact_scores_wellbeing_and_health = EL2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL2_Max_impact_scores_maintenance_and_fault_prediction = EL2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL2_Max_impact_scores_information_to_occupants = EL2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 3
        EL3_impact_weighting_energy_saving = EL3LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL3_impact_weighting_flexibility_for_the_grid_and_storage = EL3LE_Flexibility * (EL_WE_flexibility / 100)
        EL3_impact_weighting_comfort = EL3LE_Comfort * (EL_WE_comfort / 100)
        EL3_impact_weighting_convenience = EL3LE_Convenience * (EL_WE_convenience / 100)
        EL3_impact_weighting_wellbeing_and_health = EL3LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL3_impact_weighting_maintenance_and_fault_prediction = EL3LE_Maintenance * (EL_WE_maintenance / 100)
        EL3_impact_weighting_information_to_occupants = EL3LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL3_impact_scores_energy_saving = EL3_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL3_impact_scores_flexibility_for_the_grid_and_storage = EL3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL3_impact_scores_comfort = EL3_impact_weighting_comfort * IM_energy_savings_on_site

        EL3_impact_scores_convenience = EL3_impact_weighting_convenience * IM_energy_savings_on_site

        EL3_impact_scores_wellbeing_and_health = EL3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL3_impact_scores_maintenance_and_fault_prediction = EL3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL3_impact_scores_information_to_occupants = EL3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL3LE_Max_EnergySavings = 1
        EL3LE_Max_Flexibility = 0
        EL3LE_Max_Comfort = 0
        EL3LE_Max_Convenience = 1
        EL3LE_Max_WellbeingAndHealth = 0
        EL3LE_Max_Maintenance = 2
        EL3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL3_Max_SRI_IM_Scores_EnergySavings = EL3LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL3_Max_SRI_IM_Scores_Flexibility = EL3LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL3_Max_SRI_IM_Scores_Comfort = EL3LE_Max_Comfort * (EL_WE_comfort / 100)
        EL3_Max_SRI_IM_Scores_Convenience = EL3LE_Max_Convenience * (EL_WE_convenience / 100)
        EL3_Max_SRI_IM_Scores_WellbeingAndHealth = EL3LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL3_Max_SRI_IM_Scores_Maintenance = EL3LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL3_Max_SRI_IM_Scores_InformationToOccupants = EL3LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL3_Max_impact_scores_energy_saving = EL3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL3_Max_impact_scores_flexibility_for_the_grid_and_storage = EL3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL3_Max_impact_scores_comfort = EL3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL3_Max_impact_scores_convenience = EL3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL3_Max_impact_scores_wellbeing_and_health = EL3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL3_Max_impact_scores_maintenance_and_fault_prediction = EL3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL3_Max_impact_scores_information_to_occupants = EL3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 4
        EL4_impact_weighting_energy_saving = EL4LE_EnergySavings * (EL_WE_energy_savings / 100)

        EL4_impact_weighting_flexibility_for_the_grid_and_storage = EL4LE_Flexibility * (EL_WE_flexibility / 100)

        EL4_impact_weighting_comfort = EL4LE_Comfort * (EL_WE_comfort / 100)

        EL4_impact_weighting_convenience = EL4LE_Convenience * (EL_WE_convenience / 100)

        EL4_impact_weighting_wellbeing_and_health = EL4LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)

        EL4_impact_weighting_maintenance_and_fault_prediction = EL4LE_Maintenance * (EL_WE_maintenance / 100)

        EL4_impact_weighting_information_to_occupants = EL4LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL4_impact_scores_energy_saving = EL4_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL4_impact_scores_flexibility_for_the_grid_and_storage = EL4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL4_impact_scores_comfort = EL4_impact_weighting_comfort * IM_energy_savings_on_site

        EL4_impact_scores_convenience = EL4_impact_weighting_convenience * IM_energy_savings_on_site

        EL4_impact_scores_wellbeing_and_health = EL4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL4_impact_scores_maintenance_and_fault_prediction = EL4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL4_impact_scores_information_to_occupants = EL4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL4LE_Max_EnergySavings = 1
        EL4LE_Max_Flexibility = 0
        EL4LE_Max_Comfort = 0
        EL4LE_Max_Convenience = 1
        EL4LE_Max_WellbeingAndHealth = 0
        EL4LE_Max_Maintenance = 2
        EL4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL4_Max_SRI_IM_Scores_EnergySavings = EL4LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL4_Max_SRI_IM_Scores_Flexibility = EL4LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL4_Max_SRI_IM_Scores_Comfort = EL4LE_Max_Comfort * (EL_WE_comfort / 100)
        EL4_Max_SRI_IM_Scores_Convenience = EL4LE_Max_Convenience * (EL_WE_convenience / 100)
        EL4_Max_SRI_IM_Scores_WellbeingAndHealth = EL4LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL4_Max_SRI_IM_Scores_Maintenance = EL4LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL4_Max_SRI_IM_Scores_InformationToOccupants = EL4LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL4_Max_impact_scores_energy_saving = EL4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL4_Max_impact_scores_flexibility_for_the_grid_and_storage = EL4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL4_Max_impact_scores_comfort = EL4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL4_Max_impact_scores_convenience = EL4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL4_Max_impact_scores_wellbeing_and_health = EL4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL4_Max_impact_scores_maintenance_and_fault_prediction = EL4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL4_Max_impact_scores_information_to_occupants = EL4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_EL_OR_SC_EnergySavings = EL1LE_EnergySavings + EL2LE_EnergySavings + EL3LE_EnergySavings + EL4LE_EnergySavings

        sum_EL_OR_SC_Flexibility = EL1LE_Flexibility + EL2LE_Flexibility + EL3LE_Flexibility + EL4LE_Flexibility

        sum_EL_OR_SC_Comfort = EL1LE_Comfort + EL2LE_Comfort + EL3LE_Comfort + EL4LE_Comfort

        sum_EL_OR_SC_Convenience = EL1LE_Convenience + EL2LE_Convenience + EL3LE_Convenience + EL4LE_Convenience

        sum_EL_OR_SC_WellbeingAndHealth = EL1LE_WellbeingAndHealth + EL2LE_WellbeingAndHealth + EL3LE_WellbeingAndHealth + \
                                          EL4LE_WellbeingAndHealth

        sum_EL_OR_SC_Maintenance = EL1LE_Maintenance + EL2LE_Maintenance + EL3LE_Maintenance + EL4LE_Maintenance

        sum_EL_OR_SC_InformationToOccupants = EL1LE_InformationToOccupants + EL2LE_InformationToOccupants + \
                                              EL3LE_InformationToOccupants + EL4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EL_IM_WE_energy_savings = EL1_impact_weighting_energy_saving + EL2_impact_weighting_energy_saving + \
                                      EL3_impact_weighting_energy_saving + EL4_impact_weighting_energy_saving

        sum_EL_IM_WE_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL3_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EL_IM_WE_comfort = EL1_impact_weighting_comfort + EL2_impact_weighting_comfort + EL3_impact_weighting_comfort + \
                               EL4_impact_weighting_comfort

        sum_EL_IM_WE_convenience = EL1_impact_weighting_convenience + EL2_impact_weighting_convenience \
                                   + EL3_impact_weighting_convenience + EL4_impact_weighting_convenience

        sum_EL_IM_WE_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health + \
                                            EL2_impact_weighting_wellbeing_and_health + \
                                            EL3_impact_weighting_wellbeing_and_health + \
                                            EL4_impact_weighting_wellbeing_and_health

        sum_EL_IM_WE_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL2_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL3_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL4_impact_weighting_maintenance_and_fault_prediction

        sum_EL_IM_WE_information_to_occupants = EL1_impact_weighting_information_to_occupants + \
                                                EL2_impact_weighting_information_to_occupants + \
                                                EL3_impact_weighting_information_to_occupants + \
                                                EL4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EL_IM_SC_energy_savings = EL1_impact_scores_energy_saving + EL2_impact_scores_energy_saving + \
                                      EL3_impact_scores_energy_saving + EL4_impact_scores_energy_saving

        sum_EL_IM_flexibility_for_the_grid_and_storage = EL1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL3_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL4_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_IM_SC_comfort = EL1_impact_scores_comfort + EL2_impact_scores_comfort + EL3_impact_scores_comfort + \
                               EL4_impact_scores_comfort

        sum_EL_IM_SC_convenience = EL1_impact_scores_convenience + EL2_impact_scores_convenience + EL3_impact_scores_convenience \
                                   + EL4_impact_scores_convenience

        sum_EL_IM_SC_wellbeing_and_health = EL1_impact_scores_wellbeing_and_health + EL2_impact_scores_wellbeing_and_health + \
                                            EL3_impact_scores_wellbeing_and_health + EL4_impact_scores_wellbeing_and_health

        sum_EL_IM_SC_maintenance_and_fault_prediction = EL1_impact_scores_maintenance_and_fault_prediction + \
                                                        EL2_impact_scores_maintenance_and_fault_prediction + \
                                                        EL3_impact_scores_maintenance_and_fault_prediction + \
                                                        EL4_impact_scores_maintenance_and_fault_prediction

        sum_EL_IM_SC_information_to_occupants = EL1_impact_scores_information_to_occupants + \
                                                EL2_impact_scores_information_to_occupants + \
                                                EL3_impact_scores_information_to_occupants + \
                                                EL4_impact_scores_information_to_occupants

        # TOTAL
        total_EL_sum_IM_SC = sum_EL_IM_SC_energy_savings + sum_EL_IM_flexibility_for_the_grid_and_storage + \
                             sum_EL_IM_SC_comfort + sum_EL_IM_SC_convenience + sum_EL_IM_SC_wellbeing_and_health + \
                             sum_EL_IM_SC_maintenance_and_fault_prediction + sum_EL_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EL_MAX_OR_SC_EnergySavings = EL1LE_Max_EnergySavings + EL2LE_Max_EnergySavings + EL3LE_Max_EnergySavings + \
                                         EL4LE_Max_EnergySavings

        sum_EL_MAX_OR_SC_Flexibility = EL1LE_Max_Flexibility + EL2LE_Max_Flexibility + EL3LE_Max_Flexibility + \
                                       EL4LE_Max_Flexibility

        sum_EL_MAX_OR_SC_Comfort = EL1LE_Max_Comfort + EL2LE_Max_Comfort + EL3LE_Max_Comfort + \
                                   EL4LE_Max_Comfort

        sum_EL_MAX_OR_SC_Convenience = EL1LE_Max_Convenience + EL2LE_Max_Convenience + EL3LE_Max_Convenience + \
                                       EL4LE_Max_Convenience

        sum_EL_MAX_OR_SC_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth + EL2LE_Max_WellbeingAndHealth + \
                                              EL3LE_Max_WellbeingAndHealth + EL4LE_Max_WellbeingAndHealth

        sum_EL_MAX_OR_SC_Maintenance = EL1LE_Max_Maintenance + EL2LE_Max_Maintenance + EL3LE_Max_Maintenance + \
                                       EL4LE_Max_Maintenance

        sum_EL_MAX_OR_SC_InformationToOccupants = EL1LE_Max_InformationToOccupants + EL2LE_Max_InformationToOccupants + \
                                                  EL3LE_Max_InformationToOccupants + EL4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EL_MAX_IM_WE_energy_savings = EL1_Max_SRI_IM_Scores_EnergySavings + EL2_Max_SRI_IM_Scores_EnergySavings \
                                          + EL3_Max_SRI_IM_Scores_EnergySavings + EL4_Max_SRI_IM_Scores_EnergySavings

        sum_EL_MAX_IM_WE_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility + \
                                                                EL2_Max_SRI_IM_Scores_Flexibility + \
                                                                EL3_Max_SRI_IM_Scores_Flexibility + \
                                                                EL4_Max_SRI_IM_Scores_Flexibility

        sum_EL_MAX_IM_WE_comfort = EL1_Max_SRI_IM_Scores_Comfort + EL2_Max_SRI_IM_Scores_Comfort + EL3_Max_SRI_IM_Scores_Comfort \
                                   + EL3_Max_SRI_IM_Scores_Comfort

        sum_EL_MAX_IM_WE_convenience = EL1_Max_SRI_IM_Scores_Convenience + EL2_Max_SRI_IM_Scores_Convenience \
                                       + EL3_Max_SRI_IM_Scores_Convenience + EL4_Max_SRI_IM_Scores_Convenience

        sum_EL_MAX_IM_WE_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL3_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EL_MAX_IM_WE_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance + \
                                                            EL2_Max_SRI_IM_Scores_Maintenance + \
                                                            EL3_Max_SRI_IM_Scores_Maintenance + \
                                                            EL4_Max_SRI_IM_Scores_Maintenance

        sum_EL_MAX_IM_WE_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL3_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EL_MAX_IM_SC_energy_savings = EL1_Max_impact_scores_energy_saving + EL2_Max_impact_scores_energy_saving \
                                          + EL3_Max_impact_scores_energy_saving + EL4_Max_impact_scores_energy_saving

        sum_EL_MAX_IM_flexibility_for_the_grid_and_storage = EL1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL3_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_MAX_IM_SC_comfort = EL1_Max_impact_scores_comfort + EL2_Max_impact_scores_comfort + \
                                   EL3_Max_impact_scores_comfort + EL4_Max_impact_scores_comfort

        sum_EL_MAX_IM_SC_convenience = EL1_Max_impact_scores_convenience + EL2_Max_impact_scores_convenience \
                                       + EL3_Max_impact_scores_convenience + EL4_Max_impact_scores_convenience

        sum_EL_MAX_IM_SC_wellbeing_and_health = EL1_Max_impact_scores_wellbeing_and_health + \
                                                EL2_impact_scores_wellbeing_and_health + \
                                                EL3_Max_impact_scores_wellbeing_and_health + \
                                                EL4_Max_impact_scores_wellbeing_and_health

        sum_EL_MAX_IM_SC_maintenance_and_fault_prediction = EL1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL3_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL4_Max_impact_scores_maintenance_and_fault_prediction

        sum_EL_MAX_IM_SC_information_to_occupants = EL1_Max_impact_scores_information_to_occupants + \
                                                    EL2_Max_impact_scores_information_to_occupants + \
                                                    EL3_Max_impact_scores_information_to_occupants + \
                                                    EL4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_EL_MAX_sum_IM_SC = sum_EL_MAX_IM_SC_energy_savings + sum_EL_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EL_MAX_IM_SC_comfort + sum_EL_MAX_IM_SC_convenience + sum_EL_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EL_MAX_IM_SC_maintenance_and_fault_prediction + sum_EL_MAX_IM_SC_information_to_occupants

    if RES == "b" and SRES == "a":
        # print Electricity-S1, -S2, -S4
        # Electricity-S1
        print("Storage of locally generated energy")
        print("")

        while True:
            EL1LE = input("Choose:\n(a) None."
                          "\n(b) Limited: small scale storage (batteries,TES,..)."
                          "\n(c) Storage which can supply self-consumption for > 3hours."
                          "\n(d) Dynamically operated storage which can also feedback into the grid. "
                          "\n [a/b/c/d]? :")
            if EL1LE in ['a', 'b', 'c', 'd']:
                # if it was equal - break from the while loop
                break

        if EL1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 0
            EL1LE_Comfort = 0
            EL1LE_Convenience = 0
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 1
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 2
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "d":
            print()
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 3
            EL1LE_Comfort = 0
            EL1LE_Convenience = 2
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        # Electricity-S2
        print("")
        print("Electricity Monitoring Systems")
        print("")

        while True:
            EL2LE = input("Choose:\n(a) None."
                          "\n(b) Reporting on current electricity consumption on building level."
                          "\n(c) Real-time feedback or benchmarking on building level."
                          "\n(d) Real-time feedback or benchmarking on appliance level."
                          "\n(e) Real-time feedback or benchmarking on appliance level with automated "
                          "personalized recommendations. \n[a/b/c/d/e]? : ")
            if EL2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 1
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 2
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 1
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 3
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 1
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 2
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        # Electricity-S4
        print("")
        print("Reporting information regarding energy storage")
        print("")

        while True:
            EL41LE = input("Choose:\n(a) None."
                           "\n(b) Current state of charge (SOC) data available."
                           "\n(c) Actual values and historical data."
                           "\n(d) Performance evaluation including forecasting and/or benchmarking."
                           "\n(e) Performance evaluation including forecasting and/or benchmarking; "
                           "also including predictive management and fault detection. \n[a/b/c/d/e]? : ")
            if EL41LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL41LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 0
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 0
            EL4LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 1
            EL4LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 1
            EL4LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 0
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 1
            EL4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        elif EL41LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL4LE_EnergySavings = 1
            EL4LE_Flexibility = 0
            EL4LE_Comfort = 0
            EL4LE_Convenience = 1
            EL4LE_WellbeingAndHealth = 0
            EL4LE_Maintenance = 2
            EL4LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL4LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL4LE_Flexibility))
            print("Comfort: " + str(EL4LE_Comfort))
            print("Convenience: " + str(EL4LE_Convenience))
            print("Health & wellbeing: " + str(EL4LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL4LE_Maintenance))
            print("Information to occupants: " + str(EL4LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electricity
        EL_WE_energy_savings = 11
        EL_WE_flexibility = 13
        EL_WE_comfort = 0
        EL_WE_convenience = 11
        EL_WE_wellbeing_and_health = 0
        EL_WE_maintenance = 14
        EL_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electricity
        # EL 1
        EL1_impact_weighting_energy_saving = EL1LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_impact_weighting_flexibility_for_the_grid_and_storage = EL1LE_Flexibility * (EL_WE_flexibility / 100)
        EL1_impact_weighting_comfort = EL1LE_Comfort * (EL_WE_comfort / 100)
        EL1_impact_weighting_convenience = EL1LE_Convenience * (EL_WE_convenience / 100)
        EL1_impact_weighting_wellbeing_and_health = EL1LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_impact_weighting_maintenance_and_fault_prediction = EL1LE_Maintenance * (EL_WE_maintenance / 100)
        EL1_impact_weighting_information_to_occupants = EL1LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL1_impact_scores_energy_saving = EL1_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL1_impact_scores_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL1_impact_scores_comfort = EL1_impact_weighting_comfort * IM_energy_savings_on_site

        EL1_impact_scores_convenience = EL1_impact_weighting_convenience * IM_energy_savings_on_site

        EL1_impact_scores_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL1_impact_scores_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL1_impact_scores_information_to_occupants = EL1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL1LE_Max_EnergySavings = 0
        EL1LE_Max_Flexibility = 3
        EL1LE_Max_Comfort = 0
        EL1LE_Max_Convenience = 2
        EL1LE_Max_WellbeingAndHealth = 0
        EL1LE_Max_Maintenance = 0
        EL1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EL1_Max_SRI_IM_Scores_EnergySavings = EL1LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_Max_SRI_IM_Scores_Flexibility = EL1LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL1_Max_SRI_IM_Scores_Comfort = EL1LE_Max_Comfort * (EL_WE_comfort / 100)
        EL1_Max_SRI_IM_Scores_Convenience = EL1LE_Max_Convenience * (EL_WE_convenience / 100)
        EL1_Max_SRI_IM_Scores_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_Max_SRI_IM_Scores_Maintenance = EL1LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL1_Max_SRI_IM_Scores_InformationToOccupants = EL1LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL1_Max_impact_scores_energy_saving = EL1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL1_Max_impact_scores_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL1_Max_impact_scores_comfort = EL1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL1_Max_impact_scores_convenience = EL1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL1_Max_impact_scores_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL1_Max_impact_scores_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL1_Max_impact_scores_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 2
        EL2_impact_weighting_energy_saving = EL2LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_impact_weighting_flexibility_for_the_grid_and_storage = EL2LE_Flexibility * (EL_WE_flexibility / 100)
        EL2_impact_weighting_comfort = EL2LE_Comfort * (EL_WE_comfort / 100)
        EL2_impact_weighting_convenience = EL2LE_Convenience * (EL_WE_convenience / 100)
        EL2_impact_weighting_wellbeing_and_health = EL2LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_impact_weighting_maintenance_and_fault_prediction = EL2LE_Maintenance * (EL_WE_maintenance / 100)
        EL2_impact_weighting_information_to_occupants = EL2LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL2_impact_scores_energy_saving = EL2_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL2_impact_scores_flexibility_for_the_grid_and_storage = EL2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL2_impact_scores_comfort = EL2_impact_weighting_comfort * IM_energy_savings_on_site

        EL2_impact_scores_convenience = EL2_impact_weighting_convenience * IM_energy_savings_on_site

        EL2_impact_scores_wellbeing_and_health = EL2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL2_impact_scores_maintenance_and_fault_prediction = EL2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL2_impact_scores_information_to_occupants = EL2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL2LE_Max_EnergySavings = 3
        EL2LE_Max_Flexibility = 0
        EL2LE_Max_Comfort = 0
        EL2LE_Max_Convenience = 1
        EL2LE_Max_WellbeingAndHealth = 0
        EL2LE_Max_Maintenance = 2
        EL2LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL2_Max_SRI_IM_Scores_EnergySavings = EL2LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_Max_SRI_IM_Scores_Flexibility = EL2LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL2_Max_SRI_IM_Scores_Comfort = EL2LE_Max_Comfort * (EL_WE_comfort / 100)
        EL2_Max_SRI_IM_Scores_Convenience = EL2LE_Max_Convenience * (EL_WE_convenience / 100)
        EL2_Max_SRI_IM_Scores_WellbeingAndHealth = EL2LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_Max_SRI_IM_Scores_Maintenance = EL2LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL2_Max_SRI_IM_Scores_InformationToOccupants = EL2LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL2_Max_impact_scores_energy_saving = EL2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL2_Max_impact_scores_flexibility_for_the_grid_and_storage = EL2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL2_Max_impact_scores_comfort = EL2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL2_Max_impact_scores_convenience = EL2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL2_Max_impact_scores_wellbeing_and_health = EL2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL2_Max_impact_scores_maintenance_and_fault_prediction = EL2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL2_Max_impact_scores_information_to_occupants = EL2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################

        # EL 4
        EL4_impact_weighting_energy_saving = EL4LE_EnergySavings * (EL_WE_energy_savings / 100)

        EL4_impact_weighting_flexibility_for_the_grid_and_storage = EL4LE_Flexibility * (EL_WE_flexibility / 100)

        EL4_impact_weighting_comfort = EL4LE_Comfort * (EL_WE_comfort / 100)

        EL4_impact_weighting_convenience = EL4LE_Convenience * (EL_WE_convenience / 100)

        EL4_impact_weighting_wellbeing_and_health = EL4LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)

        EL4_impact_weighting_maintenance_and_fault_prediction = EL4LE_Maintenance * (EL_WE_maintenance / 100)

        EL4_impact_weighting_information_to_occupants = EL4LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL4_impact_scores_energy_saving = EL4_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL4_impact_scores_flexibility_for_the_grid_and_storage = EL4_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL4_impact_scores_comfort = EL4_impact_weighting_comfort * IM_energy_savings_on_site

        EL4_impact_scores_convenience = EL4_impact_weighting_convenience * IM_energy_savings_on_site

        EL4_impact_scores_wellbeing_and_health = EL4_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL4_impact_scores_maintenance_and_fault_prediction = EL4_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL4_impact_scores_information_to_occupants = EL4_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL4LE_Max_EnergySavings = 1
        EL4LE_Max_Flexibility = 0
        EL4LE_Max_Comfort = 0
        EL4LE_Max_Convenience = 1
        EL4LE_Max_WellbeingAndHealth = 0
        EL4LE_Max_Maintenance = 2
        EL4LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL4_Max_SRI_IM_Scores_EnergySavings = EL4LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL4_Max_SRI_IM_Scores_Flexibility = EL4LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL4_Max_SRI_IM_Scores_Comfort = EL4LE_Max_Comfort * (EL_WE_comfort / 100)
        EL4_Max_SRI_IM_Scores_Convenience = EL4LE_Max_Convenience * (EL_WE_convenience / 100)
        EL4_Max_SRI_IM_Scores_WellbeingAndHealth = EL4LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL4_Max_SRI_IM_Scores_Maintenance = EL4LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL4_Max_SRI_IM_Scores_InformationToOccupants = EL4LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL4_Max_impact_scores_energy_saving = EL4_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL4_Max_impact_scores_flexibility_for_the_grid_and_storage = EL4_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL4_Max_impact_scores_comfort = EL4_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL4_Max_impact_scores_convenience = EL4_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL4_Max_impact_scores_wellbeing_and_health = EL4_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL4_Max_impact_scores_maintenance_and_fault_prediction = EL4_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL4_Max_impact_scores_information_to_occupants = EL4_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_EL_OR_SC_EnergySavings = EL1LE_EnergySavings + EL2LE_EnergySavings + EL4LE_EnergySavings

        sum_EL_OR_SC_Flexibility = EL1LE_Flexibility + EL2LE_Flexibility + EL4LE_Flexibility

        sum_EL_OR_SC_Comfort = EL1LE_Comfort + EL2LE_Comfort + EL4LE_Comfort

        sum_EL_OR_SC_Convenience = EL1LE_Convenience + EL2LE_Convenience + EL4LE_Convenience

        sum_EL_OR_SC_WellbeingAndHealth = EL1LE_WellbeingAndHealth + EL2LE_WellbeingAndHealth + EL4LE_WellbeingAndHealth

        sum_EL_OR_SC_Maintenance = EL1LE_Maintenance + EL2LE_Maintenance + EL4LE_Maintenance

        sum_EL_OR_SC_InformationToOccupants = EL1LE_InformationToOccupants + EL2LE_InformationToOccupants + EL4LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EL_IM_WE_energy_savings = EL1_impact_weighting_energy_saving + EL2_impact_weighting_energy_saving \
                                      + EL4_impact_weighting_energy_saving

        sum_EL_IM_WE_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL4_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EL_IM_WE_comfort = EL1_impact_weighting_comfort + EL2_impact_weighting_comfort + EL4_impact_weighting_comfort

        sum_EL_IM_WE_convenience = EL1_impact_weighting_convenience + EL2_impact_weighting_convenience + \
                                   EL4_impact_weighting_convenience

        sum_EL_IM_WE_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health + \
                                            EL2_impact_weighting_wellbeing_and_health + \
                                            EL4_impact_weighting_wellbeing_and_health

        sum_EL_IM_WE_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL2_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL4_impact_weighting_maintenance_and_fault_prediction

        sum_EL_IM_WE_information_to_occupants = EL1_impact_weighting_information_to_occupants + \
                                                EL2_impact_weighting_information_to_occupants + \
                                                EL4_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EL_IM_SC_energy_savings = EL1_impact_scores_energy_saving + EL2_impact_scores_energy_saving + \
                                      EL4_impact_scores_energy_saving

        sum_EL_IM_flexibility_for_the_grid_and_storage = EL1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL4_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_IM_SC_comfort = EL1_impact_scores_comfort + EL2_impact_scores_comfort + EL4_impact_scores_comfort

        sum_EL_IM_SC_convenience = EL1_impact_scores_convenience + EL2_impact_scores_convenience + \
                                   EL4_impact_scores_convenience

        sum_EL_IM_SC_wellbeing_and_health = EL1_impact_scores_wellbeing_and_health + \
                                            EL2_impact_scores_wellbeing_and_health  + EL4_impact_scores_wellbeing_and_health

        sum_EL_IM_SC_maintenance_and_fault_prediction = EL1_impact_scores_maintenance_and_fault_prediction + \
                                                        EL2_impact_scores_maintenance_and_fault_prediction + \
                                                        EL4_impact_scores_maintenance_and_fault_prediction

        sum_EL_IM_SC_information_to_occupants = EL1_impact_scores_information_to_occupants + \
                                                EL2_impact_scores_information_to_occupants + \
                                                EL4_impact_scores_information_to_occupants

        # TOTAL
        total_EL_sum_IM_SC = sum_EL_IM_SC_energy_savings + sum_EL_IM_flexibility_for_the_grid_and_storage + \
                             sum_EL_IM_SC_comfort + sum_EL_IM_SC_convenience + sum_EL_IM_SC_wellbeing_and_health + \
                             sum_EL_IM_SC_maintenance_and_fault_prediction + sum_EL_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EL_MAX_OR_SC_EnergySavings = EL1LE_Max_EnergySavings + EL2LE_Max_EnergySavings + EL4LE_Max_EnergySavings

        sum_EL_MAX_OR_SC_Flexibility = EL1LE_Max_Flexibility + EL2LE_Max_Flexibility + EL4LE_Max_Flexibility

        sum_EL_MAX_OR_SC_Comfort = EL1LE_Max_Comfort + EL2LE_Max_Comfort + EL4LE_Max_Comfort

        sum_EL_MAX_OR_SC_Convenience = EL1LE_Max_Convenience + EL2LE_Max_Convenience + EL4LE_Max_Convenience

        sum_EL_MAX_OR_SC_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth + EL2LE_Max_WellbeingAndHealth + \
                                              EL4LE_Max_WellbeingAndHealth

        sum_EL_MAX_OR_SC_Maintenance = EL1LE_Max_Maintenance + EL2LE_Max_Maintenance + EL4LE_Max_Maintenance

        sum_EL_MAX_OR_SC_InformationToOccupants = EL1LE_Max_InformationToOccupants + EL2LE_Max_InformationToOccupants + \
                                                  EL4LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EL_MAX_IM_WE_energy_savings = EL1_Max_SRI_IM_Scores_EnergySavings + EL2_Max_SRI_IM_Scores_EnergySavings + \
                                          EL4_Max_SRI_IM_Scores_EnergySavings

        sum_EL_MAX_IM_WE_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility + \
                                                                EL2_Max_SRI_IM_Scores_Flexibility + \
                                                                EL4_Max_SRI_IM_Scores_Flexibility

        sum_EL_MAX_IM_WE_comfort = EL1_Max_SRI_IM_Scores_Comfort + EL2_Max_SRI_IM_Scores_Comfort + \
                                   EL3_Max_SRI_IM_Scores_Comfort

        sum_EL_MAX_IM_WE_convenience = EL1_Max_SRI_IM_Scores_Convenience + EL2_Max_SRI_IM_Scores_Convenience + \
                                       EL4_Max_SRI_IM_Scores_Convenience

        sum_EL_MAX_IM_WE_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL4_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EL_MAX_IM_WE_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance + \
                                                            EL2_Max_SRI_IM_Scores_Maintenance + \
                                                            EL4_Max_SRI_IM_Scores_Maintenance

        sum_EL_MAX_IM_WE_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL4_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EL_MAX_IM_SC_energy_savings = EL1_Max_impact_scores_energy_saving + EL2_Max_impact_scores_energy_saving + \
                                          EL4_Max_impact_scores_energy_saving

        sum_EL_MAX_IM_flexibility_for_the_grid_and_storage = EL1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL4_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_MAX_IM_SC_comfort = EL1_Max_impact_scores_comfort + EL2_Max_impact_scores_comfort + \
                                   EL4_Max_impact_scores_comfort

        sum_EL_MAX_IM_SC_convenience = EL1_Max_impact_scores_convenience + EL2_Max_impact_scores_convenience + \
                                       EL4_Max_impact_scores_convenience

        sum_EL_MAX_IM_SC_wellbeing_and_health = EL1_Max_impact_scores_wellbeing_and_health + \
                                                EL2_impact_scores_wellbeing_and_health + \
                                                EL4_Max_impact_scores_wellbeing_and_health

        sum_EL_MAX_IM_SC_maintenance_and_fault_prediction = EL1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL4_Max_impact_scores_maintenance_and_fault_prediction

        sum_EL_MAX_IM_SC_information_to_occupants = EL1_Max_impact_scores_information_to_occupants + \
                                                    EL2_Max_impact_scores_information_to_occupants + \
                                                    EL4_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_EL_MAX_sum_IM_SC = sum_EL_MAX_IM_SC_energy_savings + sum_EL_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EL_MAX_IM_SC_comfort + sum_EL_MAX_IM_SC_convenience + sum_EL_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EL_MAX_IM_SC_maintenance_and_fault_prediction + sum_EL_MAX_IM_SC_information_to_occupants

    if RES == "a" and SRES == "b":
        # print electricity-S1, -S2, -S3
        # Electricity-S1
        print("Storage of locally generated energy")
        print("")

        while True:
            EL1LE = input("Choose:\n(a) None."
                          "\n(b) Limited: small scale storage (batteries,TES,..)."
                          "\n(c) Storage which can supply self-consumption for > 3hours."
                          "\n(d) Dynamically operated storage which can also feedback into the grid. "
                          "\n [a/b/c/d]? :")
            if EL1LE in ['a', 'b', 'c', 'd']:
                # if it was equal - break from the while loop
                break

        if EL1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 0
            EL1LE_Comfort = 0
            EL1LE_Convenience = 0
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 1
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 2
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "d":
            print()
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 3
            EL1LE_Comfort = 0
            EL1LE_Convenience = 2
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        # Electricity-S2
        print("")
        print("Electricity Monitoring Systems")
        print("")

        while True:
            EL2LE = input("Choose:\n(a) None."
                          "\n(b) Reporting on current electricity consumption on building level."
                          "\n(c) Real-time feedback or benchmarking on building level."
                          "\n(d) Real-time feedback or benchmarking on appliance level."
                          "\n(e) Real-time feedback or benchmarking on appliance level with automated "
                          "personalized recommendations. \n[a/b/c/d/e]? : ")
            if EL2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 1
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 2
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 1
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 3
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 1
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 2
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        # Electricity-S3
        print("")
        print("Reporting information regarding energy generation")
        print("")

        while True:
            EL3LE = input("Choose:\n(a) None."
                          "\n(b) Current generation data available."
                          "\n(c) Actual values and historical data."
                          "\n(d) Performance evaluation including forecasting and/or benchmarking."
                          "\n(e) Performance evaluation including forecasting and/or benchmarking; "
                          "also including predictive management and fault detection. "
                          "\n[a/b/c/d/e]? : ")
            if EL3LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 0
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 0
            EL3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 1
            EL3LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 1
            EL3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 0
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 1
            EL3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        elif EL3LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL3LE_EnergySavings = 1
            EL3LE_Flexibility = 0
            EL3LE_Comfort = 0
            EL3LE_Convenience = 1
            EL3LE_WellbeingAndHealth = 0
            EL3LE_Maintenance = 2
            EL3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL3LE_Flexibility))
            print("Comfort: " + str(EL3LE_Comfort))
            print("Convenience: " + str(EL3LE_Convenience))
            print("Health & wellbeing: " + str(EL3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL3LE_Maintenance))
            print("Information to occupants: " + str(EL3LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electricity
        EL_WE_energy_savings = 11
        EL_WE_flexibility = 13
        EL_WE_comfort = 0
        EL_WE_convenience = 11
        EL_WE_wellbeing_and_health = 0
        EL_WE_maintenance = 14
        EL_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electricity
        # EL 1
        EL1_impact_weighting_energy_saving = EL1LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_impact_weighting_flexibility_for_the_grid_and_storage = EL1LE_Flexibility * (EL_WE_flexibility / 100)
        EL1_impact_weighting_comfort = EL1LE_Comfort * (EL_WE_comfort / 100)
        EL1_impact_weighting_convenience = EL1LE_Convenience * (EL_WE_convenience / 100)
        EL1_impact_weighting_wellbeing_and_health = EL1LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_impact_weighting_maintenance_and_fault_prediction = EL1LE_Maintenance * (EL_WE_maintenance / 100)
        EL1_impact_weighting_information_to_occupants = EL1LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL1_impact_scores_energy_saving = EL1_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL1_impact_scores_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL1_impact_scores_comfort = EL1_impact_weighting_comfort * IM_energy_savings_on_site

        EL1_impact_scores_convenience = EL1_impact_weighting_convenience * IM_energy_savings_on_site

        EL1_impact_scores_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL1_impact_scores_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL1_impact_scores_information_to_occupants = EL1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL1LE_Max_EnergySavings = 0
        EL1LE_Max_Flexibility = 3
        EL1LE_Max_Comfort = 0
        EL1LE_Max_Convenience = 2
        EL1LE_Max_WellbeingAndHealth = 0
        EL1LE_Max_Maintenance = 0
        EL1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EL1_Max_SRI_IM_Scores_EnergySavings = EL1LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_Max_SRI_IM_Scores_Flexibility = EL1LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL1_Max_SRI_IM_Scores_Comfort = EL1LE_Max_Comfort * (EL_WE_comfort / 100)
        EL1_Max_SRI_IM_Scores_Convenience = EL1LE_Max_Convenience * (EL_WE_convenience / 100)
        EL1_Max_SRI_IM_Scores_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_Max_SRI_IM_Scores_Maintenance = EL1LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL1_Max_SRI_IM_Scores_InformationToOccupants = EL1LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL1_Max_impact_scores_energy_saving = EL1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL1_Max_impact_scores_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL1_Max_impact_scores_comfort = EL1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL1_Max_impact_scores_convenience = EL1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL1_Max_impact_scores_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL1_Max_impact_scores_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL1_Max_impact_scores_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 2
        EL2_impact_weighting_energy_saving = EL2LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_impact_weighting_flexibility_for_the_grid_and_storage = EL2LE_Flexibility * (EL_WE_flexibility / 100)
        EL2_impact_weighting_comfort = EL2LE_Comfort * (EL_WE_comfort / 100)
        EL2_impact_weighting_convenience = EL2LE_Convenience * (EL_WE_convenience / 100)
        EL2_impact_weighting_wellbeing_and_health = EL2LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_impact_weighting_maintenance_and_fault_prediction = EL2LE_Maintenance * (EL_WE_maintenance / 100)
        EL2_impact_weighting_information_to_occupants = EL2LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL2_impact_scores_energy_saving = EL2_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL2_impact_scores_flexibility_for_the_grid_and_storage = EL2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL2_impact_scores_comfort = EL2_impact_weighting_comfort * IM_energy_savings_on_site

        EL2_impact_scores_convenience = EL2_impact_weighting_convenience * IM_energy_savings_on_site

        EL2_impact_scores_wellbeing_and_health = EL2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL2_impact_scores_maintenance_and_fault_prediction = EL2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL2_impact_scores_information_to_occupants = EL2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL2LE_Max_EnergySavings = 3
        EL2LE_Max_Flexibility = 0
        EL2LE_Max_Comfort = 0
        EL2LE_Max_Convenience = 1
        EL2LE_Max_WellbeingAndHealth = 0
        EL2LE_Max_Maintenance = 2
        EL2LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL2_Max_SRI_IM_Scores_EnergySavings = EL2LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_Max_SRI_IM_Scores_Flexibility = EL2LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL2_Max_SRI_IM_Scores_Comfort = EL2LE_Max_Comfort * (EL_WE_comfort / 100)
        EL2_Max_SRI_IM_Scores_Convenience = EL2LE_Max_Convenience * (EL_WE_convenience / 100)
        EL2_Max_SRI_IM_Scores_WellbeingAndHealth = EL2LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_Max_SRI_IM_Scores_Maintenance = EL2LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL2_Max_SRI_IM_Scores_InformationToOccupants = EL2LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL2_Max_impact_scores_energy_saving = EL2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL2_Max_impact_scores_flexibility_for_the_grid_and_storage = EL2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL2_Max_impact_scores_comfort = EL2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL2_Max_impact_scores_convenience = EL2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL2_Max_impact_scores_wellbeing_and_health = EL2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL2_Max_impact_scores_maintenance_and_fault_prediction = EL2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL2_Max_impact_scores_information_to_occupants = EL2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 3
        EL3_impact_weighting_energy_saving = EL3LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL3_impact_weighting_flexibility_for_the_grid_and_storage = EL3LE_Flexibility * (EL_WE_flexibility / 100)
        EL3_impact_weighting_comfort = EL3LE_Comfort * (EL_WE_comfort / 100)
        EL3_impact_weighting_convenience = EL3LE_Convenience * (EL_WE_convenience / 100)
        EL3_impact_weighting_wellbeing_and_health = EL3LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL3_impact_weighting_maintenance_and_fault_prediction = EL3LE_Maintenance * (EL_WE_maintenance / 100)
        EL3_impact_weighting_information_to_occupants = EL3LE_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL3_impact_scores_energy_saving = EL3_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL3_impact_scores_flexibility_for_the_grid_and_storage = EL3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL3_impact_scores_comfort = EL3_impact_weighting_comfort * IM_energy_savings_on_site

        EL3_impact_scores_convenience = EL3_impact_weighting_convenience * IM_energy_savings_on_site

        EL3_impact_scores_wellbeing_and_health = EL3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL3_impact_scores_maintenance_and_fault_prediction = EL3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL3_impact_scores_information_to_occupants = EL3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL3LE_Max_EnergySavings = 1
        EL3LE_Max_Flexibility = 0
        EL3LE_Max_Comfort = 0
        EL3LE_Max_Convenience = 1
        EL3LE_Max_WellbeingAndHealth = 0
        EL3LE_Max_Maintenance = 2
        EL3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL3_Max_SRI_IM_Scores_EnergySavings = EL3LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL3_Max_SRI_IM_Scores_Flexibility = EL3LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL3_Max_SRI_IM_Scores_Comfort = EL3LE_Max_Comfort * (EL_WE_comfort / 100)
        EL3_Max_SRI_IM_Scores_Convenience = EL3LE_Max_Convenience * (EL_WE_convenience / 100)
        EL3_Max_SRI_IM_Scores_WellbeingAndHealth = EL3LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL3_Max_SRI_IM_Scores_Maintenance = EL3LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL3_Max_SRI_IM_Scores_InformationToOccupants = EL3LE_Max_InformationToOccupants * (
                    EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL3_Max_impact_scores_energy_saving = EL3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL3_Max_impact_scores_flexibility_for_the_grid_and_storage = EL3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL3_Max_impact_scores_comfort = EL3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL3_Max_impact_scores_convenience = EL3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL3_Max_impact_scores_wellbeing_and_health = EL3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL3_Max_impact_scores_maintenance_and_fault_prediction = EL3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL3_Max_impact_scores_information_to_occupants = EL3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################

        # SUM ORDINAL SCORES
        sum_EL_OR_SC_EnergySavings = EL1LE_EnergySavings + EL2LE_EnergySavings + EL3LE_EnergySavings

        sum_EL_OR_SC_Flexibility = EL1LE_Flexibility + EL2LE_Flexibility + EL3LE_Flexibility

        sum_EL_OR_SC_Comfort = EL1LE_Comfort + EL2LE_Comfort + EL3LE_Comfort

        sum_EL_OR_SC_Convenience = EL1LE_Convenience + EL2LE_Convenience + EL3LE_Convenience

        sum_EL_OR_SC_WellbeingAndHealth = EL1LE_WellbeingAndHealth + EL2LE_WellbeingAndHealth + EL3LE_WellbeingAndHealth

        sum_EL_OR_SC_Maintenance = EL1LE_Maintenance + EL2LE_Maintenance + EL3LE_Maintenance

        sum_EL_OR_SC_InformationToOccupants = EL1LE_InformationToOccupants + EL2LE_InformationToOccupants + \
                                              EL3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EL_IM_WE_energy_savings = EL1_impact_weighting_energy_saving + EL2_impact_weighting_energy_saving + \
                                      EL3_impact_weighting_energy_saving

        sum_EL_IM_WE_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EL_IM_WE_comfort = EL1_impact_weighting_comfort + EL2_impact_weighting_comfort + EL3_impact_weighting_comfort

        sum_EL_IM_WE_convenience = EL1_impact_weighting_convenience + EL2_impact_weighting_convenience \
                                   + EL3_impact_weighting_convenience

        sum_EL_IM_WE_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health + \
                                            EL2_impact_weighting_wellbeing_and_health + \
                                            EL3_impact_weighting_wellbeing_and_health

        sum_EL_IM_WE_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL2_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL3_impact_weighting_maintenance_and_fault_prediction

        sum_EL_IM_WE_information_to_occupants = EL1_impact_weighting_information_to_occupants + \
                                                EL2_impact_weighting_information_to_occupants + \
                                                EL3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EL_IM_SC_energy_savings = EL1_impact_scores_energy_saving + EL2_impact_scores_energy_saving + \
                                      EL3_impact_scores_energy_saving

        sum_EL_IM_flexibility_for_the_grid_and_storage = EL1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL3_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_IM_SC_comfort = EL1_impact_scores_comfort + EL2_impact_scores_comfort + EL3_impact_scores_comfort

        sum_EL_IM_SC_convenience = EL1_impact_scores_convenience + EL2_impact_scores_convenience + EL3_impact_scores_convenience

        sum_EL_IM_SC_wellbeing_and_health = EL1_impact_scores_wellbeing_and_health + EL2_impact_scores_wellbeing_and_health + \
                                            EL3_impact_scores_wellbeing_and_health

        sum_EL_IM_SC_maintenance_and_fault_prediction = EL1_impact_scores_maintenance_and_fault_prediction + \
                                                        EL2_impact_scores_maintenance_and_fault_prediction + \
                                                        EL3_impact_scores_maintenance_and_fault_prediction

        sum_EL_IM_SC_information_to_occupants = EL1_impact_scores_information_to_occupants + \
                                                EL2_impact_scores_information_to_occupants + \
                                                EL3_impact_scores_information_to_occupants

        # TOTAL
        total_EL_sum_IM_SC = sum_EL_IM_SC_energy_savings + sum_EL_IM_flexibility_for_the_grid_and_storage + \
                             sum_EL_IM_SC_comfort + sum_EL_IM_SC_convenience + sum_EL_IM_SC_wellbeing_and_health + \
                             sum_EL_IM_SC_maintenance_and_fault_prediction + sum_EL_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EL_MAX_OR_SC_EnergySavings = EL1LE_Max_EnergySavings + EL2LE_Max_EnergySavings + EL3LE_Max_EnergySavings

        sum_EL_MAX_OR_SC_Flexibility = EL1LE_Max_Flexibility + EL2LE_Max_Flexibility + EL3LE_Max_Flexibility

        sum_EL_MAX_OR_SC_Comfort = EL1LE_Max_Comfort + EL2LE_Max_Comfort + EL3LE_Max_Comfort

        sum_EL_MAX_OR_SC_Convenience = EL1LE_Max_Convenience + EL2LE_Max_Convenience + EL3LE_Max_Convenience

        sum_EL_MAX_OR_SC_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth + EL2LE_Max_WellbeingAndHealth + \
                                              EL3LE_Max_WellbeingAndHealth

        sum_EL_MAX_OR_SC_Maintenance = EL1LE_Max_Maintenance + EL2LE_Max_Maintenance + EL3LE_Max_Maintenance

        sum_EL_MAX_OR_SC_InformationToOccupants = EL1LE_Max_InformationToOccupants + EL2LE_Max_InformationToOccupants + \
                                                  EL3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EL_MAX_IM_WE_energy_savings = EL1_Max_SRI_IM_Scores_EnergySavings + EL2_Max_SRI_IM_Scores_EnergySavings \
                                          + EL3_Max_SRI_IM_Scores_EnergySavings

        sum_EL_MAX_IM_WE_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility + \
                                                                EL2_Max_SRI_IM_Scores_Flexibility + \
                                                                EL3_Max_SRI_IM_Scores_Flexibility

        sum_EL_MAX_IM_WE_comfort = EL1_Max_SRI_IM_Scores_Comfort + EL2_Max_SRI_IM_Scores_Comfort + EL3_Max_SRI_IM_Scores_Comfort

        sum_EL_MAX_IM_WE_convenience = EL1_Max_SRI_IM_Scores_Convenience + EL2_Max_SRI_IM_Scores_Convenience \
                                       + EL3_Max_SRI_IM_Scores_Convenience

        sum_EL_MAX_IM_WE_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EL_MAX_IM_WE_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance + \
                                                            EL2_Max_SRI_IM_Scores_Maintenance + \
                                                            EL3_Max_SRI_IM_Scores_Maintenance

        sum_EL_MAX_IM_WE_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EL_MAX_IM_SC_energy_savings = EL1_Max_impact_scores_energy_saving + EL2_Max_impact_scores_energy_saving \
                                          + EL3_Max_impact_scores_energy_saving

        sum_EL_MAX_IM_flexibility_for_the_grid_and_storage = EL1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_MAX_IM_SC_comfort = EL1_Max_impact_scores_comfort + EL2_Max_impact_scores_comfort + \
                                   EL3_Max_impact_scores_comfort

        sum_EL_MAX_IM_SC_convenience = EL1_Max_impact_scores_convenience + EL2_Max_impact_scores_convenience \
                                       + EL3_Max_impact_scores_convenience

        sum_EL_MAX_IM_SC_wellbeing_and_health = EL1_Max_impact_scores_wellbeing_and_health + \
                                                EL2_impact_scores_wellbeing_and_health + \
                                                EL3_Max_impact_scores_wellbeing_and_health

        sum_EL_MAX_IM_SC_maintenance_and_fault_prediction = EL1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL3_Max_impact_scores_maintenance_and_fault_prediction

        sum_EL_MAX_IM_SC_information_to_occupants = EL1_Max_impact_scores_information_to_occupants + \
                                                    EL2_Max_impact_scores_information_to_occupants + \
                                                    EL3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_EL_MAX_sum_IM_SC = sum_EL_MAX_IM_SC_energy_savings + sum_EL_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EL_MAX_IM_SC_comfort + sum_EL_MAX_IM_SC_convenience + sum_EL_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EL_MAX_IM_SC_maintenance_and_fault_prediction + sum_EL_MAX_IM_SC_information_to_occupants

    if RES == "b" and SRES == "b":
        # Print Electricity-S1, -S2
        # Electricity-S1
        print("Storage of locally generated energy")
        print("")

        while True:
            EL1LE = input("Choose:\n(a) None."
                          "\n(b) Limited: small scale storage (batteries,TES,..)."
                          "\n(c) Storage which can supply self-consumption for > 3hours."
                          "\n(d) Dynamically operated storage which can also feedback into the grid. "
                          "\n [a/b/c/d]? :")
            if EL1LE in ['a', 'b', 'c', 'd']:
                # if it was equal - break from the while loop
                break

        if EL1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 0
            EL1LE_Comfort = 0
            EL1LE_Convenience = 0
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 1
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 2
            EL1LE_Comfort = 0
            EL1LE_Convenience = 1
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        elif EL1LE == "d":
            print()
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL1LE_EnergySavings = 0
            EL1LE_Flexibility = 3
            EL1LE_Comfort = 0
            EL1LE_Convenience = 2
            EL1LE_WellbeingAndHealth = 0
            EL1LE_Maintenance = 0
            EL1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL1LE_Flexibility))
            print("Comfort: " + str(EL1LE_Comfort))
            print("Convenience: " + str(EL1LE_Convenience))
            print("Health & wellbeing: " + str(EL1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL1LE_Maintenance))
            print("Information to occupants: " + str(EL1LE_InformationToOccupants))
            print("")

        # Electricity-S2
        print("")
        print("Electricity Monitoring Systems")
        print("")

        while True:
            EL2LE = input("Choose:\n(a) None."
                          "\n(b) Reporting on current electricity consumption on building level."
                          "\n(c) Real-time feedback or benchmarking on building level."
                          "\n(d) Real-time feedback or benchmarking on appliance level."
                          "\n(e) Real-time feedback or benchmarking on appliance level with automated "
                          "personalized recommendations. \n[a/b/c/d/e]? : ")
            if EL2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EL2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 0
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 1

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 1
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 0
            EL2LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 2
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 0
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 1
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        elif EL2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EL2LE_EnergySavings = 3
            EL2LE_Flexibility = 0
            EL2LE_Comfort = 0
            EL2LE_Convenience = 1
            EL2LE_WellbeingAndHealth = 0
            EL2LE_Maintenance = 2
            EL2LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EL2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EL2LE_Flexibility))
            print("Comfort: " + str(EL2LE_Comfort))
            print("Convenience: " + str(EL2LE_Convenience))
            print("Health & wellbeing: " + str(EL2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EL2LE_Maintenance))
            print("Information to occupants: " + str(EL2LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electricity
        EL_WE_energy_savings = 11
        EL_WE_flexibility = 13
        EL_WE_comfort = 0
        EL_WE_convenience = 11
        EL_WE_wellbeing_and_health = 0
        EL_WE_maintenance = 14
        EL_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electricity
        # EL 1
        EL1_impact_weighting_energy_saving = EL1LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_impact_weighting_flexibility_for_the_grid_and_storage = EL1LE_Flexibility * (EL_WE_flexibility / 100)
        EL1_impact_weighting_comfort = EL1LE_Comfort * (EL_WE_comfort / 100)
        EL1_impact_weighting_convenience = EL1LE_Convenience * (EL_WE_convenience / 100)
        EL1_impact_weighting_wellbeing_and_health = EL1LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_impact_weighting_maintenance_and_fault_prediction = EL1LE_Maintenance * (EL_WE_maintenance / 100)
        EL1_impact_weighting_information_to_occupants = EL1LE_InformationToOccupants * (
                EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL1_impact_scores_energy_saving = EL1_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL1_impact_scores_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL1_impact_scores_comfort = EL1_impact_weighting_comfort * IM_energy_savings_on_site

        EL1_impact_scores_convenience = EL1_impact_weighting_convenience * IM_energy_savings_on_site

        EL1_impact_scores_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL1_impact_scores_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL1_impact_scores_information_to_occupants = EL1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL1LE_Max_EnergySavings = 0
        EL1LE_Max_Flexibility = 3
        EL1LE_Max_Comfort = 0
        EL1LE_Max_Convenience = 2
        EL1LE_Max_WellbeingAndHealth = 0
        EL1LE_Max_Maintenance = 0
        EL1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EL1_Max_SRI_IM_Scores_EnergySavings = EL1LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL1_Max_SRI_IM_Scores_Flexibility = EL1LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL1_Max_SRI_IM_Scores_Comfort = EL1LE_Max_Comfort * (EL_WE_comfort / 100)
        EL1_Max_SRI_IM_Scores_Convenience = EL1LE_Max_Convenience * (EL_WE_convenience / 100)
        EL1_Max_SRI_IM_Scores_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL1_Max_SRI_IM_Scores_Maintenance = EL1LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL1_Max_SRI_IM_Scores_InformationToOccupants = EL1LE_Max_InformationToOccupants * (
                EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL1_Max_impact_scores_energy_saving = EL1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL1_Max_impact_scores_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL1_Max_impact_scores_comfort = EL1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL1_Max_impact_scores_convenience = EL1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL1_Max_impact_scores_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL1_Max_impact_scores_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL1_Max_impact_scores_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EL 2
        EL2_impact_weighting_energy_saving = EL2LE_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_impact_weighting_flexibility_for_the_grid_and_storage = EL2LE_Flexibility * (EL_WE_flexibility / 100)
        EL2_impact_weighting_comfort = EL2LE_Comfort * (EL_WE_comfort / 100)
        EL2_impact_weighting_convenience = EL2LE_Convenience * (EL_WE_convenience / 100)
        EL2_impact_weighting_wellbeing_and_health = EL2LE_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_impact_weighting_maintenance_and_fault_prediction = EL2LE_Maintenance * (EL_WE_maintenance / 100)
        EL2_impact_weighting_information_to_occupants = EL2LE_InformationToOccupants * (
                EL_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EL2_impact_scores_energy_saving = EL2_impact_weighting_energy_saving * IM_energy_savings_on_site

        EL2_impact_scores_flexibility_for_the_grid_and_storage = EL2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EL2_impact_scores_comfort = EL2_impact_weighting_comfort * IM_energy_savings_on_site

        EL2_impact_scores_convenience = EL2_impact_weighting_convenience * IM_energy_savings_on_site

        EL2_impact_scores_wellbeing_and_health = EL2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EL2_impact_scores_maintenance_and_fault_prediction = EL2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EL2_impact_scores_information_to_occupants = EL2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EL2LE_Max_EnergySavings = 3
        EL2LE_Max_Flexibility = 0
        EL2LE_Max_Comfort = 0
        EL2LE_Max_Convenience = 1
        EL2LE_Max_WellbeingAndHealth = 0
        EL2LE_Max_Maintenance = 2
        EL2LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EL2_Max_SRI_IM_Scores_EnergySavings = EL2LE_Max_EnergySavings * (EL_WE_energy_savings / 100)
        EL2_Max_SRI_IM_Scores_Flexibility = EL2LE_Max_Flexibility * (EL_WE_flexibility / 100)
        EL2_Max_SRI_IM_Scores_Comfort = EL2LE_Max_Comfort * (EL_WE_comfort / 100)
        EL2_Max_SRI_IM_Scores_Convenience = EL2LE_Max_Convenience * (EL_WE_convenience / 100)
        EL2_Max_SRI_IM_Scores_WellbeingAndHealth = EL2LE_Max_WellbeingAndHealth * (EL_WE_wellbeing_and_health / 100)
        EL2_Max_SRI_IM_Scores_Maintenance = EL2LE_Max_Maintenance * (EL_WE_maintenance / 100)
        EL2_Max_SRI_IM_Scores_InformationToOccupants = EL2LE_Max_InformationToOccupants * (
                EL_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EL2_Max_impact_scores_energy_saving = EL2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EL2_Max_impact_scores_flexibility_for_the_grid_and_storage = EL2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EL2_Max_impact_scores_comfort = EL2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EL2_Max_impact_scores_convenience = EL2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EL2_Max_impact_scores_wellbeing_and_health = EL2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EL2_Max_impact_scores_maintenance_and_fault_prediction = EL2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EL2_Max_impact_scores_information_to_occupants = EL2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################

        # SUM ORDINAL SCORES
        sum_EL_OR_SC_EnergySavings = EL1LE_EnergySavings + EL2LE_EnergySavings

        sum_EL_OR_SC_Flexibility = EL1LE_Flexibility + EL2LE_Flexibility

        sum_EL_OR_SC_Comfort = EL1LE_Comfort + EL2LE_Comfort

        sum_EL_OR_SC_Convenience = EL1LE_Convenience + EL2LE_Convenience

        sum_EL_OR_SC_WellbeingAndHealth = EL1LE_WellbeingAndHealth + EL2LE_WellbeingAndHealth

        sum_EL_OR_SC_Maintenance = EL1LE_Maintenance + EL2LE_Maintenance

        sum_EL_OR_SC_InformationToOccupants = EL1LE_InformationToOccupants + EL2LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EL_IM_WE_energy_savings = EL1_impact_weighting_energy_saving + EL2_impact_weighting_energy_saving

        sum_EL_IM_WE_flexibility_for_the_grid_and_storage = EL1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EL2_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EL_IM_WE_comfort = EL1_impact_weighting_comfort + EL2_impact_weighting_comfort

        sum_EL_IM_WE_convenience = EL1_impact_weighting_convenience + EL2_impact_weighting_convenience

        sum_EL_IM_WE_wellbeing_and_health = EL1_impact_weighting_wellbeing_and_health + \
                                            EL2_impact_weighting_wellbeing_and_health

        sum_EL_IM_WE_maintenance_and_fault_prediction = EL1_impact_weighting_maintenance_and_fault_prediction + \
                                                        EL2_impact_weighting_maintenance_and_fault_prediction

        sum_EL_IM_WE_information_to_occupants = EL1_impact_weighting_information_to_occupants + \
                                                EL2_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EL_IM_SC_energy_savings = EL1_impact_scores_energy_saving + EL2_impact_scores_energy_saving

        sum_EL_IM_flexibility_for_the_grid_and_storage = EL1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EL2_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_IM_SC_comfort = EL1_impact_scores_comfort + EL2_impact_scores_comfort

        sum_EL_IM_SC_convenience = EL1_impact_scores_convenience + EL2_impact_scores_convenience

        sum_EL_IM_SC_wellbeing_and_health = EL1_impact_scores_wellbeing_and_health + EL2_impact_scores_wellbeing_and_health

        sum_EL_IM_SC_maintenance_and_fault_prediction = EL1_impact_scores_maintenance_and_fault_prediction + \
                                                        EL2_impact_scores_maintenance_and_fault_prediction

        sum_EL_IM_SC_information_to_occupants = EL1_impact_scores_information_to_occupants + \
                                                EL2_impact_scores_information_to_occupants

        # TOTAL
        total_EL_sum_IM_SC = sum_EL_IM_SC_energy_savings + sum_EL_IM_flexibility_for_the_grid_and_storage + \
                             sum_EL_IM_SC_comfort + sum_EL_IM_SC_convenience + sum_EL_IM_SC_wellbeing_and_health + \
                             sum_EL_IM_SC_maintenance_and_fault_prediction + sum_EL_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EL_MAX_OR_SC_EnergySavings = EL1LE_Max_EnergySavings + EL2LE_Max_EnergySavings

        sum_EL_MAX_OR_SC_Flexibility = EL1LE_Max_Flexibility + EL2LE_Max_Flexibility

        sum_EL_MAX_OR_SC_Comfort = EL1LE_Max_Comfort + EL2LE_Max_Comfort

        sum_EL_MAX_OR_SC_Convenience = EL1LE_Max_Convenience + EL2LE_Max_Convenience

        sum_EL_MAX_OR_SC_WellbeingAndHealth = EL1LE_Max_WellbeingAndHealth + EL2LE_Max_WellbeingAndHealth

        sum_EL_MAX_OR_SC_Maintenance = EL1LE_Max_Maintenance + EL2LE_Max_Maintenance

        sum_EL_MAX_OR_SC_InformationToOccupants = EL1LE_Max_InformationToOccupants + EL2LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EL_MAX_IM_WE_energy_savings = EL1_Max_SRI_IM_Scores_EnergySavings + EL2_Max_SRI_IM_Scores_EnergySavings

        sum_EL_MAX_IM_WE_flexibility_for_the_grid_and_storage = EL1_Max_SRI_IM_Scores_Flexibility + \
                                                                EL2_Max_SRI_IM_Scores_Flexibility

        sum_EL_MAX_IM_WE_comfort = EL1_Max_SRI_IM_Scores_Comfort + EL2_Max_SRI_IM_Scores_Comfort

        sum_EL_MAX_IM_WE_convenience = EL1_Max_SRI_IM_Scores_Convenience + EL2_Max_SRI_IM_Scores_Convenience

        sum_EL_MAX_IM_WE_wellbeing_and_health = EL1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EL2_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EL_MAX_IM_WE_maintenance_and_fault_prediction = EL1_Max_SRI_IM_Scores_Maintenance + \
                                                            EL2_Max_SRI_IM_Scores_Maintenance

        sum_EL_MAX_IM_WE_information_to_occupants = EL1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EL2_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EL_MAX_IM_SC_energy_savings = EL1_Max_impact_scores_energy_saving + EL2_Max_impact_scores_energy_saving

        sum_EL_MAX_IM_flexibility_for_the_grid_and_storage = EL1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EL2_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EL_MAX_IM_SC_comfort = EL1_Max_impact_scores_comfort + EL2_Max_impact_scores_comfort

        sum_EL_MAX_IM_SC_convenience = EL1_Max_impact_scores_convenience + EL2_Max_impact_scores_convenience

        sum_EL_MAX_IM_SC_wellbeing_and_health = EL1_Max_impact_scores_wellbeing_and_health + \
                                                EL2_impact_scores_wellbeing_and_health

        sum_EL_MAX_IM_SC_maintenance_and_fault_prediction = EL1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EL2_Max_impact_scores_maintenance_and_fault_prediction

        sum_EL_MAX_IM_SC_information_to_occupants = EL1_Max_impact_scores_information_to_occupants + \
                                                    EL2_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_EL_MAX_sum_IM_SC = sum_EL_MAX_IM_SC_energy_savings + sum_EL_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EL_MAX_IM_SC_comfort + sum_EL_MAX_IM_SC_convenience + sum_EL_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EL_MAX_IM_SC_maintenance_and_fault_prediction + sum_EL_MAX_IM_SC_information_to_occupants

if EL == "b":
    # SUM ORDINAL SCORES
    sum_EL_OR_SC_EnergySavings = 0
    sum_EL_OR_SC_Flexibility = 0
    sum_EL_OR_SC_Comfort = 0
    sum_EL_OR_SC_Convenience = 0
    sum_EL_OR_SC_WellbeingAndHealth = 0
    sum_EL_OR_SC_Maintenance = 0
    sum_EL_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_EL_IM_WE_energy_savings = 0
    sum_EL_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_EL_IM_WE_comfort = 0
    sum_EL_IM_WE_convenience = 0
    sum_EL_IM_WE_wellbeing_and_health = 0
    sum_EL_IM_WE_maintenance_and_fault_prediction = 0
    sum_EL_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_EL_IM_SC_energy_savings = 0
    sum_EL_IM_flexibility_for_the_grid_and_storage = 0
    sum_EL_IM_SC_comfort = 0
    sum_EL_IM_SC_convenience = 0
    sum_EL_IM_SC_wellbeing_and_health = 0
    sum_EL_IM_SC_maintenance_and_fault_prediction = 0
    sum_EL_IM_SC_information_to_occupants = 0

    # TOTAL
    total_EL_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_EL_MAX_OR_SC_EnergySavings = 0
    sum_EL_MAX_OR_SC_Flexibility = 0
    sum_EL_MAX_OR_SC_Comfort = 0
    sum_EL_MAX_OR_SC_Convenience = 0
    sum_EL_MAX_OR_SC_WellbeingAndHealth = 0
    sum_EL_MAX_OR_SC_Maintenance = 0
    sum_EL_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_EL_MAX_IM_WE_energy_savings = 0
    sum_EL_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_EL_MAX_IM_WE_comfort = 0
    sum_EL_MAX_IM_WE_convenience = 0
    sum_EL_MAX_IM_WE_wellbeing_and_health = 0
    sum_EL_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_EL_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_EL_MAX_IM_SC_energy_savings = 0
    sum_EL_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_EL_MAX_IM_SC_comfort = 0
    sum_EL_MAX_IM_SC_convenience = 0
    sum_EL_MAX_IM_SC_wellbeing_and_health = 0
    sum_EL_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_EL_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_EL_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Electric Vehicle Charging")
    print("")
    EV = input("Electric Vehicle Charging \n(a) yes \n(b) no \n[a/b]?: ")

    if EV in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if EV == "a":
    while True:
        print("")
        OSS = input("On-site parking spots \n(a) On-site renewable electricity generation."
                    "\n(b) No On-site renewable electricity generation. \n[a/b]? :")
        if OSS in ['a', 'b']:
            # if it was equal - break from the while loop
            break
    while True:
        print("")
        EVCS = input("Electric vehicle charging spots \n(a) Present."
                     "\n(b) Not Present. \n[a/b]? :")

        if EVCS in ['a', 'b']:
            # if it was equal - break from the while loop
            break
    if OSS == "a" and EVCS == "a":
        print("")
        # EV-S1
        print("Number of charging spaces")
        print("")

        while True:
            EV1LE = input("Choose:\n(a) Not present."
                          "\n(b) Ducting (or simple power plug) available."
                          "\n(c) 0-9% of parking spaces has recharging points."
                          "\n(d) 10-50% or parking spaces has recharging point."
                          "\n(e) >50% of parking spaces has recharging point. \n[a/b/c/d/e]? : ")
            if EV1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EV1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 0
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 1
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 1
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 2
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 3
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        # EV-S3
        print("EV Charging Grid balancing")
        print("")

        while True:
            EV2LE = input("Choose:\n(a) None."
                          "\n(b) Uncontrolled charging."
                          "\n(c) 1-way charging controlled locally."
                          "\n(d) 1-way charging controlled grid."
                          "\n(e) 2-way charging controlled grid."
                          "\n[a/b/c/d/e]? : ")
            if EV2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EV2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 0
            EV2LE_Comfort = 0
            EV2LE_Convenience = 0
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 1
            EV2LE_Comfort = 0
            EV2LE_Convenience = 1
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 3
            EV2LE_Comfort = 0
            EV2LE_Convenience = 1
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 0
            EV2LE_Comfort = 0
            EV2LE_Convenience = 0
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 0
            EV2LE_Comfort = 0
            EV2LE_Convenience = 0
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        # EV-S4
        print("EV Charging information and connectivity")
        print("")
        while True:
            EV3LE = input("Choose:\n(a) No information available."
                          "\n(b) Reporting information on EV charging status to occupant."
                          "\n(c) Communication with a back-office compliant to ISO 15118."
                          "\n[a/b/c?] : ")
            if EV3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if EV3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EV3LE_EnergySavings = 0
            EV3LE_Flexibility = 0
            EV3LE_Comfort = 0
            EV3LE_Convenience = 0
            EV3LE_WellbeingAndHealth = 0
            EV3LE_Maintenance = 0
            EV3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV3LE_Flexibility))
            print("Comfort: " + str(EV3LE_Comfort))
            print("Convenience: " + str(EV3LE_Convenience))
            print("Health & wellbeing: " + str(EV3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV3LE_Maintenance))
            print("Information to occupants: " + str(EV3LE_InformationToOccupants))
            print("")

        elif EV3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EV3LE_EnergySavings = 0
            EV3LE_Flexibility = 0
            EV3LE_Comfort = 0
            EV3LE_Convenience = 1
            EV3LE_WellbeingAndHealth = 0
            EV3LE_Maintenance = 0
            EV3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EV3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV3LE_Flexibility))
            print("Comfort: " + str(EV3LE_Comfort))
            print("Convenience: " + str(EV3LE_Convenience))
            print("Health & wellbeing: " + str(EV3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV3LE_Maintenance))
            print("Information to occupants: " + str(EV3LE_InformationToOccupants))
            print("")

        elif EV3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EV3LE_EnergySavings = 0
            EV3LE_Flexibility = 1
            EV3LE_Comfort = 0
            EV3LE_Convenience = 1
            EV3LE_WellbeingAndHealth = 0
            EV3LE_Maintenance = 0
            EV3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EV3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV3LE_Flexibility))
            print("Comfort: " + str(EV3LE_Comfort))
            print("Convenience: " + str(EV3LE_Convenience))
            print("Health & wellbeing: " + str(EV3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV3LE_Maintenance))
            print("Information to occupants: " + str(EV3LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electric Vehicle
        EV_WE_energy_savings = 11
        EV_WE_flexibility = 13
        EV_WE_comfort = 0
        EV_WE_convenience = 11
        EV_WE_wellbeing_and_health = 0
        EV_WE_maintenance = 0
        EV_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electric Vehicle
        # EV 1
        EV1_impact_weighting_energy_saving = EV1LE_EnergySavings * (EV_WE_energy_savings / 100)
        EV1_impact_weighting_flexibility_for_the_grid_and_storage = EV1LE_Flexibility * (EV_WE_flexibility / 100)
        EV1_impact_weighting_comfort = EV1LE_Comfort * (EV_WE_comfort / 100)
        EV1_impact_weighting_convenience = EV1LE_Convenience * (EV_WE_convenience / 100)
        EV1_impact_weighting_wellbeing_and_health = EV1LE_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV1_impact_weighting_maintenance_and_fault_prediction = EV1LE_Maintenance * (EV_WE_maintenance / 100)
        EV1_impact_weighting_information_to_occupants = EV1LE_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EV1_impact_scores_energy_saving = EV1_impact_weighting_energy_saving * IM_energy_savings_on_site

        EV1_impact_scores_flexibility_for_the_grid_and_storage = EV1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EV1_impact_scores_comfort = EV1_impact_weighting_comfort * IM_energy_savings_on_site

        EV1_impact_scores_convenience = EV1_impact_weighting_convenience * IM_energy_savings_on_site

        EV1_impact_scores_wellbeing_and_health = EV1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EV1_impact_scores_maintenance_and_fault_prediction = EV1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EV1_impact_scores_information_to_occupants = EV1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EV1LE_Max_EnergySavings = 0
        EV1LE_Max_Flexibility = 0
        EV1LE_Max_Comfort = 0
        EV1LE_Max_Convenience = 3
        EV1LE_Max_WellbeingAndHealth = 0
        EV1LE_Max_Maintenance = 0
        EV1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EV1_Max_SRI_IM_Scores_EnergySavings = EV1LE_Max_EnergySavings * (EV_WE_energy_savings / 100)
        EV1_Max_SRI_IM_Scores_Flexibility = EV1LE_Max_Flexibility * (EV_WE_flexibility / 100)
        EV1_Max_SRI_IM_Scores_Comfort = EV1LE_Max_Comfort * (EV_WE_comfort / 100)
        EV1_Max_SRI_IM_Scores_Convenience = EV1LE_Max_Convenience * (EV_WE_convenience / 100)
        EV1_Max_SRI_IM_Scores_WellbeingAndHealth = EV1LE_Max_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV1_Max_SRI_IM_Scores_Maintenance = EV1LE_Max_Maintenance * (EV_WE_maintenance / 100)
        EV1_Max_SRI_IM_Scores_InformationToOccupants = EV1LE_Max_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EV1_Max_impact_scores_energy_saving = EV1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EV1_Max_impact_scores_flexibility_for_the_grid_and_storage = EV1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EV1_Max_impact_scores_comfort = EV1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EV1_Max_impact_scores_convenience = EV1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EV1_Max_impact_scores_wellbeing_and_health = EV1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EV1_Max_impact_scores_maintenance_and_fault_prediction = EV1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EV1_Max_impact_scores_information_to_occupants = EV1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EV 2
        EV2_impact_weighting_energy_saving = EV2LE_EnergySavings * (EV_WE_energy_savings / 100)

        EV2_impact_weighting_flexibility_for_the_grid_and_storage = EV2LE_Flexibility * (EV_WE_flexibility / 100)

        EV2_impact_weighting_comfort = EV2LE_Comfort * (EV_WE_comfort / 100)

        EV2_impact_weighting_convenience = EV2LE_Convenience * (EV_WE_convenience / 100)

        EV2_impact_weighting_wellbeing_and_health = EV2LE_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)

        EV2_impact_weighting_maintenance_and_fault_prediction = EV2LE_Maintenance * (EV_WE_maintenance / 100)

        EV2_impact_weighting_information_to_occupants = EV2LE_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EV2_impact_scores_energy_saving = EV2_impact_weighting_energy_saving * IM_energy_savings_on_site

        EV2_impact_scores_flexibility_for_the_grid_and_storage = EV2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EV2_impact_scores_comfort = EV2_impact_weighting_comfort * IM_energy_savings_on_site

        EV2_impact_scores_convenience = EV2_impact_weighting_convenience * IM_energy_savings_on_site

        EV2_impact_scores_wellbeing_and_health = EV2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EV2_impact_scores_maintenance_and_fault_prediction = EV2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EV2_impact_scores_information_to_occupants = EV2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EV2LE_Max_EnergySavings = 0
        EV2LE_Max_Flexibility = 3
        EV2LE_Max_Comfort = 0
        EV2LE_Max_Convenience = 1
        EV2LE_Max_WellbeingAndHealth = 0
        EV2LE_Max_Maintenance = 0
        EV2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EV2_Max_SRI_IM_Scores_EnergySavings = EV2LE_Max_EnergySavings * (EV_WE_energy_savings / 100)
        EV2_Max_SRI_IM_Scores_Flexibility = EV2LE_Max_Flexibility * (EV_WE_flexibility / 100)
        EV2_Max_SRI_IM_Scores_Comfort = EV2LE_Max_Comfort * (EV_WE_comfort / 100)
        EV2_Max_SRI_IM_Scores_Convenience = EV2LE_Max_Convenience * (EV_WE_convenience / 100)
        EV2_Max_SRI_IM_Scores_WellbeingAndHealth = EV2LE_Max_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV2_Max_SRI_IM_Scores_Maintenance = EV2LE_Max_Maintenance * (EV_WE_maintenance / 100)
        EV2_Max_SRI_IM_Scores_InformationToOccupants = EV2LE_Max_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EV2_Max_impact_scores_energy_saving = EV2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EV2_Max_impact_scores_flexibility_for_the_grid_and_storage = EV2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EV2_Max_impact_scores_comfort = EV2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EV2_Max_impact_scores_convenience = EV2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EV2_Max_impact_scores_wellbeing_and_health = EV2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EV2_Max_impact_scores_maintenance_and_fault_prediction = EV2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EV2_Max_impact_scores_information_to_occupants = EV2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EV 3
        EV3_impact_weighting_energy_saving = EV3LE_EnergySavings * (EV_WE_energy_savings / 100)
        EV3_impact_weighting_flexibility_for_the_grid_and_storage = EV3LE_Flexibility * (EV_WE_flexibility / 100)
        EV3_impact_weighting_comfort = EV3LE_Comfort * (EV_WE_comfort / 100)
        EV3_impact_weighting_convenience = EV3LE_Convenience * (EV_WE_convenience / 100)
        EV3_impact_weighting_wellbeing_and_health = EV3LE_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV3_impact_weighting_maintenance_and_fault_prediction = EV3LE_Maintenance * (EV_WE_maintenance / 100)
        EV3_impact_weighting_information_to_occupants = EV3LE_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EV3_impact_scores_energy_saving = EV3_impact_weighting_energy_saving * IM_energy_savings_on_site

        EV3_impact_scores_flexibility_for_the_grid_and_storage = EV3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EV3_impact_scores_comfort = EV3_impact_weighting_comfort * IM_energy_savings_on_site

        EV3_impact_scores_convenience = EV3_impact_weighting_convenience * IM_energy_savings_on_site

        EV3_impact_scores_wellbeing_and_health = EV3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EV3_impact_scores_maintenance_and_fault_prediction = EV3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EV3_impact_scores_information_to_occupants = EV3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EV3LE_Max_EnergySavings = 0
        EV3LE_Max_Flexibility = 1
        EV3LE_Max_Comfort = 0
        EV3LE_Max_Convenience = 1
        EV3LE_Max_WellbeingAndHealth = 0
        EV3LE_Max_Maintenance = 0
        EV3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EV3_Max_SRI_IM_Scores_EnergySavings = EV3LE_Max_EnergySavings * (EV_WE_energy_savings / 100)
        EV3_Max_SRI_IM_Scores_Flexibility = EV3LE_Max_Flexibility * (EV_WE_flexibility / 100)
        EV3_Max_SRI_IM_Scores_Comfort = EV3LE_Max_Comfort * (EV_WE_comfort / 100)
        EV3_Max_SRI_IM_Scores_Convenience = EV3LE_Max_Convenience * (EV_WE_convenience / 100)
        EV3_Max_SRI_IM_Scores_WellbeingAndHealth = EV3LE_Max_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV3_Max_SRI_IM_Scores_Maintenance = EV3LE_Max_Maintenance * (EV_WE_maintenance / 100)
        EV3_Max_SRI_IM_Scores_InformationToOccupants = EV3LE_Max_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EV3_Max_impact_scores_energy_saving = EV3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EV3_Max_impact_scores_flexibility_for_the_grid_and_storage = EV3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EV3_Max_impact_scores_comfort = EV3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EV3_Max_impact_scores_convenience = EV3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EV3_Max_impact_scores_wellbeing_and_health = EV3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EV3_Max_impact_scores_maintenance_and_fault_prediction = EV3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EV3_Max_impact_scores_information_to_occupants = EV3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_EV_OR_SC_EnergySavings = EV1LE_EnergySavings + EV2LE_EnergySavings + EV3LE_EnergySavings

        sum_EV_OR_SC_Flexibility = EV1LE_Flexibility + EV2LE_Flexibility + EV3LE_Flexibility

        sum_EV_OR_SC_Comfort = EV1LE_Comfort + EV2LE_Comfort + EV3LE_Comfort

        sum_EV_OR_SC_Convenience = EV1LE_Convenience + EV2LE_Convenience + EV3LE_Convenience

        sum_EV_OR_SC_WellbeingAndHealth = EV1LE_WellbeingAndHealth + EV2LE_WellbeingAndHealth + EV3LE_WellbeingAndHealth

        sum_EV_OR_SC_Maintenance = EV1LE_Maintenance + EV2LE_Maintenance + EV3LE_Maintenance

        sum_EV_OR_SC_InformationToOccupants = EV1LE_InformationToOccupants + EV2LE_InformationToOccupants + \
                                              EV3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EV_IM_WE_energy_savings = EV1_impact_weighting_energy_saving + EV2_impact_weighting_energy_saving + \
                                      EV3_impact_weighting_energy_saving

        sum_EV_IM_WE_flexibility_for_the_grid_and_storage = EV1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EV2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EV3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EV_IM_WE_comfort = EV1_impact_weighting_comfort + EV2_impact_weighting_comfort + EV3_impact_weighting_comfort

        sum_EV_IM_WE_convenience = EV1_impact_weighting_convenience + EV2_impact_weighting_convenience \
                                   + EV3_impact_weighting_convenience

        sum_EV_IM_WE_wellbeing_and_health = EV1_impact_weighting_wellbeing_and_health + \
                                            EV2_impact_weighting_wellbeing_and_health + \
                                            EV3_impact_weighting_wellbeing_and_health

        sum_EV_IM_WE_maintenance_and_fault_prediction = EV1_impact_weighting_maintenance_and_fault_prediction + \
                                                        EV2_impact_weighting_maintenance_and_fault_prediction + \
                                                        EV3_impact_weighting_maintenance_and_fault_prediction

        sum_EV_IM_WE_information_to_occupants = EV1_impact_weighting_information_to_occupants + \
                                                EV2_impact_weighting_information_to_occupants + \
                                                EV3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EV_IM_SC_energy_savings = EV1_impact_scores_energy_saving + EV2_impact_scores_energy_saving + \
                                      EV3_impact_scores_energy_saving

        sum_EV_IM_flexibility_for_the_grid_and_storage = EV1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EV2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EV3_impact_scores_flexibility_for_the_grid_and_storage

        sum_EV_IM_SC_comfort = EV1_impact_scores_comfort + EV2_impact_scores_comfort + EV3_impact_scores_comfort

        sum_EV_IM_SC_convenience = EV1_impact_scores_convenience + EV2_impact_scores_convenience + EV3_impact_scores_convenience

        sum_EV_IM_SC_wellbeing_and_health = EV1_impact_scores_wellbeing_and_health + EV2_impact_scores_wellbeing_and_health + \
                                            EV3_impact_scores_wellbeing_and_health

        sum_EV_IM_SC_maintenance_and_fault_prediction = EV1_impact_scores_maintenance_and_fault_prediction + \
                                                        EV2_impact_scores_maintenance_and_fault_prediction + \
                                                        EV3_impact_scores_maintenance_and_fault_prediction

        sum_EV_IM_SC_information_to_occupants = EV1_impact_scores_information_to_occupants + \
                                                EV2_impact_scores_information_to_occupants + \
                                                EV3_impact_scores_information_to_occupants

        # TOTAL
        total_EV_sum_IM_SC = sum_EV_IM_SC_energy_savings + sum_EV_IM_flexibility_for_the_grid_and_storage + \
                             sum_EV_IM_SC_comfort + sum_EV_IM_SC_convenience + sum_EV_IM_SC_wellbeing_and_health + \
                             sum_EV_IM_SC_maintenance_and_fault_prediction + sum_EV_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EV_MAX_OR_SC_EnergySavings = EV1LE_Max_EnergySavings + EV2LE_Max_EnergySavings + EV3LE_Max_EnergySavings

        sum_EV_MAX_OR_SC_Flexibility = EV1LE_Max_Flexibility + EV2LE_Max_Flexibility + EV3LE_Max_Flexibility

        sum_EV_MAX_OR_SC_Comfort = EV1LE_Max_Comfort + EV2LE_Max_Comfort + EV3LE_Max_Comfort

        sum_EV_MAX_OR_SC_Convenience = EV1LE_Max_Convenience + EV2LE_Max_Convenience + EV3LE_Max_Convenience

        sum_EV_MAX_OR_SC_WellbeingAndHealth = EV1LE_Max_WellbeingAndHealth + EV2LE_Max_WellbeingAndHealth + \
                                              EV3LE_Max_WellbeingAndHealth

        sum_EV_MAX_OR_SC_Maintenance = EV1LE_Max_Maintenance + EV2LE_Max_Maintenance + EV3LE_Max_Maintenance

        sum_EV_MAX_OR_SC_InformationToOccupants = EV1LE_Max_InformationToOccupants + EV2LE_Max_InformationToOccupants + \
                                                  EV3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EV_MAX_IM_WE_energy_savings = EV1_Max_SRI_IM_Scores_EnergySavings + EV2_Max_SRI_IM_Scores_EnergySavings \
                                          + EV3_Max_SRI_IM_Scores_EnergySavings

        sum_EV_MAX_IM_WE_flexibility_for_the_grid_and_storage = EV1_Max_SRI_IM_Scores_Flexibility + \
                                                                EV2_Max_SRI_IM_Scores_Flexibility + \
                                                                EV3_Max_SRI_IM_Scores_Flexibility

        sum_EV_MAX_IM_WE_comfort = EV1_Max_SRI_IM_Scores_Comfort + EV2_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_EV_MAX_IM_WE_convenience = EV1_Max_SRI_IM_Scores_Convenience + EV2_Max_SRI_IM_Scores_Convenience \
                                       + EV3_Max_SRI_IM_Scores_Convenience

        sum_EV_MAX_IM_WE_wellbeing_and_health = EV1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EV2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EV3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EV_MAX_IM_WE_maintenance_and_fault_prediction = EV1_Max_SRI_IM_Scores_Maintenance + \
                                                            EV2_Max_SRI_IM_Scores_Maintenance + \
                                                            EV3_Max_SRI_IM_Scores_Maintenance

        sum_EV_MAX_IM_WE_information_to_occupants = EV1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EV2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EV3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EV_MAX_IM_SC_energy_savings = EV1_Max_impact_scores_energy_saving + EV2_Max_impact_scores_energy_saving \
                                          + EV3_Max_impact_scores_energy_saving

        sum_EV_MAX_IM_flexibility_for_the_grid_and_storage = EV1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EV2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EV3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EV_MAX_IM_SC_comfort = EV1_Max_impact_scores_comfort + EV2_Max_impact_scores_comfort + EV3_Max_impact_scores_comfort

        sum_EV_MAX_IM_SC_convenience = EV1_Max_impact_scores_convenience + EV2_Max_impact_scores_convenience \
                                       + EV3_Max_impact_scores_convenience

        sum_EV_MAX_IM_SC_wellbeing_and_health = EV1_Max_impact_scores_wellbeing_and_health + \
                                                EV2_impact_scores_wellbeing_and_health + \
                                                EV3_Max_impact_scores_wellbeing_and_health

        sum_EV_MAX_IM_SC_maintenance_and_fault_prediction = EV1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EV2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EV3_Max_impact_scores_maintenance_and_fault_prediction

        sum_EV_MAX_IM_SC_information_to_occupants = EV1_Max_impact_scores_information_to_occupants + \
                                                    EV2_Max_impact_scores_information_to_occupants + \
                                                    EV3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_EV_MAX_IM_SC_energy_savings + sum_EV_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EV_MAX_IM_SC_comfort + sum_EV_MAX_IM_SC_convenience + sum_EV_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EV_MAX_IM_SC_maintenance_and_fault_prediction + sum_EV_MAX_IM_SC_information_to_occupants

    if OSS == "b" and EVCS == "a":
        # Print EV-S3, EV-S4
        print("")
        # EV-S3
        print("EV Charging Grid balancing")
        print("")

        while True:
            EV2LE = input("Choose:\n(a) None."
                          "\n(b) Uncontrolled charging."
                          "\n(c) 1-way charging controlled locally."
                          "\n(d) 1-way charging controlled grid."
                          "\n(e) 2-way charging controlled grid."
                          "\n[a/b/c/d/e]? : ")
            if EV2LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EV2LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 0
            EV2LE_Comfort = 0
            EV2LE_Convenience = 0
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 1
            EV2LE_Comfort = 0
            EV2LE_Convenience = 1
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 3
            EV2LE_Comfort = 0
            EV2LE_Convenience = 1
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 0
            EV2LE_Comfort = 0
            EV2LE_Convenience = 0
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        elif EV2LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EV2LE_EnergySavings = 0
            EV2LE_Flexibility = 0
            EV2LE_Comfort = 0
            EV2LE_Convenience = 0
            EV2LE_WellbeingAndHealth = 0
            EV2LE_Maintenance = 0
            EV2LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV2LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV2LE_Flexibility))
            print("Comfort: " + str(EV2LE_Comfort))
            print("Convenience: " + str(EV2LE_Convenience))
            print("Health & wellbeing: " + str(EV2LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV2LE_Maintenance))
            print("Information to occupants: " + str(EV2LE_InformationToOccupants))
            print("")

        # EV-S4
        print("EV Charging information and connectivity")
        print("")
        while True:
            EV3LE = input("Choose:\n(a) No information available."
                          "\n(b) Reporting information on EV charging status to occupant."
                          "\n(c) Communication with a back-office compliant to ISO 15118."
                          "\n[a/b/c?] : ")
            if EV3LE in ['a', 'b', 'c']:
                # if it was equal - break from the while loop
                break
        if EV3LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EV3LE_EnergySavings = 0
            EV3LE_Flexibility = 0
            EV3LE_Comfort = 0
            EV3LE_Convenience = 0
            EV3LE_WellbeingAndHealth = 0
            EV3LE_Maintenance = 0
            EV3LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV3LE_Flexibility))
            print("Comfort: " + str(EV3LE_Comfort))
            print("Convenience: " + str(EV3LE_Convenience))
            print("Health & wellbeing: " + str(EV3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV3LE_Maintenance))
            print("Information to occupants: " + str(EV3LE_InformationToOccupants))
            print("")

        elif EV3LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EV3LE_EnergySavings = 0
            EV3LE_Flexibility = 0
            EV3LE_Comfort = 0
            EV3LE_Convenience = 1
            EV3LE_WellbeingAndHealth = 0
            EV3LE_Maintenance = 0
            EV3LE_InformationToOccupants = 2

            print("Energy savings on site: " + str(EV3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV3LE_Flexibility))
            print("Comfort: " + str(EV3LE_Comfort))
            print("Convenience: " + str(EV3LE_Convenience))
            print("Health & wellbeing: " + str(EV3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV3LE_Maintenance))
            print("Information to occupants: " + str(EV3LE_InformationToOccupants))
            print("")

        elif EV3LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EV3LE_EnergySavings = 0
            EV3LE_Flexibility = 1
            EV3LE_Comfort = 0
            EV3LE_Convenience = 1
            EV3LE_WellbeingAndHealth = 0
            EV3LE_Maintenance = 0
            EV3LE_InformationToOccupants = 3

            print("Energy savings on site: " + str(EV3LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV3LE_Flexibility))
            print("Comfort: " + str(EV3LE_Comfort))
            print("Convenience: " + str(EV3LE_Convenience))
            print("Health & wellbeing: " + str(EV3LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV3LE_Maintenance))
            print("Information to occupants: " + str(EV3LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electric Vehicle
        EV_WE_energy_savings = 11
        EV_WE_flexibility = 13
        EV_WE_comfort = 0
        EV_WE_convenience = 11
        EV_WE_wellbeing_and_health = 0
        EV_WE_maintenance = 0
        EV_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electric Vehicle
        # EV 2
        EV2_impact_weighting_energy_saving = EV2LE_EnergySavings * (EV_WE_energy_savings / 100)

        EV2_impact_weighting_flexibility_for_the_grid_and_storage = EV2LE_Flexibility * (EV_WE_flexibility / 100)

        EV2_impact_weighting_comfort = EV2LE_Comfort * (EV_WE_comfort / 100)

        EV2_impact_weighting_convenience = EV2LE_Convenience * (EV_WE_convenience / 100)

        EV2_impact_weighting_wellbeing_and_health = EV2LE_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)

        EV2_impact_weighting_maintenance_and_fault_prediction = EV2LE_Maintenance * (EV_WE_maintenance / 100)

        EV2_impact_weighting_information_to_occupants = EV2LE_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EV2_impact_scores_energy_saving = EV2_impact_weighting_energy_saving * IM_energy_savings_on_site

        EV2_impact_scores_flexibility_for_the_grid_and_storage = EV2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EV2_impact_scores_comfort = EV2_impact_weighting_comfort * IM_energy_savings_on_site

        EV2_impact_scores_convenience = EV2_impact_weighting_convenience * IM_energy_savings_on_site

        EV2_impact_scores_wellbeing_and_health = EV2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EV2_impact_scores_maintenance_and_fault_prediction = EV2_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EV2_impact_scores_information_to_occupants = EV2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EV2LE_Max_EnergySavings = 0
        EV2LE_Max_Flexibility = 3
        EV2LE_Max_Comfort = 0
        EV2LE_Max_Convenience = 1
        EV2LE_Max_WellbeingAndHealth = 0
        EV2LE_Max_Maintenance = 0
        EV2LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EV2_Max_SRI_IM_Scores_EnergySavings = EV2LE_Max_EnergySavings * (EV_WE_energy_savings / 100)
        EV2_Max_SRI_IM_Scores_Flexibility = EV2LE_Max_Flexibility * (EV_WE_flexibility / 100)
        EV2_Max_SRI_IM_Scores_Comfort = EV2LE_Max_Comfort * (EV_WE_comfort / 100)
        EV2_Max_SRI_IM_Scores_Convenience = EV2LE_Max_Convenience * (EV_WE_convenience / 100)
        EV2_Max_SRI_IM_Scores_WellbeingAndHealth = EV2LE_Max_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV2_Max_SRI_IM_Scores_Maintenance = EV2LE_Max_Maintenance * (EV_WE_maintenance / 100)
        EV2_Max_SRI_IM_Scores_InformationToOccupants = EV2LE_Max_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EV2_Max_impact_scores_energy_saving = EV2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EV2_Max_impact_scores_flexibility_for_the_grid_and_storage = EV2_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EV2_Max_impact_scores_comfort = EV2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EV2_Max_impact_scores_convenience = EV2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EV2_Max_impact_scores_wellbeing_and_health = EV2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EV2_Max_impact_scores_maintenance_and_fault_prediction = EV2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EV2_Max_impact_scores_information_to_occupants = EV2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        ######################################################################################################################
        # EV 3
        EV3_impact_weighting_energy_saving = EV3LE_EnergySavings * (EV_WE_energy_savings / 100)
        EV3_impact_weighting_flexibility_for_the_grid_and_storage = EV3LE_Flexibility * (EV_WE_flexibility / 100)
        EV3_impact_weighting_comfort = EV3LE_Comfort * (EV_WE_comfort / 100)
        EV3_impact_weighting_convenience = EV3LE_Convenience * (EV_WE_convenience / 100)
        EV3_impact_weighting_wellbeing_and_health = EV3LE_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV3_impact_weighting_maintenance_and_fault_prediction = EV3LE_Maintenance * (EV_WE_maintenance / 100)
        EV3_impact_weighting_information_to_occupants = EV3LE_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EV3_impact_scores_energy_saving = EV3_impact_weighting_energy_saving * IM_energy_savings_on_site

        EV3_impact_scores_flexibility_for_the_grid_and_storage = EV3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EV3_impact_scores_comfort = EV3_impact_weighting_comfort * IM_energy_savings_on_site

        EV3_impact_scores_convenience = EV3_impact_weighting_convenience * IM_energy_savings_on_site

        EV3_impact_scores_wellbeing_and_health = EV3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EV3_impact_scores_maintenance_and_fault_prediction = EV3_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EV3_impact_scores_information_to_occupants = EV3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EV3LE_Max_EnergySavings = 0
        EV3LE_Max_Flexibility = 1
        EV3LE_Max_Comfort = 0
        EV3LE_Max_Convenience = 1
        EV3LE_Max_WellbeingAndHealth = 0
        EV3LE_Max_Maintenance = 0
        EV3LE_Max_InformationToOccupants = 3

        # Maximum possible SRI impact scores by domain
        EV3_Max_SRI_IM_Scores_EnergySavings = EV3LE_Max_EnergySavings * (EV_WE_energy_savings / 100)
        EV3_Max_SRI_IM_Scores_Flexibility = EV3LE_Max_Flexibility * (EV_WE_flexibility / 100)
        EV3_Max_SRI_IM_Scores_Comfort = EV3LE_Max_Comfort * (EV_WE_comfort / 100)
        EV3_Max_SRI_IM_Scores_Convenience = EV3LE_Max_Convenience * (EV_WE_convenience / 100)
        EV3_Max_SRI_IM_Scores_WellbeingAndHealth = EV3LE_Max_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV3_Max_SRI_IM_Scores_Maintenance = EV3LE_Max_Maintenance * (EV_WE_maintenance / 100)
        EV3_Max_SRI_IM_Scores_InformationToOccupants = EV3LE_Max_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EV3_Max_impact_scores_energy_saving = EV3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EV3_Max_impact_scores_flexibility_for_the_grid_and_storage = EV3_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EV3_Max_impact_scores_comfort = EV3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EV3_Max_impact_scores_convenience = EV3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EV3_Max_impact_scores_wellbeing_and_health = EV3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EV3_Max_impact_scores_maintenance_and_fault_prediction = EV3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EV3_Max_impact_scores_information_to_occupants = EV3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_EV_OR_SC_EnergySavings = EV2LE_EnergySavings + EV3LE_EnergySavings

        sum_EV_OR_SC_Flexibility = EV2LE_Flexibility + EV3LE_Flexibility

        sum_EV_OR_SC_Comfort = EV2LE_Comfort + EV3LE_Comfort

        sum_EV_OR_SC_Convenience = EV2LE_Convenience + EV3LE_Convenience

        sum_EV_OR_SC_WellbeingAndHealth = EV2LE_WellbeingAndHealth + EV3LE_WellbeingAndHealth

        sum_EV_OR_SC_Maintenance = EV2LE_Maintenance + EV3LE_Maintenance

        sum_EV_OR_SC_InformationToOccupants = EV2LE_InformationToOccupants + EV3LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EV_IM_WE_energy_savings = EV2_impact_weighting_energy_saving + EV3_impact_weighting_energy_saving

        sum_EV_IM_WE_flexibility_for_the_grid_and_storage = EV2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                            EV3_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EV_IM_WE_comfort = EV2_impact_weighting_comfort + EV3_impact_weighting_comfort

        sum_EV_IM_WE_convenience = EV2_impact_weighting_convenience + EV3_impact_weighting_convenience

        sum_EV_IM_WE_wellbeing_and_health = EV2_impact_weighting_wellbeing_and_health + \
                                            EV3_impact_weighting_wellbeing_and_health

        sum_EV_IM_WE_maintenance_and_fault_prediction = EV2_impact_weighting_maintenance_and_fault_prediction + \
                                                        EV3_impact_weighting_maintenance_and_fault_prediction

        sum_EV_IM_WE_information_to_occupants = EV2_impact_weighting_information_to_occupants + \
                                                EV3_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EV_IM_SC_energy_savings = EV2_impact_scores_energy_saving + EV3_impact_scores_energy_saving

        sum_EV_IM_flexibility_for_the_grid_and_storage = EV2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         EV3_impact_scores_flexibility_for_the_grid_and_storage

        sum_EV_IM_SC_comfort = EV2_impact_scores_comfort + EV3_impact_scores_comfort

        sum_EV_IM_SC_convenience = EV2_impact_scores_convenience + EV3_impact_scores_convenience

        sum_EV_IM_SC_wellbeing_and_health = EV2_impact_scores_wellbeing_and_health + \
                                            EV3_impact_scores_wellbeing_and_health

        sum_EV_IM_SC_maintenance_and_fault_prediction = EV2_impact_scores_maintenance_and_fault_prediction + \
                                                        EV3_impact_scores_maintenance_and_fault_prediction

        sum_EV_IM_SC_information_to_occupants = EV2_impact_scores_information_to_occupants + \
                                                EV3_impact_scores_information_to_occupants

        # TOTAL
        total_EV_sum_IM_SC = sum_EV_IM_SC_energy_savings + sum_EV_IM_flexibility_for_the_grid_and_storage + \
                             sum_EV_IM_SC_comfort + sum_EV_IM_SC_convenience + sum_EV_IM_SC_wellbeing_and_health + \
                             sum_EV_IM_SC_maintenance_and_fault_prediction + sum_EV_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EV_MAX_OR_SC_EnergySavings = EV2LE_Max_EnergySavings + EV3LE_Max_EnergySavings

        sum_EV_MAX_OR_SC_Flexibility = EV2LE_Max_Flexibility + EV3LE_Max_Flexibility

        sum_EV_MAX_OR_SC_Comfort = EV2LE_Max_Comfort + EV3LE_Max_Comfort

        sum_EV_MAX_OR_SC_Convenience = EV2LE_Max_Convenience + EV3LE_Max_Convenience

        sum_EV_MAX_OR_SC_WellbeingAndHealth = EV2LE_Max_WellbeingAndHealth + EV3LE_Max_WellbeingAndHealth

        sum_EV_MAX_OR_SC_Maintenance = EV2LE_Max_Maintenance + EV3LE_Max_Maintenance

        sum_EV_MAX_OR_SC_InformationToOccupants = EV2LE_Max_InformationToOccupants + EV3LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EV_MAX_IM_WE_energy_savings = EV2_Max_SRI_IM_Scores_EnergySavings + EV3_Max_SRI_IM_Scores_EnergySavings

        sum_EV_MAX_IM_WE_flexibility_for_the_grid_and_storage = EV2_Max_SRI_IM_Scores_Flexibility + \
                                                                EV3_Max_SRI_IM_Scores_Flexibility

        sum_EV_MAX_IM_WE_comfort = EV2_Max_SRI_IM_Scores_Comfort + HW3_Max_SRI_IM_Scores_Comfort

        sum_EV_MAX_IM_WE_convenience = EV2_Max_SRI_IM_Scores_Convenience + EV3_Max_SRI_IM_Scores_Convenience

        sum_EV_MAX_IM_WE_wellbeing_and_health = EV2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                                EV3_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EV_MAX_IM_WE_maintenance_and_fault_prediction = EV2_Max_SRI_IM_Scores_Maintenance + \
                                                            EV3_Max_SRI_IM_Scores_Maintenance

        sum_EV_MAX_IM_WE_information_to_occupants = EV2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                    EV3_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EV_MAX_IM_SC_energy_savings = EV2_Max_impact_scores_energy_saving + EV3_Max_impact_scores_energy_saving

        sum_EV_MAX_IM_flexibility_for_the_grid_and_storage = EV2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                             EV3_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EV_MAX_IM_SC_comfort = EV2_Max_impact_scores_comfort + EV3_Max_impact_scores_comfort

        sum_EV_MAX_IM_SC_convenience = EV2_Max_impact_scores_convenience + EV3_Max_impact_scores_convenience

        sum_EV_MAX_IM_SC_wellbeing_and_health = EV2_impact_scores_wellbeing_and_health + \
                                                EV3_Max_impact_scores_wellbeing_and_health

        sum_EV_MAX_IM_SC_maintenance_and_fault_prediction = EV2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                            EV3_Max_impact_scores_maintenance_and_fault_prediction

        sum_EV_MAX_IM_SC_information_to_occupants = EV2_Max_impact_scores_information_to_occupants + \
                                                    EV3_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_EV_MAX_IM_SC_energy_savings + sum_EV_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EV_MAX_IM_SC_comfort + sum_EV_MAX_IM_SC_convenience + sum_EV_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EV_MAX_IM_SC_maintenance_and_fault_prediction + sum_EV_MAX_IM_SC_information_to_occupants

    if OSS == "a" and EVCS == "b":
        # Print EV-S1
        # EV-S1
        print("Number of charging spaces")
        print("")

        while True:
            EV1LE = input("Choose:\n(a) Not present."
                          "\n(b) Ducting (or simple power plug) available."
                          "\n(c) 0-9% of parking spaces has recharging points."
                          "\n(d) 10-50% or parking spaces has recharging point."
                          "\n(e) >50% of parking spaces has recharging point. \n[a/b/c/d/e]? : ")
            if EV1LE in ['a', 'b', 'c', 'd', 'e']:
                # if it was equal - break from the while loop
                break

        if EV1LE == "a":
            print("")
            print("Level 0")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 0
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "b":
            print("")
            print("Level 1")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 1
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "c":
            print("")
            print("Level 2")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 1
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "d":
            print("")
            print("Level 3")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 2
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        elif EV1LE == "e":
            print("")
            print("Level 4")
            print("")
            print("IMPACTS")
            print("")

            EV1LE_EnergySavings = 0
            EV1LE_Flexibility = 0
            EV1LE_Comfort = 0
            EV1LE_Convenience = 3
            EV1LE_WellbeingAndHealth = 0
            EV1LE_Maintenance = 0
            EV1LE_InformationToOccupants = 0

            print("Energy savings on site: " + str(EV1LE_EnergySavings))
            print("Flexibility for the grid and storage: " + str(EV1LE_Flexibility))
            print("Comfort: " + str(EV1LE_Comfort))
            print("Convenience: " + str(EV1LE_Convenience))
            print("Health & wellbeing: " + str(EV1LE_WellbeingAndHealth))
            print("Maintenance & fault prediction: " + str(EV1LE_Maintenance))
            print("Information to occupants: " + str(EV1LE_InformationToOccupants))
            print("")

        # domain_weightings
        # Electric Vehicle
        EV_WE_energy_savings = 11
        EV_WE_flexibility = 13
        EV_WE_comfort = 0
        EV_WE_convenience = 11
        EV_WE_wellbeing_and_health = 0
        EV_WE_maintenance = 0
        EV_WE_information_to_occupants = 13

        # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
        IM_energy_savings_on_site = 0.14
        IM_flexibility_for_the_grid_and_storage = 0.14
        IM_comfort = 0.14
        IM_convenience = 0.14
        IM_wellbeing_and_health = 0.14
        IM_maintenance_and_fault_prediction = 0.14
        IM_information_to_occupants = 0.14

        # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
        # Electric Vehicle
        # EV 1
        EV1_impact_weighting_energy_saving = EV1LE_EnergySavings * (EV_WE_energy_savings / 100)
        EV1_impact_weighting_flexibility_for_the_grid_and_storage = EV1LE_Flexibility * (EV_WE_flexibility / 100)
        EV1_impact_weighting_comfort = EV1LE_Comfort * (EV_WE_comfort / 100)
        EV1_impact_weighting_convenience = EV1LE_Convenience * (EV_WE_convenience / 100)
        EV1_impact_weighting_wellbeing_and_health = EV1LE_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV1_impact_weighting_maintenance_and_fault_prediction = EV1LE_Maintenance * (EV_WE_maintenance / 100)
        EV1_impact_weighting_information_to_occupants = EV1LE_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # SRI impact scores by domain after impact weightings also applied
        EV1_impact_scores_energy_saving = EV1_impact_weighting_energy_saving * IM_energy_savings_on_site

        EV1_impact_scores_flexibility_for_the_grid_and_storage = EV1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                                 * IM_energy_savings_on_site

        EV1_impact_scores_comfort = EV1_impact_weighting_comfort * IM_energy_savings_on_site

        EV1_impact_scores_convenience = EV1_impact_weighting_convenience * IM_energy_savings_on_site

        EV1_impact_scores_wellbeing_and_health = EV1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

        EV1_impact_scores_maintenance_and_fault_prediction = EV1_impact_weighting_maintenance_and_fault_prediction \
                                                             * IM_energy_savings_on_site

        EV1_impact_scores_information_to_occupants = EV1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

        # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
        EV1LE_Max_EnergySavings = 0
        EV1LE_Max_Flexibility = 0
        EV1LE_Max_Comfort = 0
        EV1LE_Max_Convenience = 3
        EV1LE_Max_WellbeingAndHealth = 0
        EV1LE_Max_Maintenance = 0
        EV1LE_Max_InformationToOccupants = 0

        # Maximum possible SRI impact scores by domain
        EV1_Max_SRI_IM_Scores_EnergySavings = EV1LE_Max_EnergySavings * (EV_WE_energy_savings / 100)
        EV1_Max_SRI_IM_Scores_Flexibility = EV1LE_Max_Flexibility * (EV_WE_flexibility / 100)
        EV1_Max_SRI_IM_Scores_Comfort = EV1LE_Max_Comfort * (EV_WE_comfort / 100)
        EV1_Max_SRI_IM_Scores_Convenience = EV1LE_Max_Convenience * (EV_WE_convenience / 100)
        EV1_Max_SRI_IM_Scores_WellbeingAndHealth = EV1LE_Max_WellbeingAndHealth * (EV_WE_wellbeing_and_health / 100)
        EV1_Max_SRI_IM_Scores_Maintenance = EV1LE_Max_Maintenance * (EV_WE_maintenance / 100)
        EV1_Max_SRI_IM_Scores_InformationToOccupants = EV1LE_Max_InformationToOccupants * (
                    EV_WE_information_to_occupants / 100)

        # Maximum SRI impact scores by domain after impact weightings also applied
        EV1_Max_impact_scores_energy_saving = EV1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

        EV1_Max_impact_scores_flexibility_for_the_grid_and_storage = EV1_Max_SRI_IM_Scores_Flexibility * \
                                                                     IM_energy_savings_on_site

        EV1_Max_impact_scores_comfort = EV1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

        EV1_Max_impact_scores_convenience = EV1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

        EV1_Max_impact_scores_wellbeing_and_health = EV1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

        EV1_Max_impact_scores_maintenance_and_fault_prediction = EV1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

        EV1_Max_impact_scores_information_to_occupants = EV1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                         IM_energy_savings_on_site

        # SUM ORDINAL SCORES
        sum_EV_OR_SC_EnergySavings = EV1LE_EnergySavings

        sum_EV_OR_SC_Flexibility = EV1LE_Flexibility

        sum_EV_OR_SC_Comfort = EV1LE_Comfort

        sum_EV_OR_SC_Convenience = EV1LE_Convenience

        sum_EV_OR_SC_WellbeingAndHealth = EV1LE_WellbeingAndHealth

        sum_EV_OR_SC_Maintenance = EV1LE_Maintenance

        sum_EV_OR_SC_InformationToOccupants = EV1LE_InformationToOccupants

        # SUM IMPACT SCORES BY DOMAIN
        sum_EV_IM_WE_energy_savings = EV1_impact_weighting_energy_saving

        sum_EV_IM_WE_flexibility_for_the_grid_and_storage = EV1_impact_weighting_flexibility_for_the_grid_and_storage

        sum_EV_IM_WE_comfort = EV1_impact_weighting_comfort

        sum_EV_IM_WE_convenience = EV1_impact_weighting_convenience

        sum_EV_IM_WE_wellbeing_and_health = EV1_impact_weighting_wellbeing_and_health

        sum_EV_IM_WE_maintenance_and_fault_prediction = EV1_impact_weighting_maintenance_and_fault_prediction

        sum_EV_IM_WE_information_to_occupants = EV1_impact_weighting_information_to_occupants

        # SUM SRI impact scores by domain after impact weightings also applied
        sum_EV_IM_SC_energy_savings = EV1_impact_scores_energy_saving

        sum_EV_IM_flexibility_for_the_grid_and_storage = EV1_impact_scores_flexibility_for_the_grid_and_storage

        sum_EV_IM_SC_comfort = EV1_impact_scores_comfort

        sum_EV_IM_SC_convenience = EV1_impact_scores_convenience

        sum_EV_IM_SC_wellbeing_and_health = EV1_impact_scores_wellbeing_and_health

        sum_EV_IM_SC_maintenance_and_fault_prediction = EV1_impact_scores_maintenance_and_fault_prediction

        sum_EV_IM_SC_information_to_occupants = EV1_impact_scores_information_to_occupants

        # TOTAL
        total_EV_sum_IM_SC = sum_EV_IM_SC_energy_savings + sum_EV_IM_flexibility_for_the_grid_and_storage + \
                             sum_EV_IM_SC_comfort + sum_EV_IM_SC_convenience + sum_EV_IM_SC_wellbeing_and_health + \
                             sum_EV_IM_SC_maintenance_and_fault_prediction + sum_EV_IM_SC_information_to_occupants

        # SUM MAX ORDINAL SCORES
        sum_EV_MAX_OR_SC_EnergySavings = EV1LE_Max_EnergySavings

        sum_EV_MAX_OR_SC_Flexibility = EV1LE_Max_Flexibility

        sum_EV_MAX_OR_SC_Comfort = EV1LE_Max_Comfort

        sum_EV_MAX_OR_SC_Convenience = EV1LE_Max_Convenience

        sum_EV_MAX_OR_SC_WellbeingAndHealth = EV1LE_Max_WellbeingAndHealth

        sum_EV_MAX_OR_SC_Maintenance = EV1LE_Max_Maintenance

        sum_EV_MAX_OR_SC_InformationToOccupants = EV1LE_Max_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain
        sum_EV_MAX_IM_WE_energy_savings = EV1_Max_SRI_IM_Scores_EnergySavings

        sum_EV_MAX_IM_WE_flexibility_for_the_grid_and_storage = EV1_Max_SRI_IM_Scores_Flexibility

        sum_EV_MAX_IM_WE_comfort = EV1_Max_SRI_IM_Scores_Comfort

        sum_EV_MAX_IM_WE_convenience = EV1_Max_SRI_IM_Scores_Convenience

        sum_EV_MAX_IM_WE_wellbeing_and_health = EV1_Max_SRI_IM_Scores_WellbeingAndHealth

        sum_EV_MAX_IM_WE_maintenance_and_fault_prediction = EV1_Max_SRI_IM_Scores_Maintenance

        sum_EV_MAX_IM_WE_information_to_occupants = EV1_Max_SRI_IM_Scores_InformationToOccupants

        # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
        sum_EV_MAX_IM_SC_energy_savings = EV1_Max_impact_scores_energy_saving

        sum_EV_MAX_IM_flexibility_for_the_grid_and_storage = EV1_Max_impact_scores_flexibility_for_the_grid_and_storage

        sum_EV_MAX_IM_SC_comfort = EV1_Max_impact_scores_comfort

        sum_EV_MAX_IM_SC_convenience = EV1_Max_impact_scores_convenience

        sum_EV_MAX_IM_SC_wellbeing_and_health = EV1_Max_impact_scores_wellbeing_and_health

        sum_EV_MAX_IM_SC_maintenance_and_fault_prediction = EV1_Max_impact_scores_maintenance_and_fault_prediction

        sum_EV_MAX_IM_SC_information_to_occupants = EV1_Max_impact_scores_information_to_occupants

        # TOTAL MAX
        total_HW_MAX_sum_IM_SC = sum_EV_MAX_IM_SC_energy_savings + sum_EV_MAX_IM_flexibility_for_the_grid_and_storage + \
                                 sum_EV_MAX_IM_SC_comfort + sum_EV_MAX_IM_SC_convenience + sum_EV_MAX_IM_SC_wellbeing_and_health + \
                                 sum_EV_MAX_IM_SC_maintenance_and_fault_prediction + sum_EV_MAX_IM_SC_information_to_occupants

    if OSS == "b" and EVCS == "b":
        print("")

if EV == "b":
    # SUM ORDINAL SCORES
    sum_EV_OR_SC_EnergySavings = 0
    sum_EV_OR_SC_Flexibility = 0
    sum_EV_OR_SC_Comfort = 0
    sum_EV_OR_SC_Convenience = 0
    sum_EV_OR_SC_WellbeingAndHealth = 0
    sum_EV_OR_SC_Maintenance = 0
    sum_EV_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_EV_IM_WE_energy_savings = 0
    sum_EV_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_EV_IM_WE_comfort = 0
    sum_EV_IM_WE_convenience = 0
    sum_EV_IM_WE_wellbeing_and_health = 0
    sum_EV_IM_WE_maintenance_and_fault_prediction = 0
    sum_EV_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_EV_IM_SC_energy_savings = 0
    sum_EV_IM_flexibility_for_the_grid_and_storage = 0
    sum_EV_IM_SC_comfort = 0
    sum_EV_IM_SC_convenience = 0
    sum_EV_IM_SC_wellbeing_and_health = 0
    sum_EV_IM_SC_maintenance_and_fault_prediction = 0
    sum_EV_IM_SC_information_to_occupants = 0

    # TOTAL
    total_EV_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_EV_MAX_OR_SC_EnergySavings = 0
    sum_EV_MAX_OR_SC_Flexibility = 0
    sum_EV_MAX_OR_SC_Comfort = 0
    sum_EV_MAX_OR_SC_Convenience = 0
    sum_EV_MAX_OR_SC_WellbeingAndHealth = 0
    sum_EV_MAX_OR_SC_Maintenance = 0
    sum_EV_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_EV_MAX_IM_WE_energy_savings = 0
    sum_EV_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_EV_MAX_IM_WE_comfort = 0
    sum_EV_MAX_IM_WE_convenience = 0
    sum_EV_MAX_IM_WE_wellbeing_and_health = 0
    sum_EV_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_EV_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_EV_MAX_IM_SC_energy_savings = 0
    sum_EV_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_EV_MAX_IM_SC_comfort = 0
    sum_EV_MAX_IM_SC_convenience = 0
    sum_EV_MAX_IM_SC_wellbeing_and_health = 0
    sum_EV_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_EV_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_EV_MAX_sum_IM_SC = 0

    print("")

while True:
    print("Domain: Monitoring and Control")
    print("")
    MC = input("Monitoring and Control \n(a) yes \n(b) no \n[a/b]?: ")

    if MC in ['a', 'b']:
        # if it was equal - break from the while loop
        break

if MC == "a":
    # MC-S1
    print("Interaction between TBS and/or BACS")
    print("")

    while True:
        MC1LE = input("Choose:\n(a) None."
                      "\n(b) Single platform that allows manual control of multiple TBS."
                      "\n(c) Single platform that allows automated control & coordination between TBS."
                      "\n(d) Single platform that allows automated control & coordination between TBS + "
                      "optimization of energy flow based on occupancy, weather and grid signals."
                      "\n[a/b/c/d]? : ")
        if MC1LE in ['a', 'b', 'c', 'd']:
            # if it was equal - break from the while loop
            break

    if MC1LE == "a":
        print("")
        print("Level 0")
        print("")
        print("IMPACTS")
        print("")

        MC1LE_EnergySavings = 0
        MC1LE_Flexibility = 0
        MC1LE_Comfort = 0
        MC1LE_Convenience = 0
        MC1LE_WellbeingAndHealth = 0
        MC1LE_Maintenance = 0
        MC1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC1LE_Flexibility))
        print("Comfort: " + str(MC1LE_Comfort))
        print("Convenience: " + str(MC1LE_Convenience))
        print("Health & wellbeing: " + str(MC1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC1LE_Maintenance))
        print("Information to occupants: " + str(MC1LE_InformationToOccupants))
        print("")

    elif MC1LE == "b":
        print("")
        print("Level 1")
        print("")
        print("IMPACTS")
        print("")

        MC1LE_EnergySavings = 0
        MC1LE_Flexibility = 0
        MC1LE_Comfort = 0
        MC1LE_Convenience = 1
        MC1LE_WellbeingAndHealth = 0
        MC1LE_Maintenance = 1
        MC1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC1LE_Flexibility))
        print("Comfort: " + str(MC1LE_Comfort))
        print("Convenience: " + str(MC1LE_Convenience))
        print("Health & wellbeing: " + str(MC1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC1LE_Maintenance))
        print("Information to occupants: " + str(MC1LE_InformationToOccupants))
        print("")

    elif MC1LE == "c":
        print("")
        print("Level 2")
        print("")
        print("IMPACTS")
        print("")

        MC1LE_EnergySavings = 1
        MC1LE_Flexibility = 0
        MC1LE_Comfort = 0
        MC1LE_Convenience = 2
        MC1LE_WellbeingAndHealth = 0
        MC1LE_Maintenance = 1
        MC1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC1LE_Flexibility))
        print("Comfort: " + str(MC1LE_Comfort))
        print("Convenience: " + str(MC1LE_Convenience))
        print("Health & wellbeing: " + str(MC1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC1LE_Maintenance))
        print("Information to occupants: " + str(MC1LE_InformationToOccupants))
        print("")

    elif MC1LE == "d":
        print("")
        print("Level 3")
        print("")
        print("IMPACTS")
        print("")

        MC1LE_EnergySavings = 2
        MC1LE_Flexibility = 0
        MC1LE_Comfort = 0
        MC1LE_Convenience = 3
        MC1LE_WellbeingAndHealth = 0
        MC1LE_Maintenance = 1
        MC1LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC1LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC1LE_Flexibility))
        print("Comfort: " + str(MC1LE_Comfort))
        print("Convenience: " + str(MC1LE_Convenience))
        print("Health & wellbeing: " + str(MC1LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC1LE_Maintenance))
        print("Information to occupants: " + str(MC1LE_InformationToOccupants))
        print("")

    # MC-S2
    print("")
    print("Smart Grid Integration")
    print("")

    while True:
        MC2LE = input("Choose:\n(a) None - No harmonization between grid and TBS; building is operated "
                      "independently from the grid load ."
                      "\n(b) Building energy systems are managed and operated depending on grid load; demand side "
                      "management is used for load shifting."
                      "\n[a/b]? : ")
        if MC2LE in ['a', 'b']:
            # if it was equal - break from the while loop
            break

    if MC2LE == "a":
        print("")
        print("Level 0")
        print("")
        print("IMPACTS")
        print("")

        MC2LE_EnergySavings = 0
        MC2LE_Flexibility = 0
        MC2LE_Comfort = 0
        MC2LE_Convenience = 0
        MC2LE_WellbeingAndHealth = 0
        MC2LE_Maintenance = 0
        MC2LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC2LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC2LE_Flexibility))
        print("Comfort: " + str(MC2LE_Comfort))
        print("Convenience: " + str(MC2LE_Convenience))
        print("Health & wellbeing: " + str(MC2LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC2LE_WellbeingAndHealth))
        print("Information to occupants: " + str(MC2LE_InformationToOccupants))
        print("")

    elif MC2LE == "b":
        print("")
        print("Level 1")
        print("")
        print("IMPACTS")
        print("")

        MC2LE_EnergySavings = 0
        MC2LE_Flexibility = 3
        MC2LE_Comfort = 0
        MC2LE_Convenience = 0
        MC2LE_WellbeingAndHealth = 0
        MC2LE_Maintenance = 0
        MC2LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC2LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC2LE_Flexibility))
        print("Comfort: " + str(MC2LE_Comfort))
        print("Convenience: " + str(MC2LE_Convenience))
        print("Health & wellbeing: " + str(MC2LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC2LE_WellbeingAndHealth))
        print("Information to occupants: " + str(MC2LE_InformationToOccupants))
        print("")

    # MC-S3
    print("Central reporting of TBS performance and energy use")
    print("")

    while True:
        MC3LE = input("Choose:\n(a) None."
                      "\n(b) Central or remote reporting of realtime energy use per energy carrier."
                      "\n(c) Central or remote reporting of realtime energy use per energy carrier, "
                      "combining TBS of at least 2 domains in one interface."
                      "\n(d) Central or remote reporting of realtime energy use per energy carrier, "
                      "combining TBS of all main domains in one interface."
                      "\n[a/b/c/d]? : ")
        if MC3LE in ['a', 'b', 'c', 'd']:
            # if it was equal - break from the while loop
            break

    if MC3LE == "a":
        print("")
        print("Level 0")
        print("")
        print("IMPACTS")
        print("")

        MC3LE_EnergySavings = 0
        MC3LE_Flexibility = 0
        MC3LE_Comfort = 0
        MC3LE_Convenience = 0
        MC3LE_WellbeingAndHealth = 0
        MC3LE_Maintenance = 0
        MC3LE_InformationToOccupants = 0

        print("Energy savings on site: " + str(MC3LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC3LE_Flexibility))
        print("Comfort: " + str(MC3LE_Comfort))
        print("Convenience: " + str(MC3LE_Convenience))
        print("Health & wellbeing: " + str(MC3LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC3LE_Maintenance))
        print("Information to occupants: " + str(MC3LE_InformationToOccupants))
        print("")

    elif MC3LE == "b":
        print("")
        print("Level 1")
        print("")
        print("IMPACTS")
        print("")

        MC3LE_EnergySavings = 1
        MC3LE_Flexibility = 0
        MC3LE_Comfort = 0
        MC3LE_Convenience = 1
        MC3LE_WellbeingAndHealth = 0
        MC3LE_Maintenance = 1
        MC3LE_InformationToOccupants = 1

        print("Energy savings on site: " + str(MC3LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC3LE_Flexibility))
        print("Comfort: " + str(MC3LE_Comfort))
        print("Convenience: " + str(MC3LE_Convenience))
        print("Health & wellbeing: " + str(MC3LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC3LE_Maintenance))
        print("Information to occupants: " + str(MC3LE_InformationToOccupants))
        print("")

    elif MC3LE == "c":
        print("")
        print("Level 2")
        print("")
        print("IMPACTS")
        print("")

        MC3LE_EnergySavings = 1
        MC3LE_Flexibility = 0
        MC3LE_Comfort = 0
        MC3LE_Convenience = 1
        MC3LE_WellbeingAndHealth = 0
        MC3LE_Maintenance = 1
        MC3LE_InformationToOccupants = 2

        print("Energy savings on site: " + str(MC3LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC3LE_Flexibility))
        print("Comfort: " + str(MC3LE_Comfort))
        print("Convenience: " + str(MC3LE_Convenience))
        print("Health & wellbeing: " + str(MC3LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC3LE_Maintenance))
        print("Information to occupants: " + str(MC3LE_InformationToOccupants))
        print("")

    elif MC3LE == "d":
        print("")
        print("Level 3")
        print("")
        print("IMPACTS")
        print("")

        MC3LE_EnergySavings = 1
        MC3LE_Flexibility = 0
        MC3LE_Comfort = 0
        MC3LE_Convenience = 2
        MC3LE_WellbeingAndHealth = 0
        MC3LE_Maintenance = 1
        MC3LE_InformationToOccupants = 3

        print("Energy savings on site: " + str(MC3LE_EnergySavings))
        print("Flexibility for the grid and storage: " + str(MC3LE_Flexibility))
        print("Comfort: " + str(MC3LE_Comfort))
        print("Convenience: " + str(MC3LE_Convenience))
        print("Health & wellbeing: " + str(MC3LE_WellbeingAndHealth))
        print("Maintenance & fault prediction: " + str(MC3LE_Maintenance))
        print("Information to occupants: " + str(MC3LE_InformationToOccupants))
        print("")

    # domain_weightings
    # Monitoring & Control
    MC_WE_energy_savings = 11
    MC_WE_flexibility = 13
    MC_WE_comfort = 0
    MC_WE_convenience = 11
    MC_WE_wellbeing_and_health = 0
    MC_WE_maintenance = 14
    MC_WE_information_to_occupants = 13

    # IMPACT WEIGHTINGS ( = 1/7 = 14.3%)
    IM_energy_savings_on_site = 0.14
    IM_flexibility_for_the_grid_and_storage = 0.14
    IM_comfort = 0.14
    IM_convenience = 0.14
    IM_wellbeing_and_health = 0.14
    IM_maintenance_and_fault_prediction = 0.14
    IM_information_to_occupants = 0.14

    # IMPACT WEIGHTINGS BY DOMAIN (CALCULATIONS)
    # Monitoring & Control
    # MC 1
    MC1_impact_weighting_energy_saving = MC1LE_EnergySavings * (MC_WE_energy_savings / 100)
    MC1_impact_weighting_flexibility_for_the_grid_and_storage = MC1LE_Flexibility * (MC_WE_flexibility / 100)
    MC1_impact_weighting_comfort = MC1LE_Comfort * (MC_WE_comfort / 100)
    MC1_impact_weighting_convenience = MC1LE_Convenience * (MC_WE_convenience / 100)
    MC1_impact_weighting_wellbeing_and_health = MC1LE_WellbeingAndHealth * (MC_WE_wellbeing_and_health / 100)
    MC1_impact_weighting_maintenance_and_fault_prediction = MC1LE_Maintenance * (MC_WE_maintenance / 100)
    MC1_impact_weighting_information_to_occupants = MC1LE_InformationToOccupants * (
                MC_WE_information_to_occupants / 100)

    # SRI impact scores by domain after impact weightings also applied
    MC1_impact_scores_energy_saving = MC1_impact_weighting_energy_saving * IM_energy_savings_on_site

    MC1_impact_scores_flexibility_for_the_grid_and_storage = MC1_impact_weighting_flexibility_for_the_grid_and_storage \
                                                             * IM_energy_savings_on_site

    MC1_impact_scores_comfort = MC1_impact_weighting_comfort * IM_energy_savings_on_site

    MC1_impact_scores_convenience = MC1_impact_weighting_convenience * IM_energy_savings_on_site

    MC1_impact_scores_wellbeing_and_health = MC1_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

    MC1_impact_scores_maintenance_and_fault_prediction = MC1_impact_weighting_maintenance_and_fault_prediction \
                                                         * IM_energy_savings_on_site

    MC1_impact_scores_information_to_occupants = MC1_impact_weighting_information_to_occupants * IM_energy_savings_on_site

    # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
    MC1LE_Max_EnergySavings = 2
    MC1LE_Max_Flexibility = 0
    MC1LE_Max_Comfort = 0
    MC1LE_Max_Convenience = 3
    MC1LE_Max_WellbeingAndHealth = 0
    MC1LE_Max_Maintenance = 1
    MC1LE_Max_InformationToOccupants = 0

    # Maximum possible SRI impact scores by domain
    MC1_Max_SRI_IM_Scores_EnergySavings = MC1LE_Max_EnergySavings * (MC_WE_energy_savings / 100)
    MC1_Max_SRI_IM_Scores_Flexibility = MC1LE_Max_Flexibility * (MC_WE_flexibility / 100)
    MC1_Max_SRI_IM_Scores_Comfort = MC1LE_Max_Comfort * (MC_WE_comfort / 100)
    MC1_Max_SRI_IM_Scores_Convenience = MC1LE_Max_Convenience * (MC_WE_convenience / 100)
    MC1_Max_SRI_IM_Scores_WellbeingAndHealth = MC1LE_Max_WellbeingAndHealth * (MC_WE_wellbeing_and_health / 100)
    MC1_Max_SRI_IM_Scores_Maintenance = MC1LE_Max_Maintenance * (MC_WE_maintenance / 100)
    MC1_Max_SRI_IM_Scores_InformationToOccupants = MC1LE_Max_InformationToOccupants * (
                MC_WE_information_to_occupants / 100)

    # Maximum SRI impact scores by domain after impact weightings also applied
    MC1_Max_impact_scores_energy_saving = MC1_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

    MC1_Max_impact_scores_flexibility_for_the_grid_and_storage = MC1_Max_SRI_IM_Scores_Flexibility * \
                                                                 IM_energy_savings_on_site

    MC1_Max_impact_scores_comfort = MC1_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

    MC1_Max_impact_scores_convenience = MC1_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

    MC1_Max_impact_scores_wellbeing_and_health = MC1_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

    MC1_Max_impact_scores_maintenance_and_fault_prediction = MC1_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

    MC1_Max_impact_scores_information_to_occupants = MC1_Max_SRI_IM_Scores_InformationToOccupants * \
                                                     IM_energy_savings_on_site

    ######################################################################################################################
    # MC 2
    MC2_impact_weighting_energy_saving = MC2LE_EnergySavings * (MC_WE_energy_savings / 100)
    MC2_impact_weighting_flexibility_for_the_grid_and_storage = MC2LE_Flexibility * (MC_WE_flexibility / 100)
    MC2_impact_weighting_comfort = MC2LE_Comfort * (MC_WE_comfort / 100)
    MC2_impact_weighting_convenience = MC2LE_Convenience * (MC_WE_convenience / 100)
    MC2_impact_weighting_wellbeing_and_health = MC2LE_WellbeingAndHealth * (MC_WE_wellbeing_and_health / 100)
    MC2_impact_weighting_maintenance_and_fault_prediction = MC2LE_Maintenance * (MC_WE_maintenance / 100)
    MC2_impact_weighting_information_to_occupants = MC2LE_InformationToOccupants * (
                MC_WE_information_to_occupants / 100)

    # SRI impact scores by domain after impact weightings also applied
    MC2_impact_scores_energy_saving = MC2_impact_weighting_energy_saving * IM_energy_savings_on_site

    MC2_impact_scores_flexibility_for_the_grid_and_storage = MC2_impact_weighting_flexibility_for_the_grid_and_storage \
                                                             * IM_energy_savings_on_site

    MC2_impact_scores_comfort = MC2_impact_weighting_comfort * IM_energy_savings_on_site

    MC2_impact_scores_convenience = MC2_impact_weighting_convenience * IM_energy_savings_on_site

    MC2_impact_scores_wellbeing_and_health = MC2_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

    MC2_impact_scores_maintenance_and_fault_prediction = MC2_impact_weighting_maintenance_and_fault_prediction \
                                                         * IM_energy_savings_on_site

    MC2_impact_scores_information_to_occupants = MC2_impact_weighting_information_to_occupants * IM_energy_savings_on_site

    # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
    MC2LE_Max_EnergySavings = 0
    MC2LE_Max_Flexibility = 3
    MC2LE_Max_Comfort = 0
    MC2LE_Max_Convenience = 0
    MC2LE_Max_WellbeingAndHealth = 0
    MC2LE_Max_Maintenance = 0
    MC2LE_Max_InformationToOccupants = 0

    # Maximum possible SRI impact scores by domain
    MC2_Max_SRI_IM_Scores_EnergySavings = MC2LE_Max_EnergySavings * (MC_WE_energy_savings / 100)
    MC2_Max_SRI_IM_Scores_Flexibility = MC2LE_Max_Flexibility * (MC_WE_flexibility / 100)
    MC2_Max_SRI_IM_Scores_Comfort = MC2LE_Max_Comfort * (MC_WE_comfort / 100)
    MC2_Max_SRI_IM_Scores_Convenience = MC2LE_Max_Convenience * (MC_WE_convenience / 100)
    MC2_Max_SRI_IM_Scores_WellbeingAndHealth = MC2LE_Max_WellbeingAndHealth * (MC_WE_wellbeing_and_health / 100)
    MC2_Max_SRI_IM_Scores_Maintenance = MC2LE_Max_Maintenance * (MC_WE_maintenance / 100)
    MC2_Max_SRI_IM_Scores_InformationToOccupants = MC2LE_Max_InformationToOccupants * (
                MC_WE_information_to_occupants / 100)

    # Maximum SRI impact scores by domain after impact weightings also applied
    MC2_Max_impact_scores_energy_saving = MC2_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

    MC2_Max_impact_scores_flexibility_for_the_grid_and_storage = MC2_Max_SRI_IM_Scores_Flexibility * \
                                                                 IM_energy_savings_on_site

    MC2_Max_impact_scores_comfort = MC2_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

    MC2_Max_impact_scores_convenience = MC2_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

    MC2_Max_impact_scores_wellbeing_and_health = MC2_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

    MC2_Max_impact_scores_maintenance_and_fault_prediction = MC2_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

    MC2_Max_impact_scores_information_to_occupants = MC2_Max_SRI_IM_Scores_InformationToOccupants * \
                                                     IM_energy_savings_on_site

    ######################################################################################################################
    # MC 3
    MC3_impact_weighting_energy_saving = MC3LE_EnergySavings * (MC_WE_energy_savings / 100)
    MC3_impact_weighting_flexibility_for_the_grid_and_storage = MC3LE_Flexibility * (MC_WE_flexibility / 100)
    MC3_impact_weighting_comfort = MC3LE_Comfort * (MC_WE_comfort / 100)
    MC3_impact_weighting_convenience = MC3LE_Convenience * (MC_WE_convenience / 100)
    MC3_impact_weighting_wellbeing_and_health = MC3LE_WellbeingAndHealth * (MC_WE_wellbeing_and_health / 100)
    MC3_impact_weighting_maintenance_and_fault_prediction = MC3LE_Maintenance * (MC_WE_maintenance / 100)
    MC3_impact_weighting_information_to_occupants = MC3LE_InformationToOccupants * (
                MC_WE_information_to_occupants / 100)

    # SRI impact scores by domain after impact weightings also applied
    MC3_impact_scores_energy_saving = MC3_impact_weighting_energy_saving * IM_energy_savings_on_site

    MC3_impact_scores_flexibility_for_the_grid_and_storage = MC3_impact_weighting_flexibility_for_the_grid_and_storage \
                                                             * IM_energy_savings_on_site

    MC3_impact_scores_comfort = MC3_impact_weighting_comfort * IM_energy_savings_on_site

    MC3_impact_scores_convenience = MC3_impact_weighting_convenience * IM_energy_savings_on_site

    MC3_impact_scores_wellbeing_and_health = MC3_impact_weighting_wellbeing_and_health * IM_energy_savings_on_site

    MC3_impact_scores_maintenance_and_fault_prediction = MC3_impact_weighting_maintenance_and_fault_prediction \
                                                         * IM_energy_savings_on_site

    MC3_impact_scores_information_to_occupants = MC3_impact_weighting_information_to_occupants * IM_energy_savings_on_site

    # MAXIMUM POSSIBLE ORDINAL IMPACT SCORES
    MC3LE_Max_EnergySavings = 1
    MC3LE_Max_Flexibility = 0
    MC3LE_Max_Comfort = 0
    MC3LE_Max_Convenience = 2
    MC3LE_Max_WellbeingAndHealth = 0
    MC3LE_Max_Maintenance = 1
    MC3LE_Max_InformationToOccupants = 3

    # Maximum possible SRI impact scores by domain
    MC3_Max_SRI_IM_Scores_EnergySavings = MC3LE_Max_EnergySavings * (MC_WE_energy_savings / 100)
    MC3_Max_SRI_IM_Scores_Flexibility = MC3LE_Max_Flexibility * (MC_WE_flexibility / 100)
    MC3_Max_SRI_IM_Scores_Comfort = MC3LE_Max_Comfort * (MC_WE_comfort / 100)
    MC3_Max_SRI_IM_Scores_Convenience = MC3LE_Max_Convenience * (MC_WE_convenience / 100)
    MC3_Max_SRI_IM_Scores_WellbeingAndHealth = MC3LE_Max_WellbeingAndHealth * (MC_WE_wellbeing_and_health / 100)
    MC3_Max_SRI_IM_Scores_Maintenance = MC3LE_Max_Maintenance * (MC_WE_maintenance / 100)
    MC3_Max_SRI_IM_Scores_InformationToOccupants = MC3LE_Max_InformationToOccupants * (
                MC_WE_information_to_occupants / 100)

    # Maximum SRI impact scores by domain after impact weightings also applied
    MC3_Max_impact_scores_energy_saving = MC3_Max_SRI_IM_Scores_EnergySavings * IM_energy_savings_on_site

    MC3_Max_impact_scores_flexibility_for_the_grid_and_storage = MC3_Max_SRI_IM_Scores_Flexibility * \
                                                                 IM_energy_savings_on_site

    MC3_Max_impact_scores_comfort = MC3_Max_SRI_IM_Scores_Comfort * IM_energy_savings_on_site

    MC3_Max_impact_scores_convenience = MC3_Max_SRI_IM_Scores_Convenience * IM_energy_savings_on_site

    MC3_Max_impact_scores_wellbeing_and_health = MC3_Max_SRI_IM_Scores_WellbeingAndHealth * IM_energy_savings_on_site

    MC3_Max_impact_scores_maintenance_and_fault_prediction = MC3_Max_SRI_IM_Scores_Maintenance * IM_energy_savings_on_site

    MC3_Max_impact_scores_information_to_occupants = MC3_Max_SRI_IM_Scores_InformationToOccupants * \
                                                     IM_energy_savings_on_site

    # SUM ORDINAL SCORES
    sum_MC_OR_SC_EnergySavings = MC1LE_EnergySavings + MC2LE_EnergySavings + MC3LE_EnergySavings

    sum_MC_OR_SC_Flexibility = MC1LE_Flexibility + MC2LE_Flexibility + MC3LE_Flexibility

    sum_MC_OR_SC_Comfort = MC1LE_Comfort + MC2LE_Comfort + MC3LE_Comfort

    sum_MC_OR_SC_Convenience = MC1LE_Convenience + MC2LE_Convenience + MC3LE_Convenience

    sum_MC_OR_SC_WellbeingAndHealth = MC1LE_WellbeingAndHealth + MC2LE_WellbeingAndHealth + MC3LE_WellbeingAndHealth

    sum_MC_OR_SC_Maintenance = MC1LE_Maintenance + MC2LE_Maintenance + MC3LE_Maintenance

    sum_MC_OR_SC_InformationToOccupants = MC1LE_InformationToOccupants + MC2LE_InformationToOccupants + \
                                          MC3LE_InformationToOccupants

    # SUM IMPACT SCORES BY DOMAIN
    sum_MC_IM_WE_energy_savings = MC1_impact_weighting_energy_saving + MC2_impact_weighting_energy_saving + \
                                  MC3_impact_weighting_energy_saving

    sum_MC_IM_WE_flexibility_for_the_grid_and_storage = MC1_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                        MC2_impact_weighting_flexibility_for_the_grid_and_storage + \
                                                        MC3_impact_weighting_flexibility_for_the_grid_and_storage

    sum_MC_IM_WE_comfort = MC1_impact_weighting_comfort + MC2_impact_weighting_comfort + MC3_impact_weighting_comfort

    sum_MC_IM_WE_convenience = MC1_impact_weighting_convenience + MC2_impact_weighting_convenience \
                               + MC3_impact_weighting_convenience

    sum_MC_IM_WE_wellbeing_and_health = MC1_impact_weighting_wellbeing_and_health + \
                                        MC2_impact_weighting_wellbeing_and_health + \
                                        MC3_impact_weighting_wellbeing_and_health

    sum_MC_IM_WE_maintenance_and_fault_prediction = MC1_impact_weighting_maintenance_and_fault_prediction + \
                                                    MC2_impact_weighting_maintenance_and_fault_prediction + \
                                                    MC3_impact_weighting_maintenance_and_fault_prediction

    sum_MC_IM_WE_information_to_occupants = MC1_impact_weighting_information_to_occupants + \
                                            MC2_impact_weighting_information_to_occupants + \
                                            MC3_impact_weighting_information_to_occupants

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_MC_IM_SC_energy_savings = MC1_impact_scores_energy_saving + MC2_impact_scores_energy_saving + \
                                  MC3_impact_scores_energy_saving

    sum_MC_IM_flexibility_for_the_grid_and_storage = MC1_impact_scores_flexibility_for_the_grid_and_storage + \
                                                     MC2_impact_scores_flexibility_for_the_grid_and_storage + \
                                                     MC3_impact_scores_flexibility_for_the_grid_and_storage

    sum_MC_IM_SC_comfort = MC1_impact_scores_comfort + MC2_impact_scores_comfort + MC3_impact_scores_comfort

    sum_MC_IM_SC_convenience = MC1_impact_scores_convenience + MC2_impact_scores_convenience + MC3_impact_scores_convenience

    sum_MC_IM_SC_wellbeing_and_health = MC1_impact_scores_wellbeing_and_health + MC2_impact_scores_wellbeing_and_health + \
                                        MC3_impact_scores_wellbeing_and_health

    sum_MC_IM_SC_maintenance_and_fault_prediction = MC1_impact_scores_maintenance_and_fault_prediction + \
                                                    MC2_impact_scores_maintenance_and_fault_prediction + \
                                                    MC3_impact_scores_maintenance_and_fault_prediction

    sum_MC_IM_SC_information_to_occupants = MC1_impact_scores_information_to_occupants + \
                                            MC2_impact_scores_information_to_occupants + \
                                            MC3_impact_scores_information_to_occupants

    # TOTAL
    total_MC_sum_IM_SC = sum_MC_IM_SC_energy_savings + sum_MC_IM_flexibility_for_the_grid_and_storage + \
                         sum_MC_IM_SC_comfort + sum_MC_IM_SC_convenience + sum_MC_IM_SC_wellbeing_and_health + \
                         sum_MC_IM_SC_maintenance_and_fault_prediction + sum_MC_IM_SC_information_to_occupants

    # SUM MAX ORDINAL SCORES
    sum_MC_MAX_OR_SC_EnergySavings = MC1LE_Max_EnergySavings + MC2LE_Max_EnergySavings + MC3LE_Max_EnergySavings

    sum_MC_MAX_OR_SC_Flexibility = MC1LE_Max_Flexibility + MC2LE_Max_Flexibility + MC3LE_Max_Flexibility

    sum_MC_MAX_OR_SC_Comfort = MC1LE_Max_Comfort + MC2LE_Max_Comfort + MC3LE_Max_Comfort

    sum_MC_MAX_OR_SC_Convenience = MC1LE_Max_Convenience + MC2LE_Max_Convenience + MC3LE_Max_Convenience

    sum_MC_MAX_OR_SC_WellbeingAndHealth = MC1LE_Max_WellbeingAndHealth + MC2LE_Max_WellbeingAndHealth + \
                                          MC3LE_Max_WellbeingAndHealth

    sum_MC_MAX_OR_SC_Maintenance = MC1LE_Max_Maintenance + MC2LE_Max_Maintenance + MC3LE_Max_Maintenance

    sum_MC_MAX_OR_SC_InformationToOccupants = MC1LE_Max_InformationToOccupants + MC2LE_Max_InformationToOccupants + \
                                              MC3LE_Max_InformationToOccupants

    # SUM Maximum possible SRI impact scores by domain
    sum_MC_MAX_IM_WE_energy_savings = MC1_Max_SRI_IM_Scores_EnergySavings + MC2_Max_SRI_IM_Scores_EnergySavings \
                                      + MC3_Max_SRI_IM_Scores_EnergySavings

    sum_MC_MAX_IM_WE_flexibility_for_the_grid_and_storage = MC1_Max_SRI_IM_Scores_Flexibility + \
                                                            MC2_Max_SRI_IM_Scores_Flexibility + \
                                                            MC3_Max_SRI_IM_Scores_Flexibility

    sum_MC_MAX_IM_WE_comfort = MC1_Max_SRI_IM_Scores_Comfort + MC2_Max_SRI_IM_Scores_Comfort + MC3_Max_SRI_IM_Scores_Comfort

    sum_MC_MAX_IM_WE_convenience = MC1_Max_SRI_IM_Scores_Convenience + MC2_Max_SRI_IM_Scores_Convenience \
                                   + MC3_Max_SRI_IM_Scores_Convenience

    sum_MC_MAX_IM_WE_wellbeing_and_health = MC1_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                            MC2_Max_SRI_IM_Scores_WellbeingAndHealth + \
                                            MC3_Max_SRI_IM_Scores_WellbeingAndHealth

    sum_MC_MAX_IM_WE_maintenance_and_fault_prediction = MC1_Max_SRI_IM_Scores_Maintenance + \
                                                        MC2_Max_SRI_IM_Scores_Maintenance + \
                                                        MC3_Max_SRI_IM_Scores_Maintenance

    sum_MC_MAX_IM_WE_information_to_occupants = MC1_Max_SRI_IM_Scores_InformationToOccupants + \
                                                MC2_Max_SRI_IM_Scores_InformationToOccupants + \
                                                MC3_Max_SRI_IM_Scores_InformationToOccupants

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_MC_MAX_IM_SC_energy_savings = MC1_Max_impact_scores_energy_saving + MC2_Max_impact_scores_energy_saving \
                                      + MC3_Max_impact_scores_energy_saving

    sum_MC_MAX_IM_flexibility_for_the_grid_and_storage = MC1_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         MC2_Max_impact_scores_flexibility_for_the_grid_and_storage + \
                                                         MC3_Max_impact_scores_flexibility_for_the_grid_and_storage

    sum_MC_MAX_IM_SC_comfort = MC1_Max_impact_scores_comfort + MC2_Max_impact_scores_comfort + MC3_Max_impact_scores_comfort

    sum_MC_MAX_IM_SC_convenience = MC1_Max_impact_scores_convenience + MC2_Max_impact_scores_convenience \
                                   + MC3_Max_impact_scores_convenience

    sum_MC_MAX_IM_SC_wellbeing_and_health = MC1_Max_impact_scores_wellbeing_and_health + \
                                            MC2_impact_scores_wellbeing_and_health + \
                                            MC3_Max_impact_scores_wellbeing_and_health

    sum_MC_MAX_IM_SC_maintenance_and_fault_prediction = MC1_Max_impact_scores_maintenance_and_fault_prediction + \
                                                        MC2_Max_impact_scores_maintenance_and_fault_prediction + \
                                                        MC3_Max_impact_scores_maintenance_and_fault_prediction

    sum_MC_MAX_IM_SC_information_to_occupants = MC1_Max_impact_scores_information_to_occupants + \
                                                MC2_Max_impact_scores_information_to_occupants + \
                                                MC3_Max_impact_scores_information_to_occupants

    # TOTAL MAX
    total_MC_MAX_sum_IM_SC = sum_MC_MAX_IM_SC_energy_savings + sum_MC_MAX_IM_flexibility_for_the_grid_and_storage + \
                             sum_MC_MAX_IM_SC_comfort + sum_MC_MAX_IM_SC_convenience + sum_MC_MAX_IM_SC_wellbeing_and_health + \
                             sum_MC_MAX_IM_SC_maintenance_and_fault_prediction + sum_MC_MAX_IM_SC_information_to_occupants

if MC == "b":
    # SUM ORDINAL SCORES
    sum_MC_OR_SC_EnergySavings = 0
    sum_MC_OR_SC_Flexibility = 0
    sum_MC_OR_SC_Comfort = 0
    sum_MC_OR_SC_Convenience = 0
    sum_MC_OR_SC_WellbeingAndHealth = 0
    sum_MC_OR_SC_Maintenance = 0
    sum_MC_OR_SC_InformationToOccupants = 0

    # SUM IMPACT SCORES BY DOMAIN
    sum_MC_IM_WE_energy_savings = 0
    sum_MC_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_MC_IM_WE_comfort = 0
    sum_MC_IM_WE_convenience = 0
    sum_MC_IM_WE_wellbeing_and_health = 0
    sum_MC_IM_WE_maintenance_and_fault_prediction = 0
    sum_MC_IM_WE_information_to_occupants = 0

    # SUM SRI impact scores by domain after impact weightings also applied
    sum_MC_IM_SC_energy_savings = 0
    sum_MC_IM_flexibility_for_the_grid_and_storage = 0
    sum_MC_IM_SC_comfort = 0
    sum_MC_IM_SC_convenience = 0
    sum_MC_IM_SC_wellbeing_and_health = 0
    sum_MC_IM_SC_maintenance_and_fault_prediction = 0
    sum_MC_IM_SC_information_to_occupants = 0

    # TOTAL
    total_MC_sum_IM_SC = 0

    # SUM MAX ORDINAL SCORES
    sum_MC_MAX_OR_SC_EnergySavings = 0
    sum_MC_MAX_OR_SC_Flexibility = 0
    sum_MC_MAX_OR_SC_Comfort = 0
    sum_MC_MAX_OR_SC_Convenience = 0
    sum_MC_MAX_OR_SC_WellbeingAndHealth = 0
    sum_MC_MAX_OR_SC_Maintenance = 0
    sum_MC_MAX_OR_SC_InformationToOccupants = 0

    # SUM Maximum possible SRI impact scores by domain
    sum_MC_MAX_IM_WE_energy_savings = 0
    sum_MC_MAX_IM_WE_flexibility_for_the_grid_and_storage = 0
    sum_MC_MAX_IM_WE_comfort = 0
    sum_MC_MAX_IM_WE_convenience = 0
    sum_MC_MAX_IM_WE_wellbeing_and_health = 0
    sum_MC_MAX_IM_WE_maintenance_and_fault_prediction = 0
    sum_MC_MAX_IM_WE_information_to_occupants = 0

    # SUM Maximum possible SRI impact scores by domain after impact weightings also applied
    sum_MC_MAX_IM_SC_energy_savings = 0
    sum_MC_MAX_IM_flexibility_for_the_grid_and_storage = 0
    sum_MC_MAX_IM_SC_comfort = 0
    sum_MC_MAX_IM_SC_convenience = 0
    sum_MC_MAX_IM_SC_wellbeing_and_health = 0
    sum_MC_MAX_IM_SC_maintenance_and_fault_prediction = 0
    sum_MC_MAX_IM_SC_information_to_occupants = 0

    # TOTAL MAX
    total_MC_MAX_sum_IM_SC = 0

    print("")


# ORDINAL IMPACT SCORES - main functionality
sum_OIS_energy_savings_on_site = sum_HE_OR_SC_EnergySavings + sum_HW_OR_SC_EnergySavings + sum_CO_OR_SC_EnergySavings\
                                 + sum_VE_OR_SC_EnergySavings + sum_LI_OR_SC_EnergySavings + sum_DE_OR_SC_EnergySavings\
                                 + sum_EL_OR_SC_EnergySavings + sum_EV_OR_SC_EnergySavings + sum_MC_OR_SC_EnergySavings
# print(sum_OIS_energy_savings_on_site)

sum_OIS_flexibility_for_the_grid_and_storage = sum_HE_OR_SC_Flexibility + sum_HW_OR_SC_Flexibility + \
                                               sum_CO_OR_SC_Flexibility + sum_VE_OR_SC_Flexibility + \
                                               sum_LI_OR_SC_Flexibility + sum_DE_OR_SC_Flexibility + \
                                               sum_EL_OR_SC_Flexibility + sum_EV_OR_SC_Flexibility + \
                                               sum_MC_OR_SC_Flexibility
# print(sum_OIS_flexibility_for_the_grid_and_storage)

sum_OIS_Comfort = sum_HE_OR_SC_Comfort + sum_HW_OR_SC_Comfort + sum_CO_OR_SC_Comfort + sum_VE_OR_SC_Comfort + \
                  sum_LI_OR_SC_Comfort + sum_DE_OR_SC_Comfort + sum_EL_OR_SC_Comfort + sum_EV_OR_SC_Comfort + \
                  sum_MC_OR_SC_Comfort
# print(sum_OIS_Comfort)

sum_OIS_Convenience = sum_HE_OR_SC_Convenience + sum_HW_OR_SC_Convenience + sum_CO_OR_SC_Convenience + \
                      sum_VE_OR_SC_Convenience + sum_LI_OR_SC_Convenience + sum_DE_OR_SC_Convenience + \
                      sum_EL_OR_SC_Convenience + sum_EV_OR_SC_Convenience + sum_MC_OR_SC_Convenience
# print(sum_OIS_Convenience)

sum_OIS_WellbeingAndHealth = sum_HE_OR_SC_WellbeingAndHealth + sum_HW_OR_SC_WellbeingAndHealth + \
                             sum_CO_OR_SC_WellbeingAndHealth + sum_VE_OR_SC_WellbeingAndHealth + \
                             sum_LI_OR_SC_WellbeingAndHealth + sum_DE_OR_SC_WellbeingAndHealth + \
                             sum_EL_OR_SC_WellbeingAndHealth + sum_EV_OR_SC_WellbeingAndHealth + \
                             sum_MC_OR_SC_WellbeingAndHealth
# print(sum_OIS_WellbeingAndHealth)

sum_OIS_Maintenance = sum_HE_OR_SC_Maintenance + sum_HW_OR_SC_Maintenance + sum_CO_OR_SC_Maintenance + \
                      sum_VE_OR_SC_Maintenance + sum_LI_OR_SC_Maintenance + sum_DE_OR_SC_Maintenance + \
                      sum_EL_OR_SC_Maintenance + sum_EV_OR_SC_Maintenance + sum_MC_OR_SC_Maintenance
# print(sum_OIS_Maintenance)

sum_OIS_InformationToOccupants = sum_HE_OR_SC_InformationToOccupants + sum_HW_OR_SC_InformationToOccupants + \
                                 sum_CO_OR_SC_InformationToOccupants + sum_VE_OR_SC_InformationToOccupants + \
                                 sum_LI_OR_SC_InformationToOccupants + sum_DE_OR_SC_InformationToOccupants + \
                                 sum_EL_OR_SC_InformationToOccupants + sum_EV_OR_SC_InformationToOccupants + \
                                 sum_MC_OR_SC_InformationToOccupants
# print(sum_OIS_InformationToOccupants)

print("")
# SRI impact scores by domain
sum_OIS_impact_weightings_energy_savings_on_site = sum_HE_IM_WE_energy_savings + sum_HW_IM_WE_energy_savings + \
                                                         sum_CO_IM_WE_energy_savings + sum_VE_IM_WE_energy_savings + \
                                                         sum_LI_IM_WE_energy_savings + sum_DE_IM_WE_energy_savings + \
                                                         sum_EL_IM_WE_energy_savings + sum_EV_IM_WE_energy_savings + \
                                                         sum_MC_IM_WE_energy_savings
# print(sum_OIS_impact_weightings_energy_savings_on_site)

sum_OIS_impact_weightings_flexibility_for_the_grid_and_storage = sum_HE_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_HW_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_CO_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_VE_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_LI_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_DE_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_EL_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_EV_IM_WE_flexibility_for_the_grid_and_storage +\
                                                                       sum_MC_IM_WE_flexibility_for_the_grid_and_storage
# print(sum_OIS_impact_weightings_flexibility_for_the_grid_and_storage)

sum_OIS_impact_weightings_Comfort = sum_HE_IM_WE_comfort + sum_HW_IM_WE_comfort + sum_CO_IM_WE_comfort + \
                                          sum_VE_IM_WE_comfort + sum_LI_IM_WE_comfort + sum_DE_IM_WE_comfort + \
                                          sum_EL_IM_WE_comfort + sum_EV_IM_WE_comfort + sum_MC_IM_WE_comfort
# print(sum_OIS_impact_weightings_Comfort)

sum_OIS_impact_weightings_Convenience = sum_HE_IM_WE_convenience + sum_HW_IM_WE_convenience + \
                                              sum_CO_IM_WE_convenience + sum_VE_IM_WE_convenience + \
                                              sum_LI_IM_WE_convenience + sum_DE_IM_WE_convenience + \
                                              sum_EL_IM_WE_convenience + sum_EV_IM_WE_convenience + \
                                              sum_MC_IM_WE_convenience
# print(sum_OIS_impact_weightings_Convenience)

sum_OIS_impact_weightings_WellbeingAndHealth = sum_HE_IM_WE_wellbeing_and_health + \
                                                     sum_HW_IM_WE_wellbeing_and_health + \
                                                     sum_CO_IM_WE_wellbeing_and_health + \
                                                     sum_VE_IM_WE_wellbeing_and_health + \
                                                     sum_LI_IM_WE_wellbeing_and_health + \
                                                     sum_DE_IM_WE_wellbeing_and_health + \
                                                     sum_EL_IM_WE_wellbeing_and_health + \
                                                     sum_EV_IM_WE_wellbeing_and_health + \
                                                     sum_MC_IM_WE_wellbeing_and_health
# print(sum_OIS_impact_weightings_WellbeingAndHealth)

sum_OIS_impact_weightings_Maintenance = sum_HE_IM_WE_maintenance_and_fault_prediction + \
                                              sum_HW_IM_WE_maintenance_and_fault_prediction + \
                                              sum_CO_IM_WE_maintenance_and_fault_prediction + \
                                              sum_VE_IM_WE_maintenance_and_fault_prediction + \
                                              sum_LI_IM_WE_maintenance_and_fault_prediction + \
                                              sum_DE_IM_WE_maintenance_and_fault_prediction + \
                                              sum_EL_IM_WE_maintenance_and_fault_prediction + \
                                              sum_EV_IM_WE_maintenance_and_fault_prediction + \
                                              sum_MC_IM_WE_maintenance_and_fault_prediction
# print(sum_OIS_impact_weightings_Maintenance)

sum_OIS_impact_weightings_InformationToOccupants = sum_HE_IM_WE_information_to_occupants + \
                                                         sum_HW_IM_WE_information_to_occupants + \
                                                         sum_CO_IM_WE_information_to_occupants + \
                                                         sum_VE_IM_WE_information_to_occupants + \
                                                         sum_LI_IM_WE_information_to_occupants + \
                                                         sum_DE_IM_WE_information_to_occupants + \
                                                         sum_EL_IM_WE_information_to_occupants + \
                                                         sum_EV_IM_WE_information_to_occupants + \
                                                         sum_MC_IM_WE_information_to_occupants
# print(sum_OIS_impact_weightings_InformationToOccupants)

print("")
# SRI impact scores by domain after impact weightings also applied
sum_OIS_IM_energy_savings_on_site = sum_HE_IM_SC_energy_savings + sum_HW_IM_SC_energy_savings + \
                                    sum_CO_IM_SC_energy_savings + sum_VE_IM_SC_energy_savings + \
                                    sum_LI_IM_SC_energy_savings + sum_DE_IM_SC_energy_savings + \
                                    sum_EL_IM_SC_energy_savings + sum_EV_IM_SC_energy_savings + \
                                    sum_MC_IM_SC_energy_savings
# print(sum_OIS_IM_energy_savings_on_site)

sum_OIS_IM_flexibility_for_the_grid_and_storage = sum_HE_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_HW_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_CO_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_VE_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_LI_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_DE_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_EL_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_EV_IM_flexibility_for_the_grid_and_storage + \
                                                  sum_MC_IM_flexibility_for_the_grid_and_storage
# print(sum_OIS_IM_flexibility_for_the_grid_and_storage)

sum_OIS_IM_Comfort = sum_HE_IM_SC_comfort + sum_HW_IM_SC_comfort + sum_CO_IM_SC_comfort + sum_VE_IM_SC_comfort + \
                     sum_LI_IM_SC_comfort + sum_DE_IM_SC_comfort + sum_EL_IM_SC_comfort + sum_EV_IM_SC_comfort + \
                     sum_MC_IM_SC_comfort
# print(sum_OIS_IM_Comfort)

sum_OIS_IM_Convenience = sum_HE_IM_SC_convenience + sum_HW_IM_SC_convenience + sum_CO_IM_SC_convenience + \
                         sum_VE_IM_SC_convenience + sum_LI_IM_SC_convenience + sum_DE_IM_SC_convenience + \
                         sum_EL_IM_SC_convenience + sum_EV_IM_SC_convenience + sum_MC_IM_SC_convenience
# print(sum_OIS_IM_Convenience)

sum_OIS_IM_WellbeingAndHealth = sum_HE_IM_SC_wellbeing_and_health + sum_HW_IM_SC_wellbeing_and_health + \
                                sum_CO_IM_SC_wellbeing_and_health + sum_VE_IM_SC_wellbeing_and_health + \
                                sum_LI_IM_SC_wellbeing_and_health + sum_DE_IM_SC_wellbeing_and_health + \
                                sum_EL_IM_SC_wellbeing_and_health + sum_EV_IM_SC_wellbeing_and_health + \
                                sum_MC_IM_SC_wellbeing_and_health
# print(sum_OIS_IM_WellbeingAndHealth)

sum_OIS_IM_Maintenance = sum_HE_IM_SC_maintenance_and_fault_prediction + sum_HW_IM_SC_maintenance_and_fault_prediction +\
                         sum_CO_IM_SC_maintenance_and_fault_prediction + sum_VE_IM_SC_maintenance_and_fault_prediction +\
                         sum_LI_IM_SC_maintenance_and_fault_prediction + sum_DE_IM_SC_maintenance_and_fault_prediction +\
                         sum_EL_IM_SC_maintenance_and_fault_prediction + sum_EV_IM_SC_maintenance_and_fault_prediction +\
                         sum_MC_IM_SC_maintenance_and_fault_prediction
# print(sum_OIS_IM_Maintenance)

sum_OIS_IM_InformationToOccupants = sum_HE_IM_SC_information_to_occupants + sum_HW_IM_SC_information_to_occupants + \
                                    sum_CO_IM_SC_information_to_occupants + sum_VE_IM_SC_information_to_occupants + \
                                    sum_LI_IM_SC_information_to_occupants + sum_DE_IM_SC_information_to_occupants + \
                                    sum_EL_IM_SC_information_to_occupants + sum_EV_IM_SC_information_to_occupants + \
                                    sum_MC_IM_SC_information_to_occupants
# print(sum_OIS_IM_InformationToOccupants)

print("")
# TOTAL
total = total_HE_sum_IM_SC + total_HW_sum_IM_SC + total_CO_sum_IM_SC + total_VE_sum_IM_SC + total_LI_sum_IM_SC + \
        total_DE_sum_IM_SC + total_EL_sum_IM_SC + total_EV_sum_IM_SC + total_MC_sum_IM_SC
# print("TOTAL: " + str(total))

print("")
print("")
# MAX ORDINAL IMPACT SCORES - main functionality
sum_Max_OIS_impact_weightings_energy_savings_on_site = sum_HE_MAX_OR_SC_EnergySavings + sum_HW_MAX_OR_SC_EnergySavings +\
                                                       sum_CO_MAX_OR_SC_EnergySavings + sum_VE_MAX_OR_SC_EnergySavings +\
                                                       sum_LI_MAX_OR_SC_EnergySavings + sum_DE_MAX_OR_SC_EnergySavings +\
                                                       sum_EL_MAX_OR_SC_EnergySavings + sum_EV_MAX_OR_SC_EnergySavings +\
                                                       sum_MC_MAX_OR_SC_EnergySavings
# print(sum_Max_OIS_impact_weightings_energy_savings_on_site)

sum_Max_OIS_impact_weightings_flexibility_for_the_grid_and_storage = sum_HE_MAX_OR_SC_Flexibility + \
                                                                     sum_HW_MAX_OR_SC_Flexibility + \
                                                                     sum_CO_MAX_OR_SC_Flexibility + \
                                                                     sum_VE_MAX_OR_SC_Flexibility + \
                                                                     sum_LI_MAX_OR_SC_Flexibility + \
                                                                     sum_DE_MAX_OR_SC_Flexibility + \
                                                                     sum_EL_MAX_OR_SC_Flexibility + \
                                                                     sum_EV_MAX_OR_SC_Flexibility + \
                                                                     sum_MC_MAX_OR_SC_Flexibility
# print(sum_Max_OIS_impact_weightings_flexibility_for_the_grid_and_storage)

sum_Max_OIS_impact_weightings_Comfort = sum_HE_MAX_OR_SC_Comfort + sum_HW_MAX_OR_SC_Comfort + sum_CO_MAX_OR_SC_Comfort +\
                                        sum_VE_MAX_OR_SC_Comfort + sum_LI_MAX_OR_SC_Comfort + sum_DE_MAX_OR_SC_Comfort +\
                                        sum_EL_MAX_OR_SC_Comfort + sum_EV_MAX_OR_SC_Comfort + sum_MC_MAX_OR_SC_Comfort
# print(sum_Max_OIS_impact_weightings_Comfort)

sum_Max_OIS_impact_weightings_Convenience = sum_HE_MAX_OR_SC_Convenience + sum_HW_MAX_OR_SC_Convenience + \
                                            sum_CO_MAX_OR_SC_Convenience + sum_VE_MAX_OR_SC_Convenience + \
                                            sum_LI_MAX_OR_SC_Convenience + sum_DE_MAX_OR_SC_Convenience + \
                                            sum_EL_MAX_OR_SC_Convenience + sum_EV_MAX_OR_SC_Convenience + \
                                            sum_MC_MAX_OR_SC_Convenience
# print(sum_Max_OIS_impact_weightings_Convenience)

sum_Max_OIS_impact_weightings_WellbeingAndHealth = sum_HE_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_HW_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_CO_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_VE_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_LI_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_DE_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_EL_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_EV_MAX_OR_SC_WellbeingAndHealth + \
                                                   sum_MC_MAX_OR_SC_WellbeingAndHealth
# print(sum_Max_OIS_impact_weightings_WellbeingAndHealth)

sum_Max_OIS_impact_weightings_Maintenance = sum_HE_MAX_OR_SC_Maintenance + sum_HW_MAX_OR_SC_Maintenance + \
                                            sum_CO_MAX_OR_SC_Maintenance + sum_VE_MAX_OR_SC_Maintenance + \
                                            sum_LI_MAX_OR_SC_Maintenance + sum_DE_MAX_OR_SC_Maintenance + \
                                            sum_EL_MAX_OR_SC_Maintenance + sum_EV_MAX_OR_SC_Maintenance + \
                                            sum_MC_MAX_OR_SC_Maintenance
# print(sum_Max_OIS_impact_weightings_Maintenance)

sum_Max_OIS_impact_weightings_InformationToOccupants = sum_HE_MAX_OR_SC_InformationToOccupants + \
                                                       sum_HW_MAX_OR_SC_InformationToOccupants + \
                                                       sum_CO_MAX_OR_SC_InformationToOccupants + \
                                                       sum_VE_MAX_OR_SC_InformationToOccupants + \
                                                       sum_LI_MAX_OR_SC_InformationToOccupants + \
                                                       sum_DE_MAX_OR_SC_InformationToOccupants + \
                                                       sum_EL_MAX_OR_SC_InformationToOccupants + \
                                                       sum_EV_MAX_OR_SC_InformationToOccupants + \
                                                       sum_MC_MAX_OR_SC_InformationToOccupants
# print(sum_Max_OIS_impact_weightings_InformationToOccupants)

print("")
# SRI MAX impact scores by domain
sum_Max_OIS_energy_savings_on_site = sum_HE_MAX_IM_WE_energy_savings + sum_HW_MAX_IM_WE_energy_savings + \
                                     sum_CO_MAX_IM_WE_energy_savings + sum_VE_MAX_IM_WE_energy_savings + \
                                     sum_LI_MAX_IM_WE_energy_savings + sum_DE_MAX_IM_WE_energy_savings + \
                                     sum_EL_MAX_IM_WE_energy_savings + sum_EV_MAX_IM_WE_energy_savings + \
                                     sum_MC_MAX_IM_WE_energy_savings
# print(sum_Max_OIS_energy_savings_on_site)

sum_Max_OIS_flexibility_for_the_grid_and_storage = sum_HE_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_HW_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_CO_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_VE_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_LI_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_DE_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_EL_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_EV_MAX_IM_WE_flexibility_for_the_grid_and_storage + \
                                                   sum_MC_MAX_IM_WE_flexibility_for_the_grid_and_storage
# print(sum_Max_OIS_flexibility_for_the_grid_and_storage)

sum_Max_OIS_Comfort = sum_HE_MAX_IM_WE_comfort + sum_HW_MAX_IM_WE_comfort + sum_CO_MAX_IM_WE_comfort + \
                      sum_VE_MAX_IM_WE_comfort + sum_LI_MAX_IM_WE_comfort + sum_DE_MAX_IM_WE_comfort + \
                      sum_EL_MAX_IM_WE_comfort + sum_EV_MAX_IM_WE_comfort + sum_MC_MAX_IM_WE_comfort
# print(sum_Max_OIS_Comfort)

sum_Max_OIS_Convenience = sum_HE_MAX_IM_WE_convenience + sum_HW_MAX_IM_WE_convenience + sum_CO_MAX_IM_WE_convenience + \
                          sum_VE_MAX_IM_WE_convenience + sum_LI_MAX_IM_WE_convenience + sum_DE_MAX_IM_WE_convenience + \
                          sum_EL_MAX_IM_WE_convenience + sum_EV_MAX_IM_WE_convenience + sum_MC_MAX_IM_WE_convenience
# print(sum_Max_OIS_Convenience)

sum_Max_OIS_WellbeingAndHealth = sum_HE_MAX_IM_WE_wellbeing_and_health + sum_HW_MAX_IM_WE_wellbeing_and_health + \
                                 sum_CO_MAX_IM_WE_wellbeing_and_health + sum_VE_MAX_IM_WE_wellbeing_and_health + \
                                 sum_LI_MAX_IM_WE_wellbeing_and_health + sum_DE_MAX_IM_WE_wellbeing_and_health + \
                                 sum_EL_MAX_IM_WE_wellbeing_and_health + sum_EV_MAX_IM_WE_wellbeing_and_health + \
                                 sum_MC_MAX_IM_WE_wellbeing_and_health
# print(sum_Max_OIS_WellbeingAndHealth)

sum_Max_OIS_Maintenance = sum_HE_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_HW_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_CO_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_VE_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_LI_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_DE_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_EL_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_EV_MAX_IM_WE_maintenance_and_fault_prediction + \
                          sum_MC_MAX_IM_WE_maintenance_and_fault_prediction

sum_Max_OIS_InformationToOccupants = sum_HE_MAX_IM_WE_information_to_occupants + \
                                     sum_HW_MAX_IM_WE_information_to_occupants + \
                                     sum_CO_MAX_IM_WE_information_to_occupants + \
                                     sum_VE_MAX_IM_WE_information_to_occupants + \
                                     sum_LI_MAX_IM_WE_information_to_occupants + \
                                     sum_DE_MAX_IM_WE_information_to_occupants + \
                                     sum_EL_MAX_IM_WE_information_to_occupants + \
                                     sum_EV_MAX_IM_WE_information_to_occupants + \
                                     sum_MC_MAX_IM_WE_information_to_occupants
# print(sum_Max_OIS_InformationToOccupants)


print("")
# SRI MAX impact scores by domain after impact weightings also applied
sum_Max_OIS_IM_energy_savings_on_site = sum_HE_MAX_IM_SC_energy_savings + sum_HW_MAX_IM_SC_energy_savings + \
                                        sum_CO_MAX_IM_SC_energy_savings + sum_VE_MAX_IM_SC_energy_savings + \
                                        sum_LI_MAX_IM_SC_energy_savings + sum_DE_MAX_IM_SC_energy_savings + \
                                        sum_EL_MAX_IM_SC_energy_savings + sum_EV_MAX_IM_SC_energy_savings + \
                                        sum_MC_MAX_IM_SC_energy_savings
# print(sum_Max_OIS_IM_energy_savings_on_site)

sum_Max_OIS_IM_flexibility_for_the_grid_and_storage = sum_HE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_HW_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_CO_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_VE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_LI_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_DE_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_EL_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_EV_MAX_IM_flexibility_for_the_grid_and_storage + \
                                                      sum_MC_MAX_IM_flexibility_for_the_grid_and_storage
# print(sum_Max_OIS_IM_flexibility_for_the_grid_and_storage)

sum_Max_OIS_IM_Comfort = sum_HE_MAX_IM_SC_comfort + sum_HW_MAX_IM_SC_comfort + sum_CO_MAX_IM_SC_comfort + \
                         sum_VE_MAX_IM_SC_comfort + sum_LI_MAX_IM_SC_comfort + sum_DE_MAX_IM_SC_comfort + \
                         sum_EL_MAX_IM_SC_comfort + sum_EV_MAX_IM_SC_comfort + sum_MC_MAX_IM_SC_comfort
# print(sum_Max_OIS_IM_Comfort)

sum_Max_OIS_IM_Convenience = sum_HE_MAX_IM_SC_convenience + sum_HW_MAX_IM_SC_convenience + \
                             sum_CO_MAX_IM_SC_convenience + sum_VE_MAX_IM_SC_convenience + \
                             sum_LI_MAX_IM_SC_convenience + sum_DE_MAX_IM_SC_convenience + \
                             sum_EL_MAX_IM_SC_convenience + sum_EV_MAX_IM_SC_convenience + \
                             sum_MC_MAX_IM_SC_convenience
# print(sum_Max_OIS_IM_Convenience)

sum_Max_OIS_IM_WellbeingAndHealth = sum_HE_MAX_IM_SC_wellbeing_and_health + sum_HW_MAX_IM_SC_wellbeing_and_health + \
                                    sum_CO_MAX_IM_SC_wellbeing_and_health + sum_VE_MAX_IM_SC_wellbeing_and_health + \
                                    sum_LI_MAX_IM_SC_wellbeing_and_health + sum_DE_MAX_IM_SC_wellbeing_and_health + \
                                    sum_EL_MAX_IM_SC_wellbeing_and_health + sum_EV_MAX_IM_SC_wellbeing_and_health + \
                                    sum_MC_MAX_IM_SC_wellbeing_and_health
# print(sum_Max_OIS_IM_WellbeingAndHealth)

sum_Max_OIS_IM_Maintenance = sum_HE_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_HW_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_CO_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_VE_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_LI_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_DE_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_EL_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_EV_MAX_IM_SC_maintenance_and_fault_prediction + \
                             sum_MC_MAX_IM_SC_maintenance_and_fault_prediction
# print(sum_Max_OIS_IM_Maintenance)

sum_Max_OIS_IM_InformationToOccupants = sum_HE_MAX_IM_SC_information_to_occupants + \
                                        sum_HW_MAX_IM_SC_information_to_occupants + \
                                        sum_CO_MAX_IM_SC_information_to_occupants + \
                                        sum_VE_MAX_IM_SC_information_to_occupants + \
                                        sum_LI_MAX_IM_SC_information_to_occupants + \
                                        sum_DE_MAX_IM_SC_information_to_occupants + \
                                        sum_EL_MAX_IM_SC_information_to_occupants + \
                                        sum_EV_MAX_IM_SC_information_to_occupants + \
                                        sum_MC_MAX_IM_SC_information_to_occupants

# print(sum_Max_OIS_IM_InformationToOccupants)

print("")
# MAX TOTAL
max_total = total_HE_MAX_sum_IM_SC + total_HW_MAX_sum_IM_SC + total_CO_MAX_sum_IM_SC + total_VE_MAX_sum_IM_SC + \
            total_LI_MAX_sum_IM_SC + total_DE_MAX_sum_IM_SC + total_EL_MAX_sum_IM_SC + total_EV_MAX_sum_IM_SC + \
            total_MC_MAX_sum_IM_SC
# print("MAX TOTAL: " + str(max_total))

print("")
# Normalised SRI impact scores by domain after impact weightings also applied
if sum_Max_OIS_IM_energy_savings_on_site > 0:
    Normalised_SRI_IM_SC_Energy_savings = sum_OIS_IM_energy_savings_on_site / sum_Max_OIS_IM_energy_savings_on_site
    # print(Normalised_SRI_IM_SC_Energy_savings)
else:
    Normalised_SRI_IM_SC_Energy_savings = 0
    # print(Normalised_SRI_IM_SC_Energy_savings)

if sum_Max_OIS_IM_flexibility_for_the_grid_and_storage > 0:
    Normalised_SRI_IM_SC_Flexibility_for_the_grid_and_storage = sum_OIS_IM_flexibility_for_the_grid_and_storage / \
                                                                sum_Max_OIS_IM_flexibility_for_the_grid_and_storage
    # print(Normalised_SRI_IM_SC_Flexibility_for_the_grid_and_storage)
else:
    Normalised_SRI_IM_SC_Flexibility_for_the_grid_and_storage = 0
    # print(Normalised_SRI_IM_SC_Flexibility_for_the_grid_and_storage)

if sum_Max_OIS_IM_Comfort > 0:
    Normalised_SRI_IM_SC_Comfort = sum_OIS_IM_Comfort / sum_Max_OIS_IM_Comfort
    # print(Normalised_SRI_IM_SC_Comfort)
else:
    Normalised_SRI_IM_SC_Comfort = 0
    # print(Normalised_SRI_IM_SC_Comfort)

if sum_Max_OIS_IM_Convenience > 0:
    Normalised_SRI_IM_SC_Convenience = sum_OIS_IM_Convenience / sum_Max_OIS_IM_Convenience
    # print(Normalised_SRI_IM_SC_Convenience)
else:
    Normalised_SRI_IM_SC_Convenience = 0
    # print(Normalised_SRI_IM_SC_Convenience)

if sum_Max_OIS_IM_WellbeingAndHealth > 0:
    Normalised_SRI_IM_SC_Wellbeing_and_health = sum_OIS_IM_WellbeingAndHealth / sum_Max_OIS_IM_WellbeingAndHealth
    # print(Normalised_SRI_IM_SC_Wellbeing_and_health)
else:
    Normalised_SRI_IM_SC_Wellbeing_and_health = 0
    # print(Normalised_SRI_IM_SC_Wellbeing_and_health)

if sum_Max_OIS_IM_Maintenance > 0:
    Normalised_SRI_IM_SC_Maintenance_and_fault_prediction = sum_OIS_IM_Maintenance / sum_Max_OIS_IM_Maintenance
    # print(Normalised_SRI_IM_SC_Maintenance_and_fault_prediction)
else:
    Normalised_SRI_IM_SC_Maintenance_and_fault_prediction = 0
    # print(Normalised_SRI_IM_SC_Maintenance_and_fault_prediction)

if sum_Max_OIS_IM_InformationToOccupants > 0:
    Normalised_SRI_IM_SC_Information_to_occupants = sum_OIS_IM_InformationToOccupants / sum_Max_OIS_IM_InformationToOccupants
    # print(Normalised_SRI_IM_SC_Information_to_occupants)
else:
    Normalised_SRI_IM_SC_Information_to_occupants = 0
    # print(Normalised_SRI_IM_SC_Information_to_occupants)

print("")
# SRI SCORE
SRI_score = (total / max_total) * 100
print("TOTAL SRI SCORE: " + str("%.2f" % round(SRI_score, 2)) + "%")
print("")

print("IMPACT SCORES")
print("")
print("Energy savings on site: " + str("%.2f" % round(Normalised_SRI_IM_SC_Energy_savings * 100, 2)) + "%")
print("Maintenance & fault prediction: " + str("%.2f" % round(Normalised_SRI_IM_SC_Flexibility_for_the_grid_and_storage * 100, 2)) + "%")
print("Comfort: " + str("%.2f" % round(Normalised_SRI_IM_SC_Comfort * 100, 2)) + "%")
print("COnvenience: " + str("%.2f" % round(Normalised_SRI_IM_SC_Convenience * 100, 2)) + "%")
print("Wellbeing and health: " + str("%.2f" % round(Normalised_SRI_IM_SC_Wellbeing_and_health * 100, 2)) + "%")
print("Information to occupants: " + str("%.2f" % round(Normalised_SRI_IM_SC_Maintenance_and_fault_prediction * 100, 2)) + "%")
print("Flexibility for the grid and storage: " + str("%.2f" % round(Normalised_SRI_IM_SC_Information_to_occupants * 100, 2)) + "%")

print("")
print("DOMAIN SCORES")
print("")
if total_HE_sum_IM_SC == 0 and total_HE_MAX_sum_IM_SC == 0:
    domain_scores_HE = 0
    print("Heating system: " + str("%.2f" % round(domain_scores_HE, 1)) + "%")
else:
    domain_scores_HE = (total_HE_sum_IM_SC / total_HE_MAX_sum_IM_SC) * 100
    print("Heating system: " + str("%.2f" % round(domain_scores_HE, 1)) + "%")

if total_HW_sum_IM_SC == 0 and total_HW_MAX_sum_IM_SC == 0:
    domain_scores_HW = 0
    print("Domestic Hot Water: " + str("%.2f" % round(domain_scores_HW, 1)) + "%")
else:
    domain_scores_HW = (total_HW_sum_IM_SC / total_HW_MAX_sum_IM_SC) * 100
    print("Domestic Hot Water: " + str("%.2f" % round(domain_scores_HW, 1)) + "%")

if total_CO_sum_IM_SC == 0 and total_CO_MAX_sum_IM_SC == 0:
    domain_scores_CO = 0
    print("Cooling system: " + str("%.2f" % round(domain_scores_CO, 1)) + "%")
else:
    domain_scores_CO = (total_CO_sum_IM_SC / total_CO_MAX_sum_IM_SC) * 100
    print("Cooling system: " + str("%.2f" % round(domain_scores_CO, 1)) + "%")

if total_VE_sum_IM_SC == 0 and total_VE_MAX_sum_IM_SC == 0:
    domain_scores_VE = 0
    print("Controlled Ventilation: " + str("%.2f" % round(domain_scores_VE, 1)) + "%")
else:
    domain_scores_VE = (total_VE_sum_IM_SC / total_VE_MAX_sum_IM_SC) * 100
    print("Controlled Ventilation: " + str("%.2f" % round(domain_scores_VE, 1)) + "%")

if total_LI_sum_IM_SC == 0 and total_LI_MAX_sum_IM_SC == 0:
    domain_scores_LI = 0
    print("Lighting: " + str("%.2f" % round(domain_scores_LI, 1)) + "%")
else:
    domain_scores_LI = (total_LI_sum_IM_SC / total_LI_MAX_sum_IM_SC) * 100
    print("Lighting: " + str("%.2f" % round(domain_scores_LI, 1)) + "%")

if total_DE_sum_IM_SC == 0 and total_DE_MAX_sum_IM_SC == 0:
    domain_scores_DE = 0
    print("Dynamic Envelope: " + str("%.2f" % round(domain_scores_DE, 1)) + "%")
else:
    domain_scores_DE = (total_DE_sum_IM_SC / total_DE_MAX_sum_IM_SC) * 100
    print("Dynamic Envelope: " + str("%.2f" % round(domain_scores_DE, 1)) + "%")

if total_EL_sum_IM_SC == 0 and total_EL_MAX_sum_IM_SC == 0:
    domain_scores_EL = 0
    print("Electricity: renewables & storage: " + str("%.2f" % round(domain_scores_EL, 1)) + "%")
else:
    domain_scores_EL = (total_EL_sum_IM_SC / total_EL_MAX_sum_IM_SC) * 100
    print("Electricity: renewables & storage: " + str("%.2f" % round(domain_scores_EL, 1)) + "%")

if total_EV_sum_IM_SC == 0 and total_EV_MAX_sum_IM_SC == 0:
    domain_scores_EV = 0
    print("Electric Vehicle Charging: " + str("%.2f" % round(domain_scores_EV, 1)) + "%")
else:
    domain_scores_EV = (total_EV_sum_IM_SC / total_EV_MAX_sum_IM_SC) * 100
    print("Electric Vehicle Charging: " + str("%.2f" % round(domain_scores_EV, 1)) + "%")

if total_MC_sum_IM_SC == 0 and total_MC_MAX_sum_IM_SC == 0:
    domain_scores_MC = 0
    print("Monitoring & Control: " + str("%.2f" % round(domain_scores_MC, 1)) + "%")
else:
    domain_scores_MC = (total_MC_sum_IM_SC / total_MC_MAX_sum_IM_SC) * 100
    print("Monitoring & Control: " + str("%.2f" % round(domain_scores_MC, 1)) + "%")
print("")
print("END")

# Bar chart
# import numpy as np
# import pandas as pd
# from pandas import Series, DataFrame
# import matplotlib.pyplot as plt

# data = [Normalised_SRI_IM_SC_Energy_savings, Normalised_SRI_IM_SC_Flexibility_for_the_grid_and_storage,
        # Normalised_SRI_IM_SC_Comfort, Normalised_SRI_IM_SC_Convenience, Normalised_SRI_IM_SC_Wellbeing_and_health,
        # Normalised_SRI_IM_SC_Maintenance_and_fault_prediction, Normalised_SRI_IM_SC_Information_to_occupants]
# plt.bar(range(len(data)), data, color='green')
# plt.show()
